import{d as e,i,r as n,z as r,b9 as a,ba as o,am as l,bb as s,o as t,l as d,w as u,f as c,u as m,bc as f,bd as p,_ as v,be as y,bf as g,j as h,aB as b,bg as V,c as O,b as T,q as I,F as S,n as x,a8 as w,aA as L,ae as C,bh as k,h as N,ac as j,ax as F,T as _,bi as B,b8 as J,bj as H,bk as $,a0 as M,a as P,aq as R,as as U,at as E,au as A}from"./index-0bb786f6.js";import{S as q}from"./index-7203eb57.js";import{_ as D,a as K}from"./empth-c0adfdba.js";import{c as z}from"./cloneDeep-bbb87a92.js";import"./PayInfo-15e83218.js";import{h as Y}from"./trial-07cd8d4e.js";import{l as G}from"./lodash-71a36420.js";import{B as Q}from"./infoCollection-2c314413.js";import{L as W}from"./index-a5402538.js";import{S as X}from"./search-cc26e254.js";const Z=e({name:"BeneficiaryItem"});var ee=v(e({...Z,props:{modelValue:{default:()=>({})},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},title:{default:"受益人"}},emits:["update:modelValue","trailChange"],setup(e,{expose:v,emit:h}){const b=e,V=i(null),O=n({validated:!1,schema:[],config:{},personVO:{}});return r((()=>b.config),(e=>{e&&Object.assign(O.config,e)}),{deep:!0,immediate:!0}),r((()=>b.schema),(e=>{e&&Object.assign(O.schema,z(b.schema))}),{deep:!0,immediate:!0}),r((()=>b.modelValue),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(a("受益人数据变动了"),Object.assign(O.personVO,e))}),{deep:!0,immediate:!0}),r((()=>O.personVO),(e=>{e&&h("update:modelValue",e)}),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=O.personVO)?void 0:e.relationToInsured}),((e,i)=>{if(e===i)return!1;a("受益人与被保人关系变动了");const{certType:n}=O.personVO||{},[r,t]=o(O.schema,{certType:n,relationToHolder:e});return l(O.config,t),!b.isView&&e&&i&&Object.assign(O.personVO,{...s(O.personVO,(e=>!(r&&"certType"===e))),relationToInsured:e}),!1}),{immediate:!0}),v({validate:e=>g(V,b.trialFactorCodes,e),validateTrialFields:()=>y({personVO:O.personVO,trialFactorCodes:b.trialFactorCodes})}),(e,i)=>(t(),d(m(p),{ref_key:"formRef",ref:V,class:"personal-info-card",title:e.title,model:m(O).personVO,schema:m(O).schema,config:m(O).config,"is-view":e.isView,"extra-provision":{objectType:m(f).BENEFICIARY,objectId:m(O).personVO.id}},{cardTitleExtra:u((()=>[c(e.$slots,"default",{},void 0,!0)])),customer:u((()=>[c(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]))}}),[["__scopeId","data-v-844ffeca"]]);const ie=["onClick"],ne=e({name:"InsuredItem"});var re=v(e({...ne,props:{modelValue:{default:()=>({})},title:{default:""},holderPersonVO:{},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},trialFactorCodes:{default:()=>[]},multiBeneficiaryMaxNum:{default:null},beneficiaryList:{default:()=>[]},beneficiarySchema:{default:()=>[]},guardian:{default:()=>({})},guardianSchema:{default:()=>[]}},emits:["update:modelValue","update:beneficiaryList","update:guardian"],setup(e,{expose:v,emit:N}){const j=e,F=i(null),_=i(null),B=i(null),J={schema:[],trialFactorCodes:[],config:{},personVO:{}},H=n({validated:!1,schema:[],config:{},personVO:{},beneficiaryTypeSchemaList:[],beneficiarySchemaList:[],beneficiaryList:[],guardianSchema:[],guardian:{}}),$=h((()=>{const{age:e,relationToHolder:i}=H.personVO;return!["4","5"].includes(i)&&+e<18||(H.guardian={},!1)})),M=()=>{H.beneficiaryList.push(z({...J,nanoid:V(),schema:j.beneficiarySchema}))},P=h((()=>!j.multiBeneficiaryMaxNum||H.beneficiaryList.length<j.multiBeneficiaryMaxNum)),R=h((()=>!H.schema.filter((e=>{var i;return!(e.hidden||(null==(i=H.config[e.name])?void 0:i.hidden))})).length)),U=h((()=>H.schema.filter((e=>e.isSelfInsuredNeed)).map((e=>e.name)))),E=h((()=>b(j.beneficiarySchema))),A=h((()=>{var e;return String(null==(e=H.personVO)?void 0:e.insuredBeneficiaryType)===Q.SPECIFY}));return r((()=>j.holderPersonVO),G.exports.debounce((e=>{var i;a("------投保人信息变动了-----");const{id:n,...r}=e||{};if("1"===String(null==(i=H.personVO)?void 0:i.relationToHolder)){const e=b(U.value)?Object.keys(r).reduce(((e,i)=>([...U.value,"occupationClass"].includes(i)&&!["birthday","age","gender"].includes(i)||(e[i]=r[i]),e)),{}):r;Object.assign(H.personVO,e)}}),300),{deep:!0,immediate:!0}),r((()=>j.beneficiarySchema),(e=>{H.beneficiarySchemaList=b(e)?e.filter((e=>"insuredBeneficiaryType"!==e.name)):[],H.beneficiaryTypeSchemaList=b(e)?e.filter((e=>"insuredBeneficiaryType"===e.name)):[]}),{deep:!0,immediate:!0}),r((()=>j.guardianSchema),(e=>{H.guardianSchema=e}),{deep:!0,immediate:!0}),r(A,((e,i)=>{String(e)!==String(i)&&(a("受益人类型关系变动了"),e?!b(H.beneficiaryList)&&M():H.beneficiaryList=[])}),{immediate:!0}),r((()=>z(H.beneficiaryList).map((e=>({personVO:e.personVO,nanoid:e.nanoid})))),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&N("update:beneficiaryList",e)}),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=H.personVO)?void 0:e.relationToHolder}),((e,i)=>{if(!e)return;a("与投保人关系变动了");const{personVO:n,schema:r=[],config:t}=H||{},{id:d,...u}=j.holderPersonVO||{},c="1"===String(n.relationToHolder),[m,f]=o(r,n);if(l(t,f),r.forEach((e=>{e.relationToHolder=n.relationToHolder,e.hidden=!e.isSelfInsuredNeed&&c})),!j.isView&&i&&String(e)!==String(i)){let e={...n,...u};c||(e={...s(n,(e=>!(m&&"certType"===e))),relationToHolder:n.relationToHolder}),Object.assign(H.personVO,e)}}),{deep:!0}),r((()=>{var e;return null==(e=H.personVO)?void 0:e.relationToMainInsured}),((e,i)=>{if(!e)return;a("次被保人与主被保人关系变动了");const{personVO:n,schema:r=[],config:t}=H||{},{certType:d}=n||{},[u,c]=o(r,{certType:d,relationToHolder:e});l(t,c),!j.isView&&i&&String(e)!==String(i)&&Object.assign(H.personVO,{...s(n,(e=>!(u&&"certType"===e))),relationToMainInsured:n.relationToMainInsured})})),r((()=>j.config),(e=>{e&&Object.assign(H.config,e)}),{deep:!0,immediate:!0}),r((()=>j.schema),((e,i)=>{e&&JSON.stringify(e)!==JSON.stringify(i)&&Object.assign(H.schema,z(e))}),{deep:!0,immediate:!0}),r((()=>j.modelValue),((e,i)=>{if(JSON.stringify(e)!==JSON.stringify(i)){const{beneficiaryList:i,...n}=e;l(H.personVO,n)}}),{deep:!0,immediate:!0}),r((()=>z(j.beneficiaryList)),G.exports.debounce(((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(H.beneficiaryList=b(e)?e.map((e=>({...e,nanoid:e.nanoid||V()}))):[])}),500),{deep:!0,immediate:!0}),r((()=>j.guardian),G.exports.debounce(((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(H.guardian=e)}),300),{deep:!0,immediate:!0}),r((()=>H.guardian),(e=>{}),{deep:!0,immediate:!0}),r((()=>H.personVO),(e=>{e&&N("update:modelValue",e)}),{deep:!0,immediate:!0}),v({validate:e=>{var i;return Promise.all([g(F,j.trialFactorCodes,e),g(_,[],e),...(null==(i=B.value)?void 0:i.map((i=>i.validate(e))))||[]])},validateTrialFields:()=>y({personVO:H.personVO,trialFactorCodes:j.trialFactorCodes})}),(e,i)=>{var n,r;const a=C,o=k;return t(),O(S,null,[T(m(p),{ref_key:"insuredFormRef",ref:F,class:"personal-info-card",title:m(R)?"":e.title,model:m(H).personVO,schema:m(H).schema,config:m(H).config,"is-view":e.isView,"extra-provision":{objectType:m(f).INSURED,objectId:m(H).personVO.id}},{cardTitleExtra:u((()=>[c(e.$slots,"default",{},void 0,!0)])),customer:u((()=>[c(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]),m($)?(t(),d(m(p),{key:0,ref:"guardianFormRef",class:"personal-info-card",title:"监护人",model:m(H).guardian.personVO,schema:m(H).guardianSchema,config:m(H).config,"is-view":e.isView,"extra-provision":{objectType:m(f).GUARDIAN,objectId:null==(r=null==(n=m(H).guardian)?void 0:n.personVO)?void 0:r.id}},{cardTitleExtra:u((()=>[c(e.$slots,"default",{},void 0,!0)])),customer:u((()=>[c(e.$slots,"customer",{},void 0,!0)])),_:3},8,["model","schema","config","is-view","extra-provision"])):I("",!0),m(E)?(t(),O(S,{key:1},[T(m(p),{ref_key:"beneficiaryTypeFormRef",ref:_,class:"personal-info-card",title:"受益人",model:m(H).personVO,schema:m(H).beneficiaryTypeSchemaList,"is-view":e.isView},null,8,["model","schema","is-view"]),m(A)?(t(),O(S,{key:0},[(t(!0),O(S,null,x(m(H).beneficiaryList,((i,n)=>(t(),d(ee,{ref_for:!0,ref_key:"beneficiaryFormRef",ref:B,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,title:`受益人${n+1}`,schema:m(H).beneficiarySchemaList,config:i.config,"is-view":e.isView},{customer:u((()=>[c(e.$slots,"benefitCustomer",{index:n},void 0,!0)])),default:u((()=>[n>0&&!e.isView?(t(),O("span",{key:0,class:"delete-button",onClick:e=>(e=>{L.confirm({message:"确定要删除该受益人吗？"}).then((()=>{H.beneficiaryList.splice(e,1)}))})(n)},[T(a,{name:"delete"})],8,ie)):I("",!0)])),_:2},1032,["modelValue","onUpdate:modelValue","title","schema","config","is-view"])))),128)),!e.isView&&m(P)?(t(),O("span",{key:0,class:"add-button",onClick:M},[T(o,{name:"plus"}),w("添加受益人")])):I("",!0)],64)):I("",!0)],64)):I("",!0),c(e.$slots,"riskList",{},void 0,!0)],64)}}}),[["__scopeId","data-v-05c1bb47"]]);const ae=e=>(E("data-v-3ab2100f"),e=e(),A(),e),oe=[ae((()=>P("img",{src:D},null,-1)))],le=["onClick"],se=[ae((()=>P("img",{src:D},null,-1)))],te=["onClick"],de=[ae((()=>P("img",{src:D},null,-1)))],ue=["onClick"],ce={class:"search-bar"},me=["src"],fe={key:1,class:"empth"},pe=[ae((()=>P("p",null,[P("img",{src:K,class:"ig"})],-1))),ae((()=>P("p",{class:"p1"},"暂时还没有客户哦～",-1)))],ve=e({name:"PersonalInfo"});var ye=v(e({...ve,props:{productFactor:{default:()=>({})},modelValue:{default:()=>({})},isTrial:{type:Boolean,default:!1},isView:{type:Boolean,default:!1},isOnlyHolder:{type:Boolean,default:!1},multiInsuredConfig:{}},emits:["update:modelValue","trailChange","trailValidateFailed","closeCustomerPopoup"],setup(e,{expose:s,emit:v}){const E=e,A=N(),D=j(),{isShare:K,saleChannelId:G}=A.query,Q=i(null),Z=i(null),ee=n({count:0,slotProps:{},uniqKey:"",currentIndex:0,currentBenifitIndex:0,currentType:"",keyword:void 0,show:!1,list:[],config:{},trialValidated:!1,holder:{personVO:{},schema:[],trialFactorCodes:[],config:{}},beneficiarySchema:[],initInsuredIList:[],insured:[]}),ie=async e=>{var i,n;ee.keyword;const r={pageNum:1,pageSize:999,queryBean:{keyword:ee.keyword||""}},a=await Y(r),o=[];Object.keys((null==(i=null==a?void 0:a.data)?void 0:i.customerMaps)||{}).forEach((e=>{var i;o.push({label:e,children:null==(i=null==a?void 0:a.data)?void 0:i.customerMaps[e]})})),ee.list=o,ee.count=null==(n=null==a?void 0:a.data)?void 0:n.count},ne=()=>{ie(ee.keyword)},ae=()=>{ie()},ve=h((()=>!E.isTrial||E.isOnlyHolder)),ye=(e,i,n)=>{ee.currentType=e,"benifit"!==e?ee.currentIndex=i:(ee.currentIndex=i,ee.currentBenifitIndex=n),ee.uniqKey=V(),ie(),ee.show=!0},ge=()=>{setTimeout((()=>{ee.show=!1}),300)},he=()=>"holder"===ee.currentType?ee.holder.schema.map((e=>e.name))||[]:"insured"===ee.currentType?ee.insured[ee.currentIndex].schema.map((e=>e.name))||[]:"benifit"===ee.currentType?ee.beneficiarySchema.map((e=>e.name))||[]:void 0,be=h((()=>{var e,i;return null==(i=null==(e=null==ee?void 0:ee.holder)?void 0:e.personVO)?void 0:i.name})),Ve=h((()=>{var e,i;return null==(i=null==(e=null==ee?void 0:ee.holder)?void 0:e.personVO)?void 0:i.gender})),Oe=h((()=>{var e,i;return null==(i=null==(e=null==ee?void 0:ee.holder)?void 0:e.personVO)?void 0:i.birthday})),Te=h((()=>{var e,i;return null==(i=null==(e=null==ee?void 0:ee.holder)?void 0:e.personVO)?void 0:i.certType})),Ie=h((()=>{var e,i;return null==(i=null==(e=null==ee?void 0:ee.holder)?void 0:e.personVO)?void 0:i.certNo})),Se=(e,i)=>{var n,r,a,o,l;console.log("convertCustomerData",e);const s=null==(n=null==e?void 0:e.contactInfo)?void 0:n.find((e=>"01"===e.contactType)),t=null==(r=null==e?void 0:e.contactInfo)?void 0:r.find((e=>"02"===e.contactType)),d=null==e?void 0:e.certInfo.filter((e=>"1"===e.certType)),u={name:null==e?void 0:e.name,gender:null==e?void 0:e.gender,birthday:null==e?void 0:e.birthday,mobile:(null==s?void 0:s.contactNo)||null,email:(null==t?void 0:t.contactNo)||null,certNo:(null==(a=null==d?void 0:d[0])?void 0:a.certNo)||null,certType:(null==(o=null==d?void 0:d[0])?void 0:o.certType)||null};console.log("insureKeys",he());const c=null==(l=he())?void 0:l.reduce(((e,i)=>u.hasOwnProperty(i)?{...e,[i]:u[i]}:e),{});return console.log("extractedObject===",c),console.log("state.holder.schema=====",ee.holder.schema),c},xe=e=>{var i,n,r,a,o,l,s,t,d,u,c;if(ee.show=!1,"holder"===ee.currentType&&Object.assign((null==(i=null==ee?void 0:ee.holder)?void 0:i.personVO)||{},Se(e)),"insured"===ee.currentType){const i=null==(n=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:n.schema.some((e=>"relationToHolder"===e.name&&e.attributeValueList.some((e=>"1"===e.code)))),{name:o,gender:l,birthday:s,certType:t,certNo:d}=Se(e);if(be.value===o&&Ve.value===l&&Oe.value===s&&Te.value===t&&Ie.value===d)return i?void Object.assign((null==(r=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:r.personVO)||{},{relationToHolder:"1"}):void _("与投保人关系未配置本人");Object.assign((null==(a=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:a.personVO)||{},Se(e))}if("benifit"===ee.currentType){const{name:i,gender:n,birthday:r,certType:a,certNo:m}=Se(e);(null==(o=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:o.personVO.name)===i&&(null==(l=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:l.personVO.gender)===n&&(null==(s=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:s.personVO.birthday)===r&&(null==(t=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:t.personVO.certType)===a&&(null==(d=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:d.personVO.certNo)===m?_("指定受益人不可为被保人本人"):Object.assign((null==(c=null==(u=null==ee?void 0:ee.insured[ee.currentIndex])?void 0:u.beneficiaryList[ee.currentBenifitIndex])?void 0:c.personVO)||{},Se(e))}},we=()=>{var e;const i=!Z.value||(null==(e=Z.value)?void 0:e.every((e=>e.validateTrialFields())));return(!Q.value||y(ee.holder))&&i},Le=e=>{var i;return Promise.all([...(null==(i=Z.value)?void 0:i.map((i=>i.validate(e))))||[],g(Q,ee.holder.trialFactorCodes,e)])},Ce=e=>{const{productList:i,config:n,schema:r,trialFactorCodes:a,beneficiaryList:o,guardian:l,personVO:s,nanoid:t,...d}=e||{};return d},ke=()=>{const{length:e,[e-1]:i}=ee.initInsuredIList;ee.insured.push(z({...i,nanoid:V()}))},Ne=h((()=>{const{multiInsuredMaxNum:e,multiInsuredSupportFlag:i}=ee.config;return i&&(!e||ee.insured.length<e)})),je=h((()=>b(ee.holder.schema))),Fe=h((()=>ee.insured.some((e=>b(e.schema))))),_e=(e,i)=>b(e)?e.reduce(((e,n)=>(e[n]=i[n],e)),{}):{},Be=(e,i,n={})=>!!b(e)&&JSON.stringify(_e(e,i))!==JSON.stringify(_e(e,n));r((()=>{var e;return null==(e=ee.holder.personVO)?void 0:e.certType}),F(((e,i)=>{if(`${e}`==`${i}`)return!1;a("投保人信息变动了====");const[n,r]=o(ee.holder.schema,{certType:e});return l(ee.holder.config,r),!1}),300)),r([()=>{var e;return{...null==(e=ee.holder)?void 0:e.personVO}},()=>ee.insured.map((e=>{const{beneficiaryList:i,guardian:n,personVO:r}=e||{},a=b(i)?i.map((e=>({...e.personVO}))):[];return{...r,guardian:n.personVO||{},beneficiaryList:a}}))],F(((e,i)=>{var n,r,o,l;if(JSON.stringify(e)===JSON.stringify(i))return!1;const[s,t]=e,d=((e,i)=>{const n=Be(ee.holder.trialFactorCodes,null==e?void 0:e[0],null==i?void 0:i[0]),r=ee.insured.some(((e,n)=>{var r;const{trialFactorCodes:a,personVO:o}=e;return Be(a,o,null==(r=i[1])?void 0:r[n])}));return n||r})([s,t],i);a(`投被保人信息变动了---${d}`);const{insuredList:u}=E.modelValue,c={holder:s,insuredList:t.map(((e,i)=>({...(null==u?void 0:u[i])||{},...e})))};if(null==(n=ee.config)?void 0:n.isSpouseInsured){const[e,i]=t.map((e=>null==e?void 0:e.gender));if(e&&i&&String(e)===String(i))return _("被保人性别与投保要求不符")}if(JSON.stringify(null==(r=null==t?void 0:t[0])?void 0:r.personVO),Ce(null==(l=null==(o=E.modelValue)?void 0:o.insuredList)?void 0:l[0]),console.log("-------result = ",c),v("update:modelValue",c),!we())return ee.trialValidated=!1,v("trailValidateFailed",c);Le(!0).then((()=>{ee.trialValidated=!0,d&&!E.isOnlyHolder&&v("trailChange",c)})).catch((()=>{ee.trialValidated=!1,v("trailValidateFailed",c)}))}),500),{deep:!0}),r([()=>E.productFactor,()=>E.isTrial],F(((e,i)=>{if(B(e,i)||!(null==e?void 0:e[0]))return!1;a("投被保人要素变动了");const{insuredFactorCodes:n,holderFactorCodes:r}=J(H)||{},{holder:o,insured:l,beneficiary:s,guardian:t,config:d}=$(e[0],{isTrial:e[1],...E.multiInsuredConfig,insuredFactorCodes:n,holderFactorCodes:r});return Object.assign(ee.holder,o),ee.config=d,b(l)&&(ee.initInsuredIList=l.map((e=>({...e,guardian:{},beneficiaryList:[]})))),ee.beneficiarySchema=z((null==s?void 0:s.schema)||[]),ee.guardianSchema=z((null==t?void 0:t.schema)||[]),!1}),300),{deep:!0,immediate:!0}),r((()=>{var e,i,n,r;return null==(r=null==(n=null==(i=null==(e=null==ee?void 0:ee.insured)?void 0:e[ee.currentIndex])?void 0:i.beneficiaryList)?void 0:n[ee.currentBenifitIndex])?void 0:r.personVO}),((e,i)=>{var n,r,o,l;(null==(l=null==(o=null==(r=null==(n=null==ee?void 0:ee.insured)?void 0:n[ee.currentIndex])?void 0:r.beneficiaryList)?void 0:o[ee.currentBenifitIndex])?void 0:l.personVO)&&(null==e?void 0:e.relationToInsured)!==(null==i?void 0:i.relationToInsured)&&(a("受益人关系变动了+++++"),ee.insured[ee.currentIndex].beneficiaryList[ee.currentBenifitIndex].personVO={relationToInsured:null==e?void 0:e.relationToInsured})}),{deep:!0,immediate:!0});const Je=i(!1);return r([()=>{const{holder:e,insuredList:i=[]}=E.modelValue,n=b(i)?i.map((e=>({config:e.config,personVO:Ce(e),guardian:{personVO:e.guardian||{}},beneficiaryList:b(e.beneficiaryList)?e.beneficiaryList.map((({config:e,...i})=>({config:e,personVO:Ce(i)}))):[]}))):[];return[null==e?void 0:e.config,Ce(e),n]},()=>ee.config,()=>ee.initInsuredIList],F((([[e,i,n]],[[r,a,o]])=>{if(JSON.stringify(e)===JSON.stringify(r)&&JSON.stringify(i)===JSON.stringify(a)&&JSON.stringify(n)===JSON.stringify(o)&&Je.value)return;Je.value=!0,Object.assign(ee.holder.config,e),console.log("投保人数据===",z(ee.holder.personVO),z(i)),console.log("投保人数据===",z(ee.holder.personVO),z(i)),Object.assign(ee.holder.personVO,i);const{length:s}=n||[],{length:t}=ee.insured,{length:d,0:u={},[d-1]:c}=ee.initInsuredIList,{multiInsuredMaxNum:m=1,multiInsuredMinNum:f=1,multiInsuredSupportFlag:p}=(null==ee?void 0:ee.config)||{},v=E.isView||s>t?Math.min(s,m):t||f;ee.insured=Array.from({length:v}).reduce(((e,i,r)=>{const{personVO:a,config:o={},guardian:s,beneficiaryList:t}=(null==n?void 0:n[r])||{},d=z(0===r?u:c);return e[r]?l(e[r],{...z(d),personVO:a,config:o,guardian:s,beneficiaryList:t}):e[r]={...d,personVO:a,config:o,guardian:s,beneficiaryList:t,nanoid:V()},e}),ee.insured)}),300),{deep:!0,immediate:!0}),r((()=>ee.list),((e,i)=>{e&&(ee.list=e)})),s({validate:Le,validateTrialFields:we,validateHolder:(...e)=>{var i;return null==(i=Q.value)?void 0:i.validate(...e)},canTrail:()=>ee.trialValidated}),(e,i)=>{var n,r;const a=C,o=k,l=R,s=q,v=U;return t(),O(S,null,[m(je)&&m(ve)?(t(),d(m(p),{key:0,ref_key:"holderFormRef",ref:Q,title:"投保人信息",class:"personal-info-card",model:m(ee).holder.personVO,schema:m(ee).holder.schema,config:m(ee).holder.config,"is-view":e.isView,"extra-provision":{objectType:m(f).HOLDER,objectId:null==(r=null==(n=m(ee).holder)?void 0:n.personVO)?void 0:r.id}},{customer:u((()=>[(t(),O("div",{key:0,class:"choose-customer",onClick:i[0]||(i[0]=e=>ye("holder",1,0))},oe))])),_:1},8,["model","schema","config","is-view","extra-provision"])):I("",!0),m(Fe)&&!e.isOnlyHolder?(t(),O(S,{key:1},[(t(!0),O(S,null,x(m(ee).insured,((i,n)=>{var r;return t(),d(re,M({ref_for:!0,ref_key:"insuredFormRef",ref:Z,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,"beneficiary-list":i.beneficiaryList,"onUpdate:beneficiaryList":e=>i.beneficiaryList=e,guardian:i.guardian,"onUpdate:guardian":e=>i.guardian=e,title:""+(m(ee).insured.length>1?`被保人${n+1}`:"被保人信息"),"holder-person-v-o":m(ee).holder.personVO},i,{"beneficiary-schema":m(ee).beneficiarySchema,"guardian-schema":m(ee).guardianSchema,"is-view":e.isView,"multi-beneficiary-num":null==(r=m(ee).config)?void 0:r.multiBeneficiaryMaxNum}),{riskList:u((()=>[c(e.$slots,"riskInfo",{insuredIndex:n},void 0,!0)])),customer:u((()=>[1==+i.personVO.relationToHolder||m(K)||e.isView||e.isTrial||m(D)?I("",!0):(t(),O("div",{key:0,class:"choose-customer",onClick:e=>ye("insured",n,0)},se,8,le))])),benefitCustomer:u((i=>[m(K)||e.isView||e.isTrial||m(D)?I("",!0):(t(),O("div",{key:0,class:"choose-customer",onClick:e=>ye("benifit",n,null==i?void 0:i.index)},de,8,te))])),default:u((()=>[!e.isView&&n+1>m(ee).config.multiInsuredMinNum?(t(),O("span",{key:0,class:"delete-button",onClick:e=>(e=>{L.confirm({message:"确定要删除该被保人吗？"}).then((()=>{ee.insured.splice(e,1)}))})(n)},[T(a,{name:"delete",color:"var(--van-primary-color)"})],8,ue)):I("",!0)])),_:2},1040,["modelValue","onUpdate:modelValue","beneficiary-list","onUpdate:beneficiaryList","guardian","onUpdate:guardian","title","holder-person-v-o","beneficiary-schema","guardian-schema","is-view","multi-beneficiary-num"])})),128)),!e.isView&&m(Ne)?(t(),d(l,{key:0,class:"add-button-wrap"},{title:u((()=>[P("span",{class:"add-button",onClick:ke},[T(o,{name:"plus"}),w("添加被保人")])])),_:1})):I("",!0)],64)):I("",!0),m(ee).show?(t(),d(v,{key:2,round:!1,show:m(ee).show,closeable:!1,onClose:ge,onClosed:e.onClosePopupAfterAni},{default:u((()=>[P("div",ce,[T(s,{modelValue:m(ee).keyword,"onUpdate:modelValue":i[1]||(i[1]=e=>m(ee).keyword=e),placeholder:"客户 姓名/手机号",class:"icon-sercher",onSearch:ne,onCancel:ae},{"left-icon":u((()=>[P("img",{src:m(X),alt:"",class:"search-icon-img",style:{width:"22px",height:"23px"}},null,8,me)])),_:1},8,["modelValue"])]),m(ee).count?(t(),d(W,{key:0,data:m(ee).list,type:e.order,disabled:!1,onOnClose:xe},null,8,["data","type"])):(t(),O("div",fe,pe))])),_:1},8,["show","onClosed"])):I("",!0)],64)}}}),[["__scopeId","data-v-3ab2100f"]]);export{ye as P};
