import{_ as e,d as i,j as t,i as a,h as s,r,k as l,aH as u,aI as o,T as d,z as n,aG as c,O as p,o as f,c as v,g as k,a as m,b as L,u as y,m as h,f as R,F as C,q as I,w as g,e as b,a8 as P,aJ as D,aK as O,aL as V,aM as j,a6 as T,aN as S,aO as M,aP as E,aQ as _,aE as F,aF as w}from"./index-4f878428.js";import{c as A}from"./cloneDeep-31dd2306.js";import{_ as N}from"./InsureInfos-e055e29c.js";import{P as x}from"./index-cfbca796.js";import{P as $,R as K,b as q}from"./trial-34347d78.js";import{_ as B,P as U,B as Q}from"./constants-7e72c1c9.js";import{u as H,c as J,p as G,d as z,e as W,q as Y}from"./trial-76e92b21.js";import{P as X}from"./config-98e8d477.js";import{u as Z}from"./useOrder-788a898d.js";import{t as ee}from"./utils-62e127ee.js";import{n as ie}from"./nextStep-8c344496.js";import{t as te}from"./format-31cde443.js";import"./index-85b786dc.js";import"./index-26c858c0.js";import"./infoCollection-27c16b65.js";import"./product-7bbf9c44.js";import"./PolicyInfo-ef327f17.js";import"./lodash-6e3a0c04.js";import"./questionnaire-42dcb602.js";import"./util-15e4deda.js";import"./createProposal-e34b42da.js";import"./core-66734bfb.js";import"./constants-4b08cf92.js";const ae=(e,i)=>{const t=[],a={};return null==e||e.forEach((e=>{a[e.riskId]=e})),null==i||i.forEach((e=>{var i,s,r,l;const{collocationType:u,collocationRiskId:o,riskId:d}=e;switch(u){case 2:{const e=null==(i=a[d])?void 0:i.riskName,r=null==(s=a[o])?void 0:s.riskName;t.push(`${e} 和 ${r} 必须同时投保`);break}case 3:{const e=null==(r=a[d])?void 0:r.riskName,i=null==(l=a[o])?void 0:l.riskName;t.push(`${e} 和 ${i} 不能同时投保`);break}}})),t};const se=e=>(F("data-v-87062eda"),e=e(),w(),e),re={class:"com-body"},le={class:"trial-body"},ue={class:"container"},oe={class:"container"},de={key:0,class:"product-list"},ne={key:0,class:"operate-bar"},ce=["onClick"],pe=["onClick"],fe={class:"premium-item"},ve=se((()=>m("span",{class:"label"},"首期保费",-1))),ke={class:"price"},me={key:1,class:"add-main-risk"},Le=se((()=>m("div",{class:"empty"},null,-1))),ye=i({name:"TrialBodyLian"});var he=e(i({...ye,props:{selfKey:{default:""},dataSource:{default:()=>[]},productInfo:{default:()=>({productCode:"",productName:"",insurerCode:"",tenantId:"",planList:[]})},tenantProductDetail:{default:()=>({})},hideBenefit:{type:Boolean,default:!1},hidePopupButton:{type:Boolean,default:!1},title:{default:"算一算保费"},defaultData:{default:null},isTrial:{type:Boolean,default:!1},defaultOrder:{default:()=>({})},productCollection:{default:()=>({})},productFactor:{default:()=>({})},productRiskCodeMap:{default:()=>({})}},emits:["trialStart","trialEnd","update:userData","closeCustomerPopoup","addRisk","addMainRisk","deleteRisk","update-bank"],setup(e,{expose:i,emit:F}){const w=e,se=t(null),ye=a();s();const{tenantId:he,templateId:Re,preview:Ce}=ye.query,Ie=t(),ge=r({loading:!1,show:!1,select:{},list:[],userData:{},riskIsInsure:{},submitData:{},riskList:{},mainRiskVO:{},ifPersonalInfoSuccess:!1,trialMsg:"",trialResultPremium:0,trialResult:{initialPremium:0,initialAmount:0},isAniShow:!1,defaultValue:null,isAutoChange:!1,planIndex:0,isSkipFirstTrial:!1,hadSkipFirstTrial:!1,isQuerying:!1,currentPlanCode:""}),be=Z();t();const Pe=t(),De=t(w.dataSource),Oe=t([]),Ve=t(),je=t(),Te=t({}),Se=l((()=>{var e;let i=!1;return((null==(e=w.productRiskCodeMap)?void 0:e.productList)||[]).forEach((e=>{e.mergeRiskReqList.find((e=>1===e.exemptType))&&(i=!0)})),i})),Me=t({}),Ee=u((async(e,i=!0)=>{ge.trialMsg="试算中...",ge.trialResultPremium=0,ge.loading=!0,F("trialStart");let t=!1;if(i){const{code:i}=await H(e);t="10000"===i}!t&&i||(ge.isQuerying=!0,w.hideBenefit||J(e).then((e=>{e.data&&e.code===o&&(Me.value=e.data)})).finally((()=>{ge.loading=!1})),G(e).then((({code:i,data:t})=>{var a,s;t&&i===o&&((null==t?void 0:t.errorInfo)&&d(`${null==t?void 0:t.errorInfo}`),ge.trialMsg="",ge.trialResultPremium=t.initialPremium,ge.trialResult=t,null==(s=null==(a=t.insuredPremiumList)?void 0:a[0])||s.productPremiumList.forEach((e=>{Te.value[e.productCode]=e.riskPremiumDetailVOList})),F("trialEnd",t,e))})).finally((()=>{ge.loading=!1,ge.isQuerying=!1})))}),500),_e=l((()=>{var e,i;return![$.SINGLE_PRODUCT,$.TWO_PRODUCT].includes(null==(i=null==(e=Object.values(w.productCollection))?void 0:e[0])?void 0:i.productClass)})),Fe=()=>{F("addMainRisk",ge.userData.insuredList)},we=e=>{const{holder:i,insuredList:t}=e||{};i&&(ge.submitData.holder=i),t&&t.length>0&&t.forEach(((e,i)=>{var t;ge.submitData.insuredList&&ge.submitData.insuredList.length>i?ge.submitData.insuredList[i]=e:((null==(t=ge.submitData)?void 0:t.insuredList)||(ge.submitData.insuredList=[]),ge.submitData.insuredList.push(e))}))},Ae=l((()=>w.productInfo.planList&&w.productInfo.planList.length>2)),Ne=(e,i)=>{if(e){const t=["birthday","age","gender","id"];i.includes("occupationCodeList")&&t.push("occupationClass"),Object.keys(e).forEach((a=>{[...i,...t].includes(a)||(e[a]=null)}))}},xe=(e,i=(e=>!0))=>O(e)?e.filter(i).map((e=>e.code)):[],$e=()=>{console.log("--current plan = ",De.value),console.log("---current submit = ",ge.submitData);const e=A(ge.submitData);if(!Ae.value)return e;const{1:i,2:t,3:a}=De.value.productFactor||{};if(e.holder&&Ne(e.holder,xe(i)),e.insuredList){const i=["productList","beneficiaryList"],s=xe(t,(e=>"2"!==String(e.subModuleType))),r=xe(t,(e=>"2"===String(e.subModuleType))),l=O(r),u=xe(a),o=O(u);e.insuredList.forEach(((e,t)=>{var a,d,n;Ne(e,[...t>=1&&l?r:s,...i,...o?["insuredBeneficiaryType"]:[]]),(null==(a=e.beneficiaryList)?void 0:a.length)>0&&(o?e.beneficiaryList.forEach((e=>Ne(e,u))):e.beneficiaryList.length=0),e.planCode=De.value.planCode;const c=(null==(n=null==(d=e.productList)?void 0:d[0])?void 0:n.riskList)||[],p=De.value.insureProductRiskVOList||[];if(c.length&&p){const i=c.filter((e=>null!==p.find((i=>i.riskCode===e.riskCode))));e.productList[0].riskList=i}}))}return e},Ke=["annuityDrawDate","coveragePeriod","chargePeriod","paymentFrequency"],qe=()=>{var e,i,t,a,s;if(!(null==(e=Object.keys(je))?void 0:e.length)||ge.ifPersonalInfoSuccess||(null==(t=null==(i=Ie.value)?void 0:i.canTrail)?void 0:t.call(i))){ge.submitData.tenantId=`${he}`,(null==(a=ge.submitData.insuredList)?void 0:a.length)&&(ge.submitData.insuredList=null==(s=ge.submitData)?void 0:s.insuredList.map((e=>({...e,productList:null==e?void 0:e.productList.map((e=>({...e,riskList:ge.riskList[e.productCode]})))}))));const e=$e();console.log(">>>数据构建<<<",e),Ee(e)}},Be=async e=>{var i,t,a;console.log("人的信息更改了"),we(e),ge.ifPersonalInfoSuccess=!0,console.log("处理第一被保人修改的dy变化"),(null==(a=null==(t=null==(i=ge.userData.insuredList)?void 0:i[0])?void 0:t.productList)?void 0:a.length)&&qe()};l((()=>{var e;return((null==(e=ge.userData)?void 0:e.insuredList)||[]).map((e=>e.birthday)).join(",")})),n([()=>{var e;return((null==(e=ge.userData)?void 0:e.insuredList)||[]).map((e=>e.birthday)).join(",")},()=>Ve.value],(async([e])=>{if(e){const e=ge.userData.insuredList.filter((e=>e.birthday))||[];if(!e.length)return;const i=Object.keys(Ve.value).map((e=>({productCode:e,planCode:"",riskEditVOList:Ve.value[e].productPlanInsureVOList[0].insureProductRiskVOList.map((e=>({insureProductRiskVO:e})))})));console.log("factorList",i,Ve.value),await z({calcProductFactorList:i,insuredVOList:e,holderVO:ge.userData.holder})}}),{});const Ue=async(e,i,t)=>{if(i){const a=A(e);delete a.insurancePeriodValueList,delete a.paymentFrequencyList,delete a.paymentPeriodValueList;if(Ke.indexOf(i.key)>=0&&`${i.oldValue}`!=`${i.newValue}`){const s={};switch(i.key){case"annuityDrawDate":s.changeType=3;break;case"coveragePeriod":s.changeType=2;break;case"chargePeriod":s.changeType=1;break;case"paymentFrequency":s.changeType=4}const r=((e,i,t)=>{var a,s;let r=null,l=null,u=null,o=null;if(t===K.RIDER_RISK){const t=null==(a=Ve.value[e].productPlanInsureVOList)?void 0:a[0].insureProductRiskVOList.find((e=>e.riskCode===i)),{mainRiskCode:s,productRiskInsureLimitVO:d}=t,{paymentPeriodRule:n,paymentTypeRule:c,insurancePeriodRule:p}=d||{};r=n,l=c,u=p,o=s}return null==(s=Ve.value[e].productPlanInsureVOList)?void 0:s[0].insureProductRiskVOList.filter((e=>{if(t===K.MAIN_RISK){const{paymentPeriodRule:i,paymentTypeRule:t,insurancePeriodRule:a}=e.productRiskInsureLimitVO||{};r=i,l=t,u=a}return!(t!==K.MAIN_RISK||e.mainRiskCode!==i||![r,l,u].includes(q.MAIN_RISK_SAME)&&![r,l,u].includes(q.MAIN_RISK_1))||!(t===K.MAIN_RISK||e.riskCode!==i&&e.riskCode!==o||![r,l,u].includes(q.MAIN_RISK_SAME)&&![r,l,u].includes(q.MAIN_RISK_1))||e.riskCode===i}))})(t,e.riskCode,e.riskType).flat(),l=(r||[]).map((i=>i.riskCode!==e.riskCode?{insureProductRiskVO:i,insureRiskEditReqVO:null}:{insureProductRiskVO:i,insureRiskEditReqVO:{riskId:e.riskId,riskCode:e.riskCode,...a,...s}}));ge.isQuerying=!0;const u=ge.userData.insuredList.filter((e=>e.birthday))||[];if(!u.length)return!1;const o=await z({calcProductFactorList:[{planCode:De.value.planCode,productCode:t,riskEditVOList:l}],insuredVOList:u,holderVO:ge.userData.holder});ge.isQuerying=!1;const d=((e,i)=>{var t,a,s,r,l,u,o,d;if(null==(a=null==(t=null==e?void 0:e.data)?void 0:t[0])?void 0:a.productRiskDyInsureFactorVOList){const t=[];if(null==(l=null==(r=null==(s=Ve.value[i])?void 0:s.productPlanInsureVOList)?void 0:r[0])||l.insureProductRiskVOList.forEach((a=>{var s,r;const l=null==(r=null==(s=null==e?void 0:e.data)?void 0:s[0])?void 0:r.productRiskDyInsureFactorVOList.find((e=>e.riskCode===a.riskCode));if(l){a.productRiskInsureLimitVO={...a.productRiskInsureLimitVO,...l};const e=ge.riskList[i].find((e=>e.riskCode===a.riskCode));X.forEach((i=>{var t;if(Ke.indexOf(i.valueKey)>=0){const s=a.productRiskInsureLimitVO[null==(t=i.configKey)?void 0:t[0]];if(s&&e){const t=s.find((t=>t.code===e[i.valueKey]));if(t&&2===t.useFlag){const t=s.find((e=>1===e.defaultFlag));e[i.valueKey]=t.code}}}})),t.push({...e,...l,riskCode:a.riskCode})}})),t.length>0&&(null==(d=null==(o=null==(u=ge.defaultValue)?void 0:u.insuredList)?void 0:o[0])?void 0:d.productList))return t.forEach((e=>{var i,t,a;ge.defaultValue.insuredList[0].productList=null==(a=null==(t=null==(i=ge.defaultValue)?void 0:i.insuredList)?void 0:t[0])?void 0:a.productList.map((i=>(i.riskList=null==i?void 0:i.riskList.map((i=>(i.riskCode===e.riskCode&&(i=e),i))),i)))})),!1}return!0})(o,t);return d||(ge.isAutoChange=!0),d}}return!0},Qe=e=>{ge.userData=e,ge.defaultValue=e},He=async e=>{var i;if(w.defaultData){const e=w.defaultData.find((e=>e.productCode===w.productInfo.productCode))||w.defaultData[0];Qe(e),we(null==(i=w.defaultData)?void 0:i[0])}else Oe.value.push(De.value.planCode),await(async()=>{var e;const i=await Y({calcProductFactorList:[{productCode:null==(e=Object.keys(w.productCollection))?void 0:e[0]}]});i.data&&(Qe(i.data),we(i.data))})()};c((()=>{var e,i;ge.riskIsInsure={},null==(i=null==(e=De.value)?void 0:e.insureProductRiskVOList)||i.forEach((e=>{var i;const t=null==(i=De.value.productRiskRelationVOList)?void 0:i.find((i=>i.collocationRiskId===e.riskId));t&&(ge.riskIsInsure[e.riskCode]={selected:"2",data:null,relation:t})}))})),p((()=>{De.value=w.dataSource,ge.loading=!0,ge.show=!0,ge.isAniShow=!0,ge.isSkipFirstTrial=!0,ge.hadSkipFirstTrial=!1}));return i({getTrialSuccessFlag:()=>ge.trialResultPremium>0,getRiderRiskDefaultValue:async(e,i,t)=>{var a,s,r;const l=ge.riskList[e].find((e=>e.riskCode===t)),{code:u,data:o}=await W({holder:ge.userData.holder,insuredList:ge.userData.insuredList,calcRiskDefaultFactorVO:{mainRiskInfo:l,riskCodeList:i}});if("10000"===u){let t=0;t=ge.riskList[e].findIndex(((e,t)=>e.riskCode===i[0])),ge.defaultValue.insuredList[0].productList=null==(r=null==(s=null==(a=ge.defaultValue)?void 0:a.insuredList)?void 0:s[0])?void 0:r.productList.map((i=>(e===i.productCode&&(i.riskList=[...i.riskList.slice(0,t),...o,...i.riskList.slice(t,i.riskList.length)]),i)))}},getProductDefaultValue:async e=>{const{code:i,data:t}=await Y({calcProductFactorList:e.map((e=>({productCode:e}))),holderVO:ge.userData.holder,insuredVOList:ge.userData.insuredList});"10000"===i&&(ge.defaultValue.insuredList[0].productList=t.insuredList[0].productList,Object.assign(ge.userData,t))},validate:()=>Ie.value.validate(!1),validateTrialFields:()=>Ie.value.validateTrialFields(),validateHolder:e=>{var i;return null==(i=Ie.value)?void 0:i.validateHolder(e)},getUserData:()=>({...ge.userData}),onShare:e=>{var i;ge.trialResultPremium&&(null==(i=se.value)||i.validate().then((()=>{Object.assign(be.value,w.defaultOrder,{extInfo:{...be.value.extInfo,buttonCode:Q.TRIAL_PREMIUM,pageCode:U.TRIAL_PREMIUM,templateId:Re}});const i=ee(w.productInfo,ge.trialResult,be.value);ie(i,((i,t)=>{t===j.JUMP_PAGE&&(Pe.value.link=`${window.location.href}&isShare=1&orderNo=${i.orderNo}`,e())})),console.log("---- validate success ----")})))},onNext:e=>{const{productCode:i,productName:t}=w.productInfo;Ce?V(U.TRIAL_PREMIUM,ye.query):ge.trialResultPremium&&(Promise.all(se.value.map((e=>e.validate()))).then((()=>{var a,s;Object.assign(be.value,w.defaultOrder,{extInfo:{templateId:Re,...null==(a=be.value)?void 0:a.extInfo,...(null==(s=w.defaultOrder)?void 0:s.extInfo)||{},buttonCode:Q.TRIAL_PREMIUM,pageCode:U.TRIAL_PREMIUM}});const r=ee({...$e(),productCode:i,productName:t},ge.trialResult,be.value);null==e||e(r),console.log("---- validate success ----")})),ge.loading=!1,ge.show=!0,ge.isAniShow=!0)},dealMixData:$e}),n((()=>ge.userData),(e=>{if(e){const{holder:i,insuredList:t}=e||{},a={holder:i,insuredList:t};Object.assign(ge.submitData,a),F("update:userData",a)}}),{immediate:!0,deep:!0}),n((()=>w.dataSource),(e=>{De.value=e}),{deep:!0,immediate:!0}),n((()=>w.productCollection),((e,i)=>{Object.keys(e||{}).length&&!ge.defaultValue&&He(),Ve.value=e,Object.keys(e||[]).forEach((i=>{ge.riskList[i]=e[i].productPlanInsureVOList[0].insureProductRiskVOList.map((e=>(ge.riskList[i]||[]).find((i=>i.riskCode===e.riskCode))||e))}))}),{deep:!0,immediate:!0}),n((()=>w.productFactor),(e=>{je.value=e}),{deep:!0,immediate:!0}),n((()=>w.defaultData),((e,i)=>{JSON.stringify(A(e))!==JSON.stringify(A(i))&&(ge.defaultValue=e,ge.userData=e||{},e&&(be.value=e||{}))}),{deep:!0,immediate:!0}),(i,t)=>{var a,s,r;const l=S,u=M,o=E,d=_;return f(),v("div",re,[k(i.$slots,"trialHead",{},void 0,!0),m("div",le,[L(B,{labels:y(ae)((null==(a=De.value)?void 0:a.insureProductRiskVOList)||[],De.value.productRiskRelationVOList)},null,8,["labels"]),m("div",ue,[(null==(s=Object.keys(je.value))?void 0:s.length)?(f(),h(x,{ref_key:"personalInfoRef",ref:Ie,key:De.value.planCode,modelValue:y(ge).userData,"onUpdate:modelValue":t[0]||(t[0]=e=>y(ge).userData=e),"is-holder-exempt":y(Se),"is-trial":e.isTrial,"product-factor":je.value,"multi-insured-config":null==(r=De.value)?void 0:r.multiInsuredConfigVO,onTrailChange:Be,onUpdateBank:t[1]||(t[1]=e=>i.$emit("update-bank",e))},null,8,["modelValue","is-holder-exempt","is-trial","product-factor","multi-insured-config"])):R("",!0)]),k(i.$slots,"middleInfo",{},void 0,!0),L(l,{size:"large"}),m("div",oe,[L(u,{title:"保障计划",class:"insurePlan","show-divider":!1}),Object.keys(Ve.value).length?(f(),v("div",de,[(f(!0),v(C,null,I(Object.keys(Ve.value),((i,t)=>(f(),v("div",{key:i,class:"product-item"},[(f(!0),v(C,null,I(Ve.value[i].productPlanInsureVOList[0].insureProductRiskVOList||[],((a,s)=>{var r,l,u,d,n,c,p,k,h,C,I,P;return f(),v("div",{key:`${i}-${a.riskCode}`,class:"risk-item"},[L(o,{title:a.riskName,"risk-type":a.riskType},{default:g((()=>[e.isTrial?(f(),v("div",ne,[a.riskType===y(K).MAIN_RISK?(f(),v("div",{key:0,class:"add-risk btn",onClick:e=>((e,i)=>{const t=ge.riskList[e].find((e=>e.riskCode===i));F("addRisk",e,t,ge.userData.insuredList)})(i,a.riskCode)}," +附加险 ",8,ce)):R("",!0),m("div",{class:"delete-risk btn",onClick:e=>((e,i,t)=>{D.confirm({message:"删除后将无法恢复，是否需要删除该产品？"}).then((()=>{var a,s;i?(ge.defaultValue.insuredList[0].productList=ge.defaultValue.insuredList[0].productList.map((i=>(i.productCode===e&&(i.riskList=i.riskList.filter((e=>e.riskCode!==t))),i))),ge.userData.insuredList[0].productList=ge.userData.insuredList[0].productList.map((i=>(i.productCode===e&&(i.riskList=i.riskList.filter((e=>e.riskCode!==t))),i)))):(ge.defaultValue.insuredList[0].productList=ge.defaultValue.insuredList[0].productList.filter((i=>i.productCode!==e)),ge.userData.insuredList[0].productList=ge.userData.insuredList[0].productList.filter((i=>i.productCode!==e))),(null==(s=null==(a=ge.userData.insuredList[0])?void 0:a.productList)?void 0:s.length)?Ee(ge.userData):ge.trialResult={initialPremium:0,initialAmount:0},F("deleteRisk",e,t,i)}))})(i,a.mainRiskCode,a.riskCode)}," 删除 ",8,pe)])):R("",!0)])),_:2},1032,["title","risk-type"]),L(N,{ref_for:!0,ref_key:"insureInfosRef",ref:se,"origin-data":a,"product-factor":De.value.productFactor,"default-value":y(ge).defaultValue?null==(c=null==(n=null==(d=null==(u=null==(l=null==(r=y(ge).defaultValue)?void 0:r.insuredList)?void 0:l[0])?void 0:u.productList)?void 0:d[t])?void 0:n.riskList)?void 0:c[s]:null,"trial-result":null==(h=null==(k=null==(p=Te.value)?void 0:p[i])?void 0:k[s])?void 0:h.initialAmount,onTrialChange:(e,t)=>(async(e,i,t)=>{var a,s,r;if((null==(s=null==(a=ge.riskList)?void 0:a[t])?void 0:s.find((i=>i.riskCode===e.riskCode)))?ge.riskList[t]=ge.riskList[t].map((i=>i.riskCode===e.riskCode?e:i)):(null==(r=ge.riskList[t])?void 0:r.length)?ge.riskList[t].push(e):ge.riskList[t]=[e],e.exemptFlag!==T.YES&&!(await Ue(e,i,t)))return;console.log("标准险种的信息回传",e),qe()})(e,t,i)},null,8,["origin-data","product-factor","default-value","trial-result","onTrialChange"]),m("div",fe,[ve,m("span",ke,b(y(te)(null==(P=null==(I=null==(C=Te.value)?void 0:C[i])?void 0:I[s])?void 0:P.initialPremium)),1)])])})),128))])))),128))])):R("",!0),y(_e)&&e.isTrial?(f(),v("div",me,[L(d,{activated:"",onClick:Fe},{default:g((()=>[P("+新增主险")])),_:1})])):R("",!0)]),Le]),k(i.$slots,"trialBtn",{trialData:y(ge).submitData,riskPremium:y(ge).trialResult,loading:y(ge).isQuerying,personalInfoRef:Ie.value},void 0,!0)])}}}),[["__scopeId","data-v-87062eda"]]);export{he as default};
