import{d as e,j as i,r as n,A as r,aK as o,o as a,p as s,w as l,g as t,u as d,bj as u,bk as c,_ as m,bl as p,bm as f,bn as g,T as v,bo as y,bp as V,ap as h,aM as O,ai as b,bq as T,a6 as I,k as L,aO as S,br as C,bg as x,bs as w,c as k,b as j,f as F,F as $,s as H,a8 as N,aN as E,G as B,bt as _,af as P,bu as A,i as M,ad as J,bv as R,bw as U,bx as Y,a0 as D,a as q,a9 as G,bd as K,bi as z,by as Q,bz as W,bA as X}from"./index-7888b407.js";import{c as Z}from"./cloneDeep-f7dcc649.js";import"./PolicyInfo-abcca7e2.js";import{l as ee}from"./lodash-b0c5aaba.js";import{B as ie}from"./infoCollection-4bc53fdc.js";import{O as ne}from"./questionnaire-42dcb602.js";import{s as re,g as oe,a as ae,c as se,b as le,t as te,i as de}from"./util-73fba688.js";const ue=e({name:"BeneficiaryItem"});var ce=m(e({...ue,props:{modelValue:{default:()=>({})},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},title:{default:"受益人"},holderPersonVO:{default:()=>({})},beneficiaryList:{default:()=>[]}},emits:["update:modelValue","trailChange"],setup(e,{expose:m,emit:L}){const S=e,C=i(null),x=n({validated:!1,schema:[],config:{},personVO:{}});r((()=>S.config),(e=>{e&&Object.assign(x.config,e)}),{deep:!0,immediate:!0}),r((()=>S.schema),(e=>{e&&(g(S.schema,S.modelValue,(()=>{x.personVO.certType="1"})),Object.assign(x.schema,Z(S.schema)))}),{deep:!0,immediate:!0}),r((()=>Z(S.modelValue)),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(Object.assign(x.personVO,e),g(S.schema,S.modelValue,(()=>{Object.assign(x.personVO,{certType:"1"})})))}),{deep:!0,immediate:!0}),r((()=>Z(x.personVO)),((e,i)=>{if(e){if(`${x.personVO.isHolder}`!=`${I.YES}`&&(Object.keys(x.personVO).filter((e=>{var i,n;return!(!["gender","birthday","certType","certNo","name"].includes(e)||!x.personVO[e]||`${null==(i=x.personVO)?void 0:i[e]}`!=`${null==(n=null==S?void 0:S.holderPersonVO)?void 0:n[e]}`)}))||[]).length>=2&&v("录入的受益人同投保人基本信息，请勾选“同投保人"),["2","3"].includes(`${null==e?void 0:e.relationToInsured}`)&&(null==e?void 0:e.relationToInsured)!==(null==i?void 0:i.relationToInsured)&&(null==i?void 0:i.relationToInsured)){console.log("2324234");S.beneficiaryList.find((i=>{var n;return`${null==e?void 0:e.relationToInsured}`==`${null==(n=i.personVO)?void 0:n.relationToInsured}`}))&&v("已存在配偶关系的受益人")}L("update:modelValue",e)}}),{deep:!0,immediate:!0});return r((()=>S.holderPersonVO),o((e=>{(e=>{var i,n;const r={};(null==(i=x.personVO)?void 0:i.age)&&(null==(n=x.personVO)?void 0:n.age)<18&&(x.schema.find((e=>"mobile"===e.name))&&(r.mobile=(null==e?void 0:e.mobile)||""),x.schema.find((e=>"annuallyComeList"===e.name))&&(r.annuallyComeList=["7"],r.annuallyComeDesc="无")),Object.assign(x.personVO,r)})(e)}),300),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=x.personVO)?void 0:e.relationToInsured}),((e,i)=>{if(e===i)return!1;y("受益人与被保人关系变动了");const{certType:n}=x.personVO||{},[r,o]=V(x.schema,{certType:n,relationToHolder:e}),a={gender:{...o.gender,isView:S.isView}};if(!S.isView&&e!==i&&i){let i=null;"3"==`${e}`&&(a.gender.isView=!0,i=h.FEMALE),"2"==`${e}`&&(a.gender.isView=!0,i=h.MALE),Object.assign(x.personVO,{...O(x.personVO,(e=>!(r&&"certType"===e))),gender:i,relationToInsured:e})}return b(x.config,o,a),!1}),{immediate:!0}),r((()=>{var e;return null==(e=x.personVO)?void 0:e.nationalityCode}),((e,i)=>{e!==i&&b(x.config,T(x.personVO))}),{immediate:!0}),m({validate:e=>f(C,S.trialFactorCodes,e),validateTrialFields:()=>p({personVO:x.personVO,trialFactorCodes:S.trialFactorCodes})}),(e,i)=>(a(),s(d(c),{ref_key:"formRef",ref:C,class:"personal-info-card",title:e.title,model:d(x).personVO,schema:d(x).schema,config:d(x).config,"is-view":e.isView,"extra-provision":{objectType:d(u).BENEFICIARY,objectId:d(x).personVO.id}},{cardTitleExtra:l((()=>[t(e.$slots,"default",{},void 0,!0)])),"header-item":l((()=>[t(e.$slots,"header-item",{},void 0,!0)])),customer:l((()=>[t(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]))}}),[["__scopeId","data-v-6f632816"]]);const me=["onClick"],pe=e({name:"InsuredItem"});var fe=m(e({...pe,props:{modelValue:{default:()=>({})},title:{default:""},holderPersonVO:{default:()=>({})},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},trialFactorCodes:{default:()=>[]},multiBeneficiaryMaxNum:{default:null},beneficiaryList:{default:()=>[]},beneficiarySchema:{default:()=>[]},guardian:{default:()=>({})},guardianSchema:{default:()=>[]}},emits:["update:modelValue","update:beneficiaryList","update:guardian"],setup(e,{expose:o,emit:m}){const A=e,M=i(null),J=i(null),R=i(null),U=i(null),Y={schema:[],trialFactorCodes:[],config:{occupationCode:{isView:!0}},personVO:{}},D=n({validated:!1,schema:[],config:{},personVO:{},beneficiaryTypeSchemaList:[],beneficiarySchemaList:[],beneficiaryList:[],guardianSchema:[],guardian:{personVO:{},config:{}}}),q=i(!1),G=L((()=>{const{age:e,relationToHolder:i}=D.personVO;return!["1","4","5"].includes(`${i}`)&&null!==e&&+e<18||(D.guardian={personVO:{},config:{}},!1)})),K=()=>{const e={};return D.beneficiarySchemaList.reduce(((e,i)=>{var n,r;return(null==(n=A.holderPersonVO)?void 0:n[i.name])&&(e[i.name]=null==(r=A.holderPersonVO)?void 0:r[i.name]),e}),e),e},z=(e={})=>{const i=e;return D.beneficiarySchemaList.reduce(((e,i)=>{var n;return(null==(n=A.holderPersonVO)?void 0:n[i.name])&&(e[i.name]=null),e}),i),i},Q=()=>{D.beneficiaryList.push(Z({...Y,nanoid:C(),schema:A.beneficiarySchema}))},W=L((()=>!A.multiBeneficiaryMaxNum||D.beneficiaryList.length<A.multiBeneficiaryMaxNum)),X=L((()=>!D.schema.filter((e=>{var i;return!(e.hidden||(null==(i=D.config[e.name])?void 0:i.hidden))})).length)),re=L((()=>D.schema.filter((e=>e.isSelfInsuredNeed)).map((e=>e.name)))),oe=L((()=>S(A.beneficiarySchema))),ae=L((()=>{var e;return String(null==(e=D.personVO)?void 0:e.insuredBeneficiaryType)===ie.SPECIFY})),se=i(!0);return r((()=>A.holderPersonVO),ee.exports.debounce((e=>{var i;y("------投保人信息变动了-----");const{id:n,...r}=e||{};if("1"===String(null==(i=D.personVO)?void 0:i.relationToHolder)){q.value=!0,D.beneficiaryList=D.beneficiaryList.map(((e,i)=>{var n,r;return`${e.personVO.isHolder}`==`${I.YES}`?{...e,personVO:{...z(null==(r=null==(n=D.beneficiaryList)?void 0:n[i])?void 0:r.personVO),isHolder:2}}:e}));const e=S(re.value)?Object.keys(r).reduce(((e,i)=>([...re.value,"occupationClass"].includes(i)&&!["birthday","age","gender"].includes(i)||(e[i]=r[i]),e)),{}):r,i=(r.certImage||[]).map((e=>(delete e.id,{...e,objectId:D.personVO.id,objectType:ne.INSURED})));Object.assign(D.personVO,e,{certImage:i})}else((e,i)=>{if(!se.value)return;const n={};(null==i?void 0:i.age)&&(+i.age||0)<18&&(D.schema.find((e=>"mobile"===e.name))&&(n.mobile=(null==e?void 0:e.mobile)||""),D.schema.find((e=>"personalAnnualIncome"===e.name))&&(D.personVO.personalAnnualIncome="0"),D.schema.find((e=>"annuallyComeList"===e.name))&&(n.annuallyComeList=["7"],n.annuallyComeDesc="无")),se.value=!1,Object.assign(D.personVO,n)})(e,D.personVO),q.value=!1}),300),{deep:!0,immediate:!0}),r([()=>{var e;return null==(e=A.holderPersonVO)?void 0:e.familyAnnualIncome},()=>{var e;return null==(e=D.personVO)?void 0:e.familyAnnualIncome}],ee.exports.debounce((([e,i],[n,r])=>{(e!==n&&(+e).toFixed().length>5||i!==r&&(+i).toFixed().length>5)&&v("请核实年收入是否准确")}),300)),r((()=>A.beneficiarySchema),(e=>{D.beneficiarySchemaList=S(e)?e.filter((e=>"insuredBeneficiaryType"!==e.name)):[],D.beneficiaryTypeSchemaList=S(e)?e.filter((e=>"insuredBeneficiaryType"===e.name)):[]}),{deep:!0,immediate:!0}),r((()=>A.guardianSchema),(e=>{D.guardianSchema=e}),{deep:!0,immediate:!0}),r(ae,((e,i)=>{String(e)!==String(i)&&(y("受益人类型关系变动了"),e?(D.beneficiaryList=S(A.beneficiaryList)?A.beneficiaryList.map((e=>({...e,nanoid:e.nanoid||C()}))):[],!S(D.beneficiaryList)&&Q()):D.beneficiaryList=[])}),{immediate:!0}),r((()=>Z(D.beneficiaryList).map((e=>({personVO:null==e?void 0:e.personVO,nanoid:e.nanoid})))),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&m("update:beneficiaryList",e)}),{deep:!0,immediate:!0}),r((()=>D.guardian),(e=>{m("update:guardian",e)}),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=D.personVO)?void 0:e.relationToHolder}),((e,i)=>{if(!e)return;y("与投保人关系变动了");const{personVO:n,schema:r=[],config:o}=D||{},{id:a,...s}=A.holderPersonVO||{},l="1"===String(n.relationToHolder);if(r.forEach((e=>{e.relationToHolder=n.relationToHolder,e.hidden=!e.isSelfInsuredNeed&&l})),!A.isView&&i&&String(e)!==String(i)){let e={...n,...s};const[i,a]=V(r,n);l||(e={...O(n,(e=>!(i&&"certType"===e))),relationToHolder:n.relationToHolder});const t={gender:{...o.gender,isView:A.isView}};"2"==`${n.relationToHolder}`&&(t.gender.isView=!0,e.gender=h.FEMALE),"3"==`${n.relationToHolder}`&&(t.gender.isView=!0,e.gender=h.MALE),b(o,t),B((()=>{Object.assign(D.personVO,e),console.log("newPersonVo",e),console.log("PersonVo",D.personVO)}))}const[t,d]=V(r,n);b(o,d)}),{immediate:!0}),r((()=>{var e;return null==(e=D.personVO)?void 0:e.nationalityCode}),((e,i)=>{e!==i&&b(D.config,T(D.personVO))}),{immediate:!0}),r((()=>{var e;return null==(e=D.guardian.personVO)?void 0:e.nationalityCode}),((e,i)=>{var n;e!==i&&b(D.guardian.config,T(null==(n=D.guardian)?void 0:n.personVO))}),{immediate:!0}),r((()=>{var e,i;return null==(i=null==(e=D.guardian)?void 0:e.personVO)?void 0:i.relationToInsured}),((e,i)=>{if(e===i)return;y("监护人与被保人关系变动了");const{certType:n}=D.guardian.personVO||{},[r,o]=V(D.guardianSchema,{certType:n,relationToInsured:e}),a={gender:{...o.gender,isView:A.isView}};if(!A.isView&&e!==i){let n=null;"2"==`${e}`&&(a.gender.isView=!0,n=h.FEMALE),"3"==`${e}`&&(a.gender.isView=!0,n=h.MALE),i&&Object.assign(D.guardian.personVO,{...O(D.guardian.personVO,(e=>!(r&&"certType"===e))),gender:n,relationToInsured:e})}b(D.guardian.config,o,a)}),{immediate:!0}),r((()=>{var e;return null==(e=D.personVO)?void 0:e.relationToMainInsured}),((e,i)=>{if(!e)return;y("次被保人与主被保人关系变动了");const{personVO:n,schema:r=[],config:o}=D||{},{certType:a}=n||{},[s,l]=V(r,{certType:a,relationToHolder:e});b(o,l),!A.isView&&i&&String(e)!==String(i)&&Object.assign(D.personVO,{...O(n,(e=>!(s&&"certType"===e))),relationToMainInsured:n.relationToMainInsured})})),r((()=>A.config),(e=>{e&&Object.assign(D.config,e)}),{deep:!0,immediate:!0}),r((()=>A.schema),((e,i)=>{var n;if(e&&JSON.stringify(e)!==JSON.stringify(D.schema)){const i="1"===String(null==(n=A.modelValue)?void 0:n.relationToHolder);D.schema=Z(e).map((e=>{var n;return g(A.schema,A.modelValue,(()=>{D.personVO.certType="1"})),e.relationToHolder=null==(n=A.modelValue)?void 0:n.relationToHolder,e.hidden=!e.isSelfInsuredNeed&&i,e}))}}),{deep:!0,immediate:!0}),r((()=>Z(A.modelValue)),((e,i)=>{if(JSON.stringify(e)!==JSON.stringify(i)){const{beneficiaryList:n,...r}=e;e.age!==(null==i?void 0:i.age)&&e.age&&(se.value=!0),b(D.personVO,r),g(A.schema,A.modelValue,(()=>{D.personVO.certType="1"}))}}),{deep:!0,immediate:!0}),r((()=>Z(A.beneficiaryList)),ee.exports.debounce(((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(D.beneficiaryList=S(e)?e.map((e=>({...e,nanoid:e.nanoid||C()}))):[])}),500),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=A.guardian)?void 0:e.personVO}),((e,i)=>{console.log("value",e),JSON.stringify(e)!==JSON.stringify(i)&&Object.assign(D.guardian.personVO,e)}),{deep:!0,immediate:!0}),r((()=>D.personVO),(e=>{e&&m("update:modelValue",e)}),{deep:!0,immediate:!0}),o({validate:e=>{var i;return Promise.all([f(M,A.trialFactorCodes,e),f(U,[],e),f(J,[],e),...(null==(i=R.value)?void 0:i.map((i=>i.validate(e))))||[]])},validateTrialFields:()=>p({personVO:D.personVO,trialFactorCodes:A.trialFactorCodes})}),(e,i)=>{var n,r;const o=x,m=_,p=P,f=w;return a(),k($,null,[j(d(c),{ref_key:"insuredFormRef",ref:M,class:"personal-info-card",title:d(X)?"":e.title,model:d(D).personVO,schema:d(D).schema,config:d(D).config,"is-view":e.isView,"extra-provision":{objectType:d(u).INSURED,objectId:d(D).personVO.id}},{cardTitleExtra:l((()=>[t(e.$slots,"default",{},void 0,!0)])),customer:l((()=>[t(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]),d(G)?(a(),s(d(c),{key:0,ref_key:"guardianFormRef",ref:U,class:"personal-info-card",title:"监护人",model:d(D).guardian.personVO,schema:d(D).guardianSchema,config:d(D).config,"is-view":e.isView,"extra-provision":{objectType:d(u).GUARDIAN,objectId:null==(r=null==(n=d(D).guardian)?void 0:n.personVO)?void 0:r.id}},{cardTitleExtra:l((()=>[t(e.$slots,"default",{},void 0,!0)])),customer:l((()=>[t(e.$slots,"guardianCustomer",{},void 0,!0)])),_:3},8,["model","schema","config","is-view","extra-provision"])):F("",!0),d(oe)?(a(),k($,{key:1},[j(d(c),{ref_key:"beneficiaryTypeFormRef",ref:J,class:"personal-info-card",title:"受益人",model:d(D).personVO,schema:d(D).beneficiaryTypeSchemaList,"is-view":e.isView},null,8,["model","schema","is-view"]),d(ae)?(a(),k($,{key:0},[(a(!0),k($,null,H(d(D).beneficiaryList,((i,n)=>{var r,c;return a(),s(ce,{ref_for:!0,ref_key:"beneficiaryFormRef",ref:R,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,title:`受益人${n+1}`,schema:d(D).beneficiarySchemaList,config:i.config,"holder-person-v-o":e.holderPersonVO,"is-view":e.isView||(null==(r=i.personVO)?void 0:r.isHolder)===d(I).YES,"beneficiary-list":d(D).beneficiaryList,"extra-provision":{objectType:d(u).BENEFICIARY,objectId:null==(c=null==i?void 0:i.personVO)?void 0:c.id}},{customer:l((()=>{var r;return[e.isView||(null==(r=i.personVO)?void 0:r.isHolder)===d(I).YES?F("",!0):t(e.$slots,"benefitCustomer",{key:0,index:n},void 0,!0)]})),"header-item":l((()=>[d(q)?F("",!0):(a(),s(m,{key:0,label:"是否同投保人","input-align":"right"},{input:l((()=>[j(o,{modelValue:i.personVO.isHolder,"onUpdate:modelValue":e=>i.personVO.isHolder=e,"active-value":1,"inactive-value":2,onClick:()=>(e=>{var i,n,r,o;null==(i=D.beneficiaryList)||i[e],`${null==(o=null==(r=null==(n=D.beneficiaryList)?void 0:n[e])?void 0:r.personVO)?void 0:o.isHolder}`==`${I.YES}`?A.holderPersonVO&&(D.beneficiaryList=D.beneficiaryList.map(((i,n)=>{var r;if(e===n){const e={...null==i?void 0:i.personVO,...K()};return(null==(r=null==e?void 0:e.certImage)?void 0:r.length)&&(e.certImage=null==e?void 0:e.certImage.map((i=>(delete i.id,{...i,objectId:e.id,objectType:u.BENEFICIARY})))),console.log("beneficiaryPersonVO",e),{...i,personVO:e,config:{...i.config,benefitRate:{isView:!1},benefitOrder:{isView:!1},relationToInsured:{isView:!1},beneficiaryType:{isView:!1}}}}return i}))):D.beneficiaryList=D.beneficiaryList.map(((i,n)=>{var r,o;return e===n?{...i,personVO:{...z(null==(o=null==(r=D.beneficiaryList)?void 0:r[e])?void 0:o.personVO)}}:i}))})(n)},{default:l((()=>[N("同投保人")])),_:2},1032,["modelValue","onUpdate:modelValue","onClick"])])),_:2},1024))])),default:l((()=>[n>0&&!e.isView?(a(),k("span",{key:0,class:"delete-button",onClick:e=>(e=>{E.confirm({message:"确定要删除该受益人吗？"}).then((()=>{D.beneficiaryList.splice(e,1)}))})(n)},[j(p,{name:"delete"})],8,me)):F("",!0)])),_:2},1032,["modelValue","onUpdate:modelValue","title","schema","config","holder-person-v-o","is-view","beneficiary-list","extra-provision"])})),128)),!e.isView&&d(W)?(a(),k("span",{key:0,class:"add-button",onClick:Q},[j(f,{name:"plus"}),N("添加受益人")])):F("",!0)],64)):F("",!0)],64)):F("",!0),t(e.$slots,"riskList",{},void 0,!0)],64)}}}),[["__scopeId","data-v-cd9ee4f2"]]);const ge=["onClick"],ve=["onClick"],ye=["onClick"],Ve=["onClick"],he=e({name:"PersonalInfo"});var Oe=m(e({...he,props:{productFactor:{default:()=>({})},modelValue:{default:()=>({})},isTrial:{type:Boolean,default:!1},isView:{type:Boolean,default:!1},isOnlyHolder:{type:Boolean,default:!1},isHolderExempt:{type:Boolean,default:!1},multiInsuredConfig:{}},emits:["update:modelValue","trailChange","trailValidateFailed","closeCustomerPopoup","update-bank"],setup(e,{expose:m,emit:h}){const O=e,{x:I,y:x}=A(),B=M(),_=J(),{isShare:ee,saleChannelId:ie}=B.query,ne=i(null),ue=i(null),ce=n({count:0,slotProps:{},uniqKey:"",currentIndex:0,currentBenifitIndex:0,currentType:"",keyword:void 0,show:!1,list:[],config:{},trialValidated:!1,holder:{personVO:{},schema:[],trialFactorCodes:[],config:{occupationCode:{isView:!0}}},beneficiarySchema:[],initInsuredIList:[],insured:[]}),me=L((()=>!O.isTrial||O.isHolderExempt)),pe=e=>{Object.assign(ce.holder.personVO,e)},he=L((()=>!(ee||O.isView||O.isTrial||_))),Oe=(e,i,n,r)=>{ce.currentType=e,"benifit"!==e?ce.currentIndex=i:(ce.currentIndex=i,ce.currentBenifitIndex=n);const{selectedType:o,customerId:a,selected:s,...l}=B.query;console.log("选择的关系relation:",r),G("customerList",{...l,selectedType:e,relation:r})},be=e=>{var i,n,r,o,a,s,l,t,d,u;const c="holder"===ce.currentType?ce.holder.schema.map((e=>e.name))||[]:"insured"===ce.currentType?ce.insured[ce.currentIndex].schema.map((e=>e.name))||[]:"benifit"===ce.currentType?ce.beneficiarySchema.map((e=>e.name))||[]:"guardian"===ce.currentType&&ce.guardianSchema.map((e=>e.name))||[];c.push("certEndType","age","gender");const m=te(e,c);if(console.log(ce.currentType,"的keys:",c,"转换后的客户信息:",m),"holder"===ce.currentType)console.log("当前是投保人选信息state?.holder:",null==ce?void 0:ce.holder),Object.assign(null==(i=null==ce?void 0:ce.holder)?void 0:i.personVO,m),h("update-bank",e.bankCardInfo);else if("insured"===ce.currentType){const e=null==(n=null==ce?void 0:ce.insured[ce.currentIndex])?void 0:n.schema.some((e=>"relationToHolder"===e.name&&e.attributeValueList.some((e=>"1"===e.code))));if(de(null==(r=null==ce?void 0:ce.holder)?void 0:r.personVO,m))return e?void Object.assign((null==(o=null==ce?void 0:ce.insured[ce.currentIndex])?void 0:o.personVO)||{},{relationToHolder:"1"}):void v("与投保人关系未配置本人");Object.assign((null==(a=null==ce?void 0:ce.insured[ce.currentIndex])?void 0:a.personVO)||{},m)}else"benifit"===ce.currentType?de(null==(s=null==ce?void 0:ce.insured[ce.currentIndex])?void 0:s.personVO,m)?v("指定受益人不可为被保人本人"):Object.assign((null==(t=null==(l=null==ce?void 0:ce.insured[ce.currentIndex])?void 0:l.beneficiaryList[ce.currentBenifitIndex])?void 0:t.personVO)||{},m):"guardian"===ce.currentType&&(console.log("selectedCustomer",m),Object.assign((null==(u=null==(d=null==ce?void 0:ce.insured[ce.currentIndex])?void 0:d.guardian)?void 0:u.personVO)||{},m))},Te=()=>{var e;const i=!ue.value||(null==(e=ue.value)?void 0:e.every((e=>e.validateTrialFields())));return(!ne.value||p(ce.holder))&&i},Ie=e=>{var i;return Promise.all([...(null==(i=ue.value)?void 0:i.map((i=>i.validate(e))))||[],f(ne,ce.holder.trialFactorCodes,e)])},Le=e=>{const{productList:i,config:n,schema:r,trialFactorCodes:o,beneficiaryList:a,guardian:s,personVO:l,nanoid:t,...d}=Z(e)||{};return d},Se=()=>{const{length:e,[e-1]:i}=ce.initInsuredIList;ce.insured.push(Z({...i,nanoid:C()}))},Ce=L((()=>{const{multiInsuredMaxNum:e,multiInsuredSupportFlag:i}=ce.config;return i&&(!e||ce.insured.length<e)})),xe=L((()=>S(ce.holder.schema))),we=L((()=>ce.insured.some((e=>S(e.schema))))),ke=(e,i)=>S(e)?e.reduce(((e,n)=>(e[n]=i[n],e)),{}):{},je=(e,i,n={})=>!!S(e)&&JSON.stringify(ke(e,i))!==JSON.stringify(ke(e,n));r((()=>{var e;return null==(e=ce.holder.personVO)?void 0:e.certType}),o(((e,i)=>{if(`${e}`==`${i}`)return!1;y("投保人信息变动了====");const[n,r]=V(ce.holder.schema,{certType:e});return b(ce.holder.config,r),!1}),0)),r((()=>{var e;return null==(e=ce.holder.personVO)?void 0:e.nationalityCode}),((e,i)=>{e!==i&&b(ce.holder.config,T(ce.holder.personVO))}),{immediate:!0}),r([()=>{var e;return{...null==(e=ce.holder)?void 0:e.personVO}},()=>ce.insured.map((e=>{const{beneficiaryList:i,guardian:n,personVO:r}=e||{},o=S(i)?i.map((e=>({...null==e?void 0:e.personVO}))):[];return{...r,guardian:(null==n?void 0:n.personVO)||{},beneficiaryList:o}}))],((e,i)=>{var n,r,o,a;if(K(e,i))return!1;const[s,l]=e;g(ce.holder.schema,s,(()=>{s.certType=s.certType||"1"}));const t=((e,i)=>{const n=je(ce.holder.trialFactorCodes,null==e?void 0:e[0],null==i?void 0:i[0]),r=ce.insured.some(((e,n)=>{var r;const{trialFactorCodes:o,personVO:a}=e;return je(o,a,null==(r=i[1])?void 0:r[n])}));return n||r})([s,l],i),{insuredList:d}=O.modelValue,u={holder:s,insuredList:l.map(((e,i)=>({...(null==d?void 0:d[i])||{},...e})))};if(null==(n=ce.config)?void 0:n.isSpouseInsured){const[e,i]=l.map((e=>null==e?void 0:e.gender));if(e&&i&&String(e)===String(i))return v("被保人性别与投保要求不符")}if(JSON.stringify(null==(r=null==l?void 0:l[0])?void 0:r.personVO),Le(null==(a=null==(o=O.modelValue)?void 0:o.insuredList)?void 0:a[0]),console.log("-------result = ",u),h("update:modelValue",u),!Te())return ce.trialValidated=!1,h("trailValidateFailed",u);Ie(!0).then((()=>{console.log("trialEnd"),ce.trialValidated=!0,!O.isOnlyHolder&&t&&h("trailChange",u)})).catch((()=>{ce.trialValidated=!1,h("trailValidateFailed",u)}))}),{deep:!0}),r([()=>O.productFactor,()=>O.isTrial],o(((e,i)=>{if(K(e,i)||!(null==e?void 0:e[0]))return!1;y("投被保人要素变动了");const{insuredFactorCodes:n,holderFactorCodes:r}=z(Q)||{},{holder:o,insured:a,beneficiary:s,guardian:l,config:t}=W(e[0],{isTrial:e[1],...O.multiInsuredConfig,insuredFactorCodes:n,holderFactorCodes:r});return Object.assign(ce.holder,o),ce.config=t,S(a)&&(ce.initInsuredIList=a.map((e=>({...e,guardian:{},beneficiaryList:[]})))),ce.beneficiarySchema=Z((null==s?void 0:s.schema)||[]),ce.guardianSchema=Z((null==l?void 0:l.schema)||[]),!1}),300),{deep:!0,immediate:!0}),r((()=>{var e,i,n,r;return null==(r=null==(n=null==(i=null==(e=null==ce?void 0:ce.insured)?void 0:e[ce.currentIndex])?void 0:i.guardian)?void 0:n.personVO)?void 0:r.relationToInsured}),((e,i)=>{e!==i&&i&&(y("监护人关系变动了+++++"),Object.assign(ce.insured[ce.currentIndex],{guardian:{personVO:{relationToInsured:e}}}))}));const Fe=i(!1);return r([()=>{const{holder:e,insuredList:i=[]}=O.modelValue,n=S(i)?i.map((e=>({config:e.config,personVO:Le(e),guardian:{personVO:e.guardian||{}},beneficiaryList:S(e.beneficiaryList)?e.beneficiaryList.map((({config:e,...i})=>({config:e,personVO:Le(i)}))):[]}))):[];return[(null==e?void 0:e.config)||{},Le(e),n]},()=>ce.config,()=>ce.initInsuredIList],(([[e,i,n],r,o],[a,s,l])=>{const[t,d,u]=a||[];if(K(e,t)&&K(i,d)&&K(o,l))return;Fe.value=!0,console.log("投保人数据===",Z(ce.holder.personVO),Z(i)),console.log("投保人数据===",Z(ce.holder.personVO),Z(i)),console.log("holderFormData",i),g(ce.holder.schema,i,(()=>{const n=X(i.certType,ce.holder.schema);Object.assign(ce.holder.config,e,n),i.certType=i.certType||"1"})),Object.assign(ce.holder.personVO,i);const{length:c}=n||[],{length:m}=ce.insured,{length:p,0:f={},[p-1]:v}=ce.initInsuredIList,{multiInsuredMaxNum:y=1,multiInsuredMinNum:V=1,multiInsuredSupportFlag:h}=(null==ce?void 0:ce.config)||{},T=O.isView||c>m?Math.min(c,y):m||V,I=Z(n);ce.insured=Array.from({length:T}).reduce(((e,i,n)=>{const{personVO:r,config:o={},guardian:a,beneficiaryList:s}=(null==I?void 0:I[n])||{},l=Z(0===n?f:v);return e[n]?(e[n].schema=l.schema,b(e[n],{...Z(l),personVO:r,config:o,guardian:a,beneficiaryList:s})):e[n]={...Z(l),personVO:r,config:o,guardian:a,beneficiaryList:s,nanoid:C()},e}),ce.insured)}),{deep:!0,immediate:!0}),r((()=>ce.list),((e,i)=>{e&&(ce.list=e)})),m({validate:Ie,validateTrialFields:Te,validateHolder:(...e)=>{var i;return null==(i=ne.value)?void 0:i.validate(...e)},canTrail:()=>ce.trialValidated}),R((()=>{re({currentIndex:ce.currentIndex,currentBenifitIndex:ce.currentBenifitIndex,scrollTop:x.value})})),U((()=>{const e=oe(),i=ae();ce.currentType=B.query.selectedType||ce.currentType,console.log("onActivated:",i),i&&(ce.currentIndex=i.currentIndex,ce.currentBenifitIndex=i.currentBenifitIndex,document.documentElement.scrollTo(0,i.scrollTop),document.body.scrollTop=i.scrollTop,se()),e&&(be(e),le())})),(e,i)=>{var n,r;const o=P,m=w,p=Y;return a(),k($,null,[d(xe)&&d(me)?(a(),s(d(c),{key:0,ref_key:"holderFormRef",ref:ne,title:"投保人信息",class:"personal-info-card",model:d(ce).holder.personVO,schema:d(ce).holder.schema,config:d(ce).holder.config,"is-view":e.isView,"extra-provision":{objectType:d(u).HOLDER,objectId:null==(r=null==(n=d(ce).holder)?void 0:n.personVO)?void 0:r.id},onOcr:pe},{customer:l((()=>[d(he)?(a(),k("div",{key:0,class:"choose-customer",onClick:i[0]||(i[0]=e=>Oe("holder",1,0))},[j(o,{name:"customer",color:"#333"})])):F("",!0)])),_:1},8,["model","schema","config","is-view","extra-provision"])):F("",!0),d(we)&&!e.isOnlyHolder?(a(),k($,{key:1},[(a(!0),k($,null,H(d(ce).insured,((i,n)=>{var r;return a(),s(fe,D({ref_for:!0,ref_key:"insuredFormRef",ref:ue,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,"beneficiary-list":i.beneficiaryList,"onUpdate:beneficiaryList":e=>i.beneficiaryList=e,guardian:i.guardian,"onUpdate:guardian":e=>i.guardian=e,title:""+(d(ce).insured.length>1?`被保人${n+1}`:"被保人信息"),"holder-person-v-o":d(ce).holder.personVO},i,{"beneficiary-schema":d(ce).beneficiarySchema,"guardian-schema":d(ce).guardianSchema,"is-view":e.isView,"multi-beneficiary-num":null==(r=d(ce).config)?void 0:r.multiBeneficiaryMaxNum}),{riskList:l((()=>[t(e.$slots,"riskInfo",{insuredIndex:n},void 0,!0)])),customer:l((()=>[1!=+i.personVO.relationToHolder&&d(he)?(a(),k("div",{key:0,class:"choose-customer",onClick:e=>Oe("insured",n,0,i.personVO.relationToHolder)},[j(o,{name:"customer",color:"#333"})],8,ge)):F("",!0)])),guardianCustomer:l((e=>[d(he)?(a(),k("div",{key:0,class:"choose-customer",onClick:e=>Oe("guardian",n,0,i.guardian.personVO.relationToInsured)},[j(o,{name:"customer",color:"#333"})],8,ve)):F("",!0)])),benefitCustomer:l((e=>[d(he)?(a(),k("div",{key:0,class:"choose-customer",onClick:r=>{var o;return Oe("benifit",n,null==e?void 0:e.index,null==(o=i.beneficiaryList[null==e?void 0:e.index])?void 0:o.personVO.relationToInsured)}},[j(o,{name:"customer",color:"#333"})],8,ye)):F("",!0)])),default:l((()=>[!e.isView&&n+1>d(ce).config.multiInsuredMinNum?(a(),k("span",{key:0,class:"delete-button",onClick:e=>(e=>{E.confirm({message:"确定要删除该被保人吗？"}).then((()=>{ce.insured.splice(e,1)}))})(n)},[j(o,{name:"delete",color:"var(--van-primary-color)"})],8,Ve)):F("",!0)])),_:2},1040,["modelValue","onUpdate:modelValue","beneficiary-list","onUpdate:beneficiaryList","guardian","onUpdate:guardian","title","holder-person-v-o","beneficiary-schema","guardian-schema","is-view","multi-beneficiary-num"])})),128)),!e.isView&&d(Ce)?(a(),s(p,{key:0,class:"add-button-wrap"},{title:l((()=>[q("span",{class:"add-button",onClick:Se},[j(m,{name:"plus"}),N("添加被保人")])])),_:1})):F("",!0)],64)):F("",!0)],64)}}}),[["__scopeId","data-v-57019424"]]);export{Oe as P};
