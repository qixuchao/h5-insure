import{ao as e,d as a,i as n,b9 as t,bg as i,r as l,j as r,z as o,o as s,c as m,n as u,l as c,u as d,ba as E,F as p,bd as f,bi as v,am as R,bf as y,bo as T,aB as I,bp as h,bq as S}from"./index-498c0d29.js";const _=[{value:5,label:"支付宝",iconName:"ali"},{value:6,label:"微信",iconName:"wechat"}];e([{value:1,label:"实时转账"},{value:2,label:"批量扣款"}]);var M=(e=>(e[e.DEBIT=1]="DEBIT",e[e.CREDIT=2]="CREDIT",e[e.PRE_PAY=3]="PRE_PAY",e[e.PRE_CREDIT=4]="PRE_CREDIT",e[e.OTHER=5]="OTHER",e))(M||{});e([{value:1,label:"借记卡"},{value:2,label:"贷记卡"},{value:3,label:"预付费卡"},{value:4,label:"准贷记卡"},{value:5,label:"其他"}]);var b=(e=>(e[e.FIRST_TERM=1]="FIRST_TERM",e[e.RENEW_TERM=2]="RENEW_TERM",e[e.REPRISE=3]="REPRISE",e[e.OTHER=4]="OTHER",e))(b||{});const D=[{value:1,label:"首期支付"},{value:2,label:"续期支付"},{value:3,label:"年金领取"},{value:4,label:"其他"}];e(D);var g=(e=>(e[e.FIRST_SAME=1]="FIRST_SAME",e[e.RENEW_SAME=2]="RENEW_SAME",e[e.OTHER=3]="OTHER",e))(g||{});e(D);e([{value:1,label:"自动垫付"},{value:2,label:"中止合同"}]);const L=a({__name:"PayInfo",props:{schema:{default:()=>[]},config:{default:()=>[]},modelValue:{default:()=>[]},isView:{type:Boolean,default:!1},userData:{default:()=>({})}},emits:["update:modelValue"],setup(e,{expose:a,emit:_}){const D=e,L="1",N=n(null),P=["cardType","bankCard"],A=["orderId","tenantId","id"],F={paymentType:"1",paymentMethod:"1",expiryMethod:"1",cardType:M.DEBIT},w=[...Object.keys(F),"paymentGenre"],G=[{title:"首期支付",schema:[],payInfoType:b.FIRST_TERM,formData:{},config:{cardType:{isView:!0}},objectType:t.INIT_SIGN},{title:"续期支付",schema:[],payInfoType:b.RENEW_TERM,formData:{paymentGenre:String(g.FIRST_SAME)},config:{cardType:{isView:!0}},objectType:t.RENEWAL_SIGN},{title:"年金领取银行卡",schema:[],payInfoType:b.REPRISE,formData:{paymentMethod:"1",paymentGenre:String(g.FIRST_SAME)},config:{},objectType:t.ANNUAL_SIGN}].map((e=>({...e,nanoid:i()}))),W=[["initialPaymentMethod","initialCardType","initialBankCard","initialPaymentType"],["renewalPaymentGenre","renewalPaymentMethod","renewalCardType","renewalBankCard","renewalPaymentType","expiryMethod"],["annuityPaymentGenre","annuityBankCard"]],C=l({schemaList:[]}),j=r((()=>{var e,a;return(null==(a=null==(e=D.userData.insuredList)?void 0:e[0])?void 0:a.name)||null})),V=r((()=>{var e,a;return(null==(a=null==(e=D.userData)?void 0:e.holder)?void 0:a.name)||null})),k=r((()=>["FIRST_TERM","RENEW_TERM","REPRISE"].reduce(((e,a)=>{const n=(t=a,C.schemaList.findIndex((e=>String(e.payInfoType)===String(b[t]))));var t;return n>-1&&(e[a]=n),e}),{}))),O=(e,a)=>{var n,t;return e>-1&&(null==(t=null==(n=C.schemaList[e])?void 0:n.formData)?void 0:t.paymentGenre)===`${g[a]}`},x=r((()=>{const e=C.schemaList.map((e=>`${e.payInfoType}`));return G.filter((a=>e.includes(String(a.payInfoType))))})),B=(e,a)=>{var n;const{formData:t}=C.schemaList[a]||{},{paymentGenre:i,id:l,...r}=t||{},o={...r,bankCardImage:I(r.bankCardImage)?r.bankCardImage.map((a=>{var n,t;return{...a,objectType:null==(t=null==(n=x.value)?void 0:n[e])?void 0:t.objectType}})):[]};Object.assign(null==(n=C.schemaList[e])?void 0:n.formData,o)};return o((()=>C.schemaList.map((e=>{var a,n;return[null==(a=null==e?void 0:e.formData)?void 0:a.paymentMethod,null==(n=null==e?void 0:e.formData)?void 0:n.paymentGenre]}))),((e,a)=>{f("支付方式/支付类型变动"),C.schemaList.forEach(((e,a)=>{const{formData:n,schema:t}=e||{},l=L===String(null==n?void 0:n.paymentMethod),r=[g.FIRST_SAME,g.RENEW_SAME].includes(Number(null==n?void 0:n.paymentGenre));t.forEach((e=>{e.hidden=(r||!l)&&((e,a=!1)=>{if(e){const n=[...P];return a&&n.push("paymentMethod"),n.includes(e)}return!1})(e.name,r)})),e.nanoid=i()}))}),{deep:!0,immediate:!0}),o((()=>{var e;return{...null==(e=C.schemaList[k.value.FIRST_TERM])?void 0:e.formData}}),((e,a)=>{if(D.isView||v(e,a))return!1;const{REPRISE:n,RENEW_TERM:t}=k.value;f("首期数据变动"),O(t,"FIRST_SAME")&&B(t,k.value.FIRST_TERM),O(n,"FIRST_SAME")&&B(n,t)}),{deep:!0}),o((()=>{var e;return null==(e=C.schemaList[k.value.RENEW_TERM])?void 0:e.formData}),((e,a)=>{if(D.isView||v(e,a))return!1;f("续期数据变动");const{REPRISE:n,RENEW_TERM:t}=k.value;O(n,"RENEW_SAME")&&B(n,t)}),{deep:!0}),o((()=>C.schemaList.map((e=>{var a;return null==(a=null==e?void 0:e.formData)?void 0:a.paymentMethod}))),((e,a)=>{JSON.stringify(e)!==JSON.stringify(a)&&C.schemaList.forEach(((n,t)=>{const i=e[t],l=a[t],r=i&&l&&String(i)!==String(l);n.payInfoType!==b.REPRISE&&r&&"1"!==String(i)&&R(n.formData,{...y(n.formData,(e=>S.includes(e))),bankCardImage:null})}))}),{deep:!0}),o((()=>{var e,a;return null==(a=null==(e=C.schemaList[k.value.RENEW_TERM])?void 0:e.formData)?void 0:a.paymentGenre}),(e=>{var a,n;if(D.isView)return!1;f("续期支付类型变动");const{FIRST_TERM:t,RENEW_TERM:l}=k.value;String(e)===String(g.FIRST_SAME)?B(l,t):C.schemaList[l]&&(R(C.schemaList[l].formData,{...y(C.schemaList[l].formData,(e=>!A.includes(e))),...null==(n=null==(a=x.value)?void 0:a[l])?void 0:n.formData,accountName:V.value,paymentGenre:e}),C.schemaList[l].nanoid=i())})),o((()=>{var e,a;return null==(a=null==(e=C.schemaList[k.value.REPRISE])?void 0:e.formData)?void 0:a.paymentGenre}),((e,a)=>{var n,t;if(D.isView||!e||!a||e===a)return!1;const{FIRST_TERM:l,RENEW_TERM:r,REPRISE:o}=k.value,s=[g.FIRST_SAME,g.RENEW_SAME].includes(Number(e));if(f("年金支付类型变动"),s){const a=String(e)===String(g.FIRST_SAME)?l:r;B(o,a)}else C.schemaList[o]&&(R(C.schemaList[o].formData,{...y(C.schemaList[o].formData,(e=>!A.includes(e))),...null==(t=null==(n=x.value)?void 0:n[o])?void 0:t.formData,accountName:j.value,paymentGenre:e}),C.schemaList[o].nanoid=i())}),{immediate:!0}),o([()=>D.schema,()=>D.config],(()=>{let e=[];C.schemaList=D.schema.reduce(((a,n)=>{const t=W.findIndex((e=>e.includes(n.name)));if("paymentDrawType"===n.name&&(e=n.columns.map((e=>e.code))),t>-1){const e=(e=>{if("string"!=typeof e||!e)return"";const[a,n]=e.match(/^(?:initial|renewal|annuity)(.*)$/)||[];return n?h(n):e})(n.name);if(w.includes(e)){const i=(({name:e,columns:a},n)=>{if(I(a)){const t={...n,...F},i=I(a)&&a.find((a=>`${a.code}`==`${t[e]}`));return{[e]:i?t[e]:null}}return{}})({name:e,columns:n.columns},G[t].formData);R(a[t].formData,i),R(G[t].formData,i)}a[t].schema.push({...n,name:e,payInfoType:G[t].payInfoType})}return a}),T(G)).map(((e,a)=>({...e,config:{...e.config,...D.config[a]||{}},nanoid:i()}))).filter((({schema:a,...n})=>e.includes(`${n.payInfoType}`)&&I(a)))}),{deep:!0,immediate:!0}),o((()=>D.modelValue),(e=>{I(e)&&C.schemaList.forEach(((a,n)=>{R(a.formData,e[n])}))}),{deep:!0,immediate:!0}),o((()=>{var e;return null==(e=C.schemaList)?void 0:e.map((e=>e.formData))}),(e=>{I(e)&&_("update:modelValue",e.map(((e,a)=>{const{payInfoType:n}=C.schemaList[a];return{...e,payInfoType:n}})))}),{deep:!0,immediate:!0}),o((()=>[V.value,j.value]),(([e,a])=>{(e||a)&&C.schemaList.forEach((n=>{const t=n.payInfoType===b.REPRISE;n.formData.accountName=t?a:e}))}),{deep:!0}),a({validate:e=>{var a;return Promise.all(N.value?null==(a=N.value)?void 0:a.map((e=>null==e?void 0:e.validate())):[])}}),(e,a)=>(s(!0),m(p,null,u(d(C).schemaList,((a,n)=>(s(),c(d(E),{ref_for:!0,ref_key:"payInfoFormRef",ref:N,key:`${a.nanoid}_${n}`,schema:a.schema,model:a.formData,config:a.config,title:a.title,"is-view":e.isView,"extra-provision":{objectType:a.objectType,objectId:a.formData.id}},null,8,["schema","model","config","title","is-view","extra-provision"])))),128))}});export{_ as A,L as _};
