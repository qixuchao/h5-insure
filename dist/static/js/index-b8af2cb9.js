import{d as e,i,h as t,g as a,r as s,j as r,aw as l,ax as u,T as d,z as o,av as n,O as c,o as p,c as f,f as v,a as k,b as m,u as L,l as h,q as y,F as C,n as g,w as R,e as I,ay as D,a8 as P,_ as b,az as O,aA as V,aB as T,aC as S,aD as w,aE as M,aF as j,aG as E,at as _,au as F}from"./index-f919c47f.js";import{c as A}from"./cloneDeep-38d03c69.js";import{_ as x}from"./InsureInfos-6bc06f49.js";import{P as N}from"./index-614dd67e.js";import{P as $,R as B,b as q}from"./trial-33474385.js";import{_ as U,P as Q,B as K}from"./constants-96ce8602.js";import{u as z,c as G,p as H,d as J,e as W,q as X}from"./trial-b8186cae.js";import{u as Y}from"./useOrder-220ede06.js";import{t as Z}from"./utils-31302288.js";import{n as ee}from"./nextStep-e377dfe1.js";const ie=(e,i)=>{const t=[],a={};return null==e||e.forEach((e=>{a[e.riskId]=e})),null==i||i.forEach((e=>{var i,s,r,l;const{collocationType:u,collocationRiskId:d,riskId:o}=e;switch(u){case 2:{const e=null==(i=a[o])?void 0:i.riskName,r=null==(s=a[d])?void 0:s.riskName;t.push(`${e} 和 ${r} 必须同时投保`);break}case 3:{const e=null==(r=a[o])?void 0:r.riskName,i=null==(l=a[d])?void 0:l.riskName;t.push(`${e} 和 ${i} 不能同时投保`);break}}})),t};const te=e=>(_("data-v-2c0cbf26"),e=e(),F(),e),ae={class:"com-body"},se={class:"trial-body"},re={class:"container"},le={class:"container"},ue={key:0,class:"product-list"},de={key:0,class:"operate-bar"},oe=["onClick"],ne=["onClick"],ce={class:"premium-item"},pe=te((()=>k("span",{class:"label"},"首期保费",-1))),fe={class:"price"},ve={key:1,class:"add-main-risk"},ke=te((()=>k("div",{class:"empty"},null,-1))),me=e({name:"TrialBody"});var Le=b(e({...me,props:{selfKey:{default:""},dataSource:{default:()=>[]},productInfo:{default:()=>({productCode:"",productName:"",insurerCode:"",tenantId:"",planList:[]})},tenantProductDetail:{default:()=>({})},hideBenefit:{type:Boolean,default:!1},hidePopupButton:{type:Boolean,default:!1},title:{default:"算一算保费"},defaultData:{default:null},isTrial:{type:Boolean,default:!1},defaultOrder:{default:()=>({})},productCollection:{default:()=>({})},productFactor:{default:()=>({})},productRiskCodeMap:{default:()=>({})}},emits:["trialStart","trialEnd","update:userData","closeCustomerPopoup","addRisk","addMainRisk","deleteRisk"],setup(e,{expose:b,emit:_}){const F=e,te=i(null),me=t();a();const{tenantId:Le,templateId:he,preview:ye}=me.query,Ce=i(),ge=s({loading:!1,show:!1,select:{},list:[],userData:{},riskIsInsure:{},submitData:{},riskList:{},mainRiskVO:{},ifPersonalInfoSuccess:!1,trialMsg:"",trialResultPremium:0,trialResult:{initialPremium:0,initialAmount:0},isAniShow:!1,defaultValue:null,isAutoChange:!1,planIndex:0,isSkipFirstTrial:!1,hadSkipFirstTrial:!1,isQuerying:!1,currentPlanCode:""}),Re=Y();i();const Ie=i(),De=i(F.dataSource),Pe=i([]),be=i(),Oe=i(),Ve=i({}),Te=r((()=>{var e;let i=!1;return((null==(e=F.productRiskCodeMap)?void 0:e.productList)||[]).forEach((e=>{e.mergeRiskReqList.find((e=>1===e.exemptType))&&(i=!0)})),i})),Se=i({}),we=l((async(e,i=!0)=>{ge.trialMsg="试算中...",ge.trialResultPremium=0,ge.loading=!0,_("trialStart");let t=!1;if(i){const{code:i}=await z(e);t="10000"===i}!t&&i||(ge.isQuerying=!0,F.hideBenefit||G(e).then((e=>{e.data&&e.code===u&&(Se.value=e.data)})).finally((()=>{ge.loading=!1})),H(e).then((({code:i,data:t})=>{var a,s;t&&i===u&&((null==t?void 0:t.errorInfo)&&d(`${null==t?void 0:t.errorInfo}`),ge.trialMsg="",ge.trialResultPremium=t.initialPremium,ge.trialResult=t,null==(s=null==(a=t.insuredPremiumList)?void 0:a[0])||s.productPremiumList.forEach((e=>{Ve.value[e.productCode]=e.riskPremiumDetailVOList})),_("trialEnd",t,e))})).finally((()=>{ge.loading=!1,ge.isQuerying=!1})))}),500),Me=r((()=>{var e,i;return![$.SINGLE_PRODUCT,$.TWO_PRODUCT].includes(null==(i=null==(e=Object.values(F.productCollection))?void 0:e[0])?void 0:i.productClass)})),je=()=>{_("addMainRisk",ge.userData.insuredList)},Ee=e=>{const{holder:i,insuredList:t}=e||{};i&&(ge.submitData.holder=i),t&&t.length>0&&t.forEach(((e,i)=>{var t;ge.submitData.insuredList&&ge.submitData.insuredList.length>i?ge.submitData.insuredList[i]=e:((null==(t=ge.submitData)?void 0:t.insuredList)||(ge.submitData.insuredList=[]),ge.submitData.insuredList.push(e))}))},_e=r((()=>F.productInfo.planList&&F.productInfo.planList.length>2)),Fe=(e,i)=>{if(e){const t=["birthday","age","gender","id"];i.includes("occupationCodeList")&&t.push("occupationClass"),Object.keys(e).forEach((a=>{[...i,...t].includes(a)||(e[a]=null)}))}},Ae=(e,i=(e=>!0))=>V(e)?e.filter(i).map((e=>e.code)):[],xe=()=>{console.log("--current plan = ",De.value),console.log("---current submit = ",ge.submitData);const e=A(ge.submitData);if(!_e.value)return e;const{1:i,2:t,3:a}=De.value.productFactor||{};if(e.holder&&Fe(e.holder,Ae(i)),e.insuredList){const i=["productList","beneficiaryList"],s=Ae(t,(e=>"2"!==String(e.subModuleType))),r=Ae(t,(e=>"2"===String(e.subModuleType))),l=V(r),u=Ae(a),d=V(u);e.insuredList.forEach(((e,t)=>{var a,o,n;Fe(e,[...t>=1&&l?r:s,...i,...d?["insuredBeneficiaryType"]:[]]),(null==(a=e.beneficiaryList)?void 0:a.length)>0&&(d?e.beneficiaryList.forEach((e=>Fe(e,u))):e.beneficiaryList.length=0),e.planCode=De.value.planCode;const c=(null==(n=null==(o=e.productList)?void 0:o[0])?void 0:n.riskList)||[],p=De.value.insureProductRiskVOList||[];if(c.length&&p){const i=c.filter((e=>null!==p.find((i=>i.riskCode===e.riskCode))));e.productList[0].riskList=i}}))}return e},Ne=["annuityDrawDate","coveragePeriod","chargePeriod","paymentFrequency"],$e=async()=>{var e,i,t,a;if(ge.ifPersonalInfoSuccess||(null==(i=null==(e=Ce.value)?void 0:e.canTrail)?void 0:i.call(e))){ge.submitData.tenantId=`${Le}`,(null==(t=ge.submitData.insuredList)?void 0:t.length)&&(ge.submitData.insuredList=null==(a=ge.submitData)?void 0:a.insuredList.map((e=>({...e,productList:null==e?void 0:e.productList.map((e=>({...e,riskList:ge.riskList[e.productCode]})))}))));const e=xe();console.log(">>>数据构建<<<",e),await we(e)}},Be=async e=>{console.log("人的信息更改了"),Ee(e),ge.ifPersonalInfoSuccess=!0,console.log("处理第一被保人修改的dy变化"),$e()};r((()=>{var e;return((null==(e=ge.userData)?void 0:e.insuredList)||[]).map((e=>e.birthday)).join(",")})),o((()=>{var e;return((null==(e=ge.userData)?void 0:e.insuredList)||[]).map((e=>e.birthday)).join(",")}),l((async e=>{if(e){const e=ge.userData.insuredList.filter((e=>e.birthday))||[];if(!e.length)return;const i=Object.keys(be.value).map((e=>({productCode:e,planCode:"",riskEditVOList:be.value[e].productPlanInsureVOList[0].insureProductRiskVOList.map((e=>({insureProductRiskVO:e})))})));await J({calcProductFactorList:i,insuredVOList:e,holderVO:ge.userData.holder})}})),{});const qe=async(e,i,t)=>{if(i){const a=A(e);delete a.insurancePeriodValueList,delete a.paymentFrequencyList,delete a.paymentPeriodValueList;if(Ne.indexOf(i.key)>=0&&`${i.oldValue}`!=`${i.newValue}`){const s={};switch(i.key){case"annuityDrawDate":s.changeType=3;break;case"coveragePeriod":s.changeType=2;break;case"chargePeriod":s.changeType=1;break;case"paymentFrequency":s.changeType=4}const r=((e,i,t)=>{var a;return null==(a=be.value[e].productPlanInsureVOList)?void 0:a[0].insureProductRiskVOList.filter((e=>{const{paymentPeriodRule:a,paymentTypeRule:s,insurancePeriodRule:r}=e.productRiskInsureLimitVO;return t===B.MAIN_RISK&&e.mainRiskCode===i&&([a,s,r].includes(q.MAIN_RISK_SAME)||[a,s,r].includes(q.MAIN_RISK_1))?e:e.riskCode===i}))})(t,e.riskCode,e.riskType),l=(r||[]).map((i=>i.riskCode!==e.riskCode?{insureProductRiskVO:i,insureRiskEditReqVO:null}:{insureProductRiskVO:i,insureRiskEditReqVO:{riskId:e.riskId,riskCode:e.riskCode,...a,...s}}));if(!ge.isAutoChange){ge.isQuerying=!0;const e=ge.userData.insuredList.filter((e=>e.birthday))||[];if(!e.length)return!1;await J({calcProductFactorList:[{planCode:De.value.planCode,productCode:t,riskEditVOList:l}],insuredVOList:e,holderVO:ge.userData.holder}),ge.isQuerying=!1;return!0}ge.isAutoChange=!1}}return!0},Ue=e=>{ge.userData=e,ge.defaultValue=e},Qe=async e=>{var i;if(F.defaultData){const e=F.defaultData.find((e=>e.productCode===F.productInfo.productCode))||F.defaultData[0];Ue(e),Ee(null==(i=F.defaultData)?void 0:i[0])}else Pe.value.push(De.value.planCode),await(async()=>{var e;const i=await X({calcProductFactor:{productCode:null==(e=Object.keys(F.productCollection))?void 0:e[0]}});i.data&&(Ue(i.data),Ee(i.data))})()};n((()=>{var e,i;ge.riskIsInsure={},null==(i=null==(e=De.value)?void 0:e.insureProductRiskVOList)||i.forEach((e=>{var i;const t=null==(i=De.value.productRiskRelationVOList)?void 0:i.find((i=>i.collocationRiskId===e.riskId));t&&(ge.riskIsInsure[e.riskCode]={selected:"2",data:null,relation:t})}))})),c((()=>{De.value=F.dataSource,ge.loading=!0,ge.show=!0,ge.isAniShow=!0,ge.isSkipFirstTrial=!0,ge.hadSkipFirstTrial=!1}));return b({getTrialSuccessFlag:()=>ge.trialResultPremium>0,getRiderRiskDefaultValue:async(e,i,t)=>{var a,s,r;const l=ge.riskList[e].find((e=>e.riskCode===t)),{code:u,data:d}=await W({holder:ge.userData.holder,insuredList:ge.userData.insuredList,calcRiskDefaultFactorVO:{mainRiskInfo:l,riskCode:i}});if("10000"===u){let t=0;t=ge.riskList[e].findIndex(((e,t)=>e.riskCode===i)),ge.defaultValue.insuredList[0].productList=null==(r=null==(s=null==(a=ge.defaultValue)?void 0:a.insuredList)?void 0:s[0])?void 0:r.productList.map((i=>(e===i.productCode&&(i.riskList=[...i.riskList.slice(0,t),d,...i.riskList.slice(t,i.riskList.length)]),i)))}},getProductDefaultValue:async e=>{const{code:i,data:t}=await X({calcProductFactor:{productCode:e},holderVO:ge.userData.holder,insuredVOList:ge.userData.insuredList});"10000"===i&&(ge.defaultValue.insuredList[0].productList=t.insuredList[0].productList,Object.assign(ge.userData,t))},validate:()=>Ce.value.validate(!1),validateTrialFields:()=>Ce.value.validateTrialFields(),validateHolder:e=>{var i;return null==(i=Ce.value)?void 0:i.validateHolder(e)},getUserData:()=>({...ge.userData}),onShare:e=>{var i;ge.trialResultPremium&&(null==(i=te.value)||i.validate().then((()=>{Object.assign(Re.value,F.defaultOrder,{extInfo:{...Re.value.extInfo,buttonCode:K.TRIAL_PREMIUM,pageCode:Q.TRIAL_PREMIUM,templateId:he}});const i=Z(F.productInfo,ge.trialResult,Re.value);ee(i,((i,t)=>{t===S.JUMP_PAGE&&(Ie.value.link=`${window.location.href}&isShare=1&orderNo=${i.orderNo}`,e())})),console.log("---- validate success ----")})))},onNext:e=>{const{productCode:i,productName:t}=F.productInfo;ye?T(Q.TRIAL_PREMIUM,me.query):ge.trialResultPremium&&(Promise.all(te.value.map((e=>e.validate()))).then((()=>{Object.assign(Re.value,F.defaultOrder,{extInfo:{templateId:he,...Re.value.extInfo,...F.defaultOrder.extInfo||{},buttonCode:K.TRIAL_PREMIUM,pageCode:Q.TRIAL_PREMIUM}});const a=Z({...xe(),productCode:i,productName:t},ge.trialResult,Re.value);null==e||e(a),console.log("---- validate success ----")})),ge.loading=!1,ge.show=!0,ge.isAniShow=!0)},dealMixData:xe}),o((()=>ge.userData),(e=>{if(e){const{holder:i,insuredList:t}=e||{},a={holder:i,insuredList:t};Object.assign(ge.submitData,a),_("update:userData",a)}}),{immediate:!0,deep:!0}),o((()=>F.dataSource),(e=>{De.value=e}),{deep:!0,immediate:!0}),o((()=>F.productCollection),((e,i)=>{Object.keys(e||{}).length&&!ge.defaultValue&&Qe(),be.value=e,Object.keys(e||[]).forEach((i=>{ge.riskList[i]=e[i].productPlanInsureVOList[0].insureProductRiskVOList.map((e=>(ge.riskList[i]||[]).find((i=>i.riskCode===e.riskCode))||e))}))}),{deep:!0,immediate:!0}),o((()=>F.productFactor),(e=>{Oe.value=e}),{deep:!0,immediate:!0}),o((()=>F.defaultData),((e,i)=>{JSON.stringify(A(e))!==JSON.stringify(A(i))&&(ge.defaultValue=e,ge.userData=e||{})}),{deep:!0,immediate:!0}),(e,i)=>{var t,a;const s=w,r=M,l=j,u=E;return p(),f("div",ae,[v(e.$slots,"trialHead",{},void 0,!0),k("div",se,[m(U,{labels:L(ie)((null==(t=De.value)?void 0:t.insureProductRiskVOList)||[],De.value.productRiskRelationVOList)},null,8,["labels"]),k("div",re,[Oe.value?(p(),h(N,{ref_key:"personalInfoRef",ref:Ce,key:De.value.planCode,modelValue:L(ge).userData,"onUpdate:modelValue":i[0]||(i[0]=e=>L(ge).userData=e),"is-holder-exempt":L(Te),"is-trial":e.isTrial,"product-factor":Oe.value,"multi-insured-config":null==(a=De.value)?void 0:a.multiInsuredConfigVO,onTrailChange:Be},null,8,["modelValue","is-holder-exempt","is-trial","product-factor","multi-insured-config"])):y("",!0)]),v(e.$slots,"middleInfo",{},void 0,!0),m(s,{size:"large"}),k("div",le,[m(r,{title:"保障计划",class:"insurePlan","show-divider":!1}),Object.keys(be.value).length?(p(),f("div",ue,[(p(!0),f(C,null,g(Object.keys(be.value),((i,t)=>(p(),f("div",{key:i,class:"product-item"},[(p(!0),f(C,null,g(be.value[i].productPlanInsureVOList[0].insureProductRiskVOList||[],((a,s)=>{var r,u,d,o,n,c,v,h,C;return p(),f("div",{key:`${i}-${a.riskCode}`,class:"risk-item"},[m(l,{title:a.riskName,"risk-type":a.riskType},{default:R((()=>[e.isTrial?(p(),f("div",de,[a.riskType===L(B).MAIN_RISK?(p(),f("div",{key:0,class:"add-risk btn",onClick:e=>((e,i)=>{const t=ge.riskList[e].find((e=>e.riskCode===i));_("addRisk",e,t,ge.userData.insuredList)})(i,a.riskCode)}," +附加险 ",8,oe)):y("",!0),k("div",{class:"delete-risk btn",onClick:e=>((e,i,t)=>{O.confirm({message:"删除后将无法恢复，是否需要删除该产品？"}).then((()=>{var a,s;i?(ge.defaultValue.insuredList[0].productList=ge.defaultValue.insuredList[0].productList.map((i=>(i.productCode===e&&(i.riskList=i.riskList.filter((e=>e.riskCode!==t))),i))),ge.userData.insuredList[0].productList=ge.userData.insuredList[0].productList.map((i=>(i.productCode===e&&(i.riskList=i.riskList.filter((e=>e.riskCode!==t))),i)))):(ge.defaultValue.insuredList[0].productList=ge.defaultValue.insuredList[0].productList.filter((i=>i.productCode!==e)),ge.userData.insuredList[0].productList=ge.userData.insuredList[0].productList.filter((i=>i.productCode!==e))),(null==(s=null==(a=ge.userData.insuredList[0])?void 0:a.productList)?void 0:s.length)?we(ge.userData):ge.trialResult={initialPremium:0,initialAmount:0},_("deleteRisk",e,t,i)}))})(i,a.mainRiskCode,a.riskCode)}," 删除 ",8,ne)])):y("",!0)])),_:2},1032,["title","risk-type"]),m(x,{ref_for:!0,ref_key:"insureInfosRef",ref:te,"origin-data":a,"product-factor":De.value.productFactor,"default-value":L(ge).defaultValue?null==(c=null==(n=null==(o=null==(d=null==(u=null==(r=L(ge).defaultValue)?void 0:r.insuredList)?void 0:u[0])?void 0:d.productList)?void 0:o[t])?void 0:n.riskList)?void 0:c[s]:null,"trial-result":L(ge).trialResult,onTrialChange:(e,t)=>(async(e,i,t)=>{var a,s,r;(null==(s=null==(a=ge.riskList)?void 0:a[t])?void 0:s.find((i=>i.riskCode===e.riskCode)))?ge.riskList[t]=ge.riskList[t].map((i=>i.riskCode===e.riskCode?e:i)):(null==(r=ge.riskList[t])?void 0:r.length)?ge.riskList[t].push(e):ge.riskList[t]=[e],await qe(e,i,t)&&(console.log("标准险种的信息回传",e),$e())})(e,t,i)},null,8,["origin-data","product-factor","default-value","trial-result","onTrialChange"]),k("div",ce,[pe,k("span",fe,"¥"+I(L(D)((null==(C=null==(h=null==(v=Ve.value)?void 0:v[i])?void 0:h[s])?void 0:C.initialPremium)||"0"))+"元",1)])])})),128))])))),128))])):y("",!0),L(Me)&&e.isTrial?(p(),f("div",ve,[m(u,{activated:"",onClick:je},{default:R((()=>[P("+新增主险")])),_:1})])):y("",!0)]),ke]),v(e.$slots,"trialBtn",{trialData:L(ge).submitData,riskPremium:L(ge).trialResult,loading:L(ge).isQuerying,personalInfoRef:Ce.value},void 0,!0)])}}}),[["__scopeId","data-v-2c0cbf26"]]);export{Le as T};
