import{d as e,j as a,bg as n,bo as t,r as i,k as r,z as o,bl as s,ba as m,ah as l,aJ as u,bU as c,aL as d,o as p,c as f,q as y,m as v,u as E,bh as h,F as T,bV as R,bW as I}from"./index-92d58610.js";import{B as S,P as D,a as M}from"./PolicyInfo-7b759ecf.js";const g=e({__name:"PayInfo",props:{schema:{default:()=>[]},config:{default:()=>[]},modelValue:{default:()=>[]},isView:{type:Boolean,default:!1},userData:{default:()=>({})}},emits:["update:modelValue"],setup(e,{expose:g,emit:_}){const L=e,b="1",N=a(null),w=["cardType","bankCard"],P=["orderId","tenantId","id"],F={paymentType:"1",paymentMethod:"1",expiryMethod:"1",cardType:S.DEBIT},G=[...Object.keys(F),"paymentGenre"],k=[{title:"首期支付",schema:[],payInfoType:D.FIRST_TERM,formData:{},config:{cardType:{isView:!0},bankCard:{accountName:{isView:!0}}},objectType:n.INIT_SIGN},{title:"续期支付",schema:[],payInfoType:D.RENEW_TERM,formData:{paymentGenre:String(M.FIRST_SAME)},config:{cardType:{isView:!0},bankCard:{accountName:{isView:!0}}},objectType:n.RENEWAL_SIGN},{title:"年金领取银行卡",schema:[],payInfoType:D.REPRISE,formData:{paymentMethod:"1",paymentGenre:String(M.FIRST_SAME)},config:{},objectType:n.ANNUAL_SIGN}].map((e=>({...e,nanoid:t()}))),V=[["initialPaymentMethod","initialCardType","initialBankCard","initialPaymentType"],["renewalPaymentGenre","renewalPaymentMethod","renewalCardType","renewalBankCard","renewalPaymentType","expiryMethod"],["annuityPaymentGenre","annuityBankCard"]],A=i({schemaList:[]}),j=r((()=>{var e,a;return(null==(a=null==(e=L.userData.insuredList)?void 0:e[0])?void 0:a.name)||null})),W=r((()=>{var e,a;return(null==(a=null==(e=L.userData)?void 0:e.holder)?void 0:a.name)||null})),C=r((()=>["FIRST_TERM","RENEW_TERM","REPRISE"].reduce(((e,a)=>{const n=(t=a,A.schemaList.findIndex((e=>String(e.payInfoType)===String(D[t]))));var t;return n>-1&&(e[a]=n),e}),{}))),x=(e,a)=>{var n,t;return e>-1&&(null==(t=null==(n=A.schemaList[e])?void 0:n.formData)?void 0:t.paymentGenre)===`${M[a]}`},$=r((()=>{const e=A.schemaList.map((e=>`${e.payInfoType}`));return k.filter((a=>e.includes(String(a.payInfoType))))})),B=(e,a)=>{var n,t;const{formData:i}=A.schemaList[a]||{},{paymentGenre:r,id:o,...s}=i||{},m={bankCardImage:d(s.bankCardImage)?s.bankCardImage.map((a=>{var n,t;return{...a,objectType:null==(t=null==(n=$.value)?void 0:n[e])?void 0:t.objectType}})):[]};Object.keys(s).reduce(((e,a)=>(s[a]&&(e[a]=s[a]),e)),m),l(null==(n=A.schemaList[e])?void 0:n.formData,m),console.log("merge",null==(t=A.schemaList[e])?void 0:t.formData)};return o((()=>A.schemaList.map((e=>{var a,n;return[null==(a=null==e?void 0:e.formData)?void 0:a.paymentMethod,null==(n=null==e?void 0:e.formData)?void 0:n.paymentGenre]}))),((e,a)=>{s("支付方式/支付类型变动"),A.schemaList.forEach(((e,a)=>{const{formData:n,schema:i}=e||{},r=b===String(null==n?void 0:n.paymentMethod),o=[M.FIRST_SAME,M.RENEW_SAME].includes(Number(null==n?void 0:n.paymentGenre));i.forEach((e=>{e.hidden=(o||!r)&&((e,a=!1)=>{if(e){const n=[...w];return a&&n.push("paymentMethod"),n.includes(e)}return!1})(e.name,o)})),e.nanoid=t()}))}),{deep:!0,immediate:!0}),o((()=>{var e;return{...null==(e=A.schemaList[C.value.FIRST_TERM])?void 0:e.formData}}),((e,a)=>{if(L.isView||m(e,a))return!1;const{REPRISE:n,RENEW_TERM:t}=C.value;s("首期数据变动"),x(t,"FIRST_SAME")&&B(t,C.value.FIRST_TERM),x(n,"FIRST_SAME")&&B(n,t)}),{deep:!0}),o((()=>{var e;return null==(e=A.schemaList[C.value.RENEW_TERM])?void 0:e.formData}),((e,a)=>{if(L.isView||m(e,a))return!1;s("续期数据变动");const{REPRISE:n,RENEW_TERM:t}=C.value;x(n,"RENEW_SAME")&&B(n,t)}),{deep:!0}),o((()=>A.schemaList.map((e=>{var a;return null==(a=null==e?void 0:e.formData)?void 0:a.paymentMethod}))),((e,a)=>{JSON.stringify(e)!==JSON.stringify(a)&&A.schemaList.forEach(((n,t)=>{const i=e[t],r=a[t],o=i&&r&&String(i)!==String(r);n.payInfoType!==D.REPRISE&&o&&"1"!==String(i)&&l(n.formData,{...u(n.formData,(e=>I.includes(e))),bankCardImage:null})}))}),{deep:!0}),o((()=>{var e,a;return null==(a=null==(e=A.schemaList[C.value.RENEW_TERM])?void 0:e.formData)?void 0:a.paymentGenre}),(e=>{var a,n;if(L.isView)return!1;s("续期支付类型变动");const{FIRST_TERM:i,RENEW_TERM:r}=C.value;String(e)===String(M.FIRST_SAME)?B(r,i):A.schemaList[r]&&(l(A.schemaList[r].formData,{...u(A.schemaList[r].formData,(e=>!P.includes(e))),...null==(n=null==(a=$.value)?void 0:a[r])?void 0:n.formData,accountName:W.value,paymentGenre:e}),A.schemaList[r].nanoid=t())})),o((()=>{var e,a;return null==(a=null==(e=A.schemaList[C.value.REPRISE])?void 0:e.formData)?void 0:a.paymentGenre}),((e,a)=>{var n,i;if(L.isView||!e||!a||e===a)return!1;const{FIRST_TERM:r,RENEW_TERM:o,REPRISE:m}=C.value,c=[M.FIRST_SAME,M.RENEW_SAME].includes(Number(e));if(s("年金支付类型变动"),c){const a=String(e)===String(M.FIRST_SAME)?r:o;B(m,a)}else A.schemaList[m]&&(l(A.schemaList[m].formData,{...u(A.schemaList[m].formData,(e=>!P.includes(e))),...null==(i=null==(n=$.value)?void 0:n[m])?void 0:i.formData,accountName:j.value,paymentGenre:e}),A.schemaList[m].nanoid=t())}),{immediate:!0}),o([()=>L.schema,()=>L.config],(()=>{let e=[];A.schemaList=L.schema.reduce(((a,n)=>{const t=V.findIndex((e=>e.includes(n.name)));if("paymentDrawType"===n.name&&(e=n.columns.map((e=>e.code))),t>-1){const e=(e=>{if("string"!=typeof e||!e)return"";const[a,n]=e.match(/^(?:initial|renewal|annuity)(.*)$/)||[];return n?R(n):e})(n.name);if(G.includes(e)){const i=(({name:e,columns:a},n)=>{if(d(a)){const t={...n,...F},i=d(a)&&a.find((a=>`${a.code}`==`${t[e]}`));return{[e]:i?t[e]:null}}return{}})({name:e,columns:n.columns},k[t].formData);l(a[t].formData,i),l(k[t].formData,i)}a[t].schema.push({...n,name:e,payInfoType:k[t].payInfoType})}return a}),c(k)).map(((e,a)=>({...e,config:{...e.config,...L.config[a]||{}},nanoid:t()}))).filter((({schema:a,...n})=>e.includes(`${n.payInfoType}`)&&d(a)))}),{deep:!0,immediate:!0}),o((()=>L.modelValue),(e=>{d(e)&&A.schemaList.forEach(((a,n)=>{l(a.formData,e[n])}))}),{deep:!0,immediate:!0}),o((()=>{var e;return null==(e=A.schemaList)?void 0:e.map((e=>e.formData))}),(e=>{d(e)&&_("update:modelValue",e.map(((e,a)=>{const{payInfoType:n}=A.schemaList[a];return{...e,payInfoType:n}})))}),{deep:!0,immediate:!0}),o((()=>[W.value,j.value]),(([e,a])=>{(e||a)&&A.schemaList.forEach((n=>{const t=n.payInfoType===D.REPRISE;n.formData.accountName=t?a:e}))}),{deep:!0}),g({validate:e=>{var a;return Promise.all(N.value?null==(a=N.value)?void 0:a.map((e=>null==e?void 0:e.validate())):[])}}),(a,n)=>(p(!0),f(T,null,y(E(A).schemaList,((a,n)=>(p(),v(E(h),{ref_for:!0,ref_key:"payInfoFormRef",ref:N,key:`${a.nanoid}_${n}`,schema:a.schema,model:a.formData,config:a.config,title:a.title,"is-view":e.isView,"extra-provision":{objectType:a.objectType,objectId:a.formData.id}},null,8,["schema","model","config","title","is-view","extra-provision"])))),128))}});export{g as _};
