import{d as e,i,h as a,g as t,r as s,j as r,av as l,aw as u,T as d,z as o,au as n,O as c,o as p,c as f,f as v,a as k,b as m,u as L,l as h,q as y,F as g,n as C,w as R,e as I,ax as b,a8 as D,_ as P,ay as O,az as V,aA as T,aB as S,a6 as j,aC as w,aD as E,aE as M,aF as _,as as F,at as x}from"./index-49d4fa1c.js";import{c as A}from"./cloneDeep-e4501169.js";import{_ as N}from"./InsureInfos-10e821d8.js";import{P as $}from"./index-a5b92736.js";import{P as B,R as q,b as U}from"./trial-fabcc47b.js";import{_ as Q,P as K,B as z}from"./constants-f76a30cc.js";import{u as H,c as J,p as G,d as W,e as Y,q as X}from"./trial-b71b15d0.js";import{u as Z}from"./useOrder-6cf087e8.js";import{t as ee}from"./utils-9dbd2fd2.js";import{n as ie}from"./nextStep-f678aa1c.js";const ae=(e,i)=>{const a=[],t={};return null==e||e.forEach((e=>{t[e.riskId]=e})),null==i||i.forEach((e=>{var i,s,r,l;const{collocationType:u,collocationRiskId:d,riskId:o}=e;switch(u){case 2:{const e=null==(i=t[o])?void 0:i.riskName,r=null==(s=t[d])?void 0:s.riskName;a.push(`${e} 和 ${r} 必须同时投保`);break}case 3:{const e=null==(r=t[o])?void 0:r.riskName,i=null==(l=t[d])?void 0:l.riskName;a.push(`${e} 和 ${i} 不能同时投保`);break}}})),a};const te=e=>(F("data-v-1841f89b"),e=e(),x(),e),se={class:"com-body"},re={class:"trial-body"},le={class:"container"},ue={class:"container"},de={key:0,class:"product-list"},oe={key:0,class:"operate-bar"},ne=["onClick"],ce=["onClick"],pe={class:"premium-item"},fe=te((()=>k("span",{class:"label"},"首期保费",-1))),ve={class:"price"},ke={key:1,class:"add-main-risk"},me=te((()=>k("div",{class:"empty"},null,-1))),Le=e({name:"TrialBody"});var he=P(e({...Le,props:{selfKey:{default:""},dataSource:{default:()=>[]},productInfo:{default:()=>({productCode:"",productName:"",insurerCode:"",tenantId:"",planList:[]})},tenantProductDetail:{default:()=>({})},hideBenefit:{type:Boolean,default:!1},hidePopupButton:{type:Boolean,default:!1},title:{default:"算一算保费"},defaultData:{default:null},isTrial:{type:Boolean,default:!1},defaultOrder:{default:()=>({})},productCollection:{default:()=>({})},productFactor:{default:()=>({})},productRiskCodeMap:{default:()=>({})}},emits:["trialStart","trialEnd","update:userData","closeCustomerPopoup","addRisk","addMainRisk","deleteRisk"],setup(e,{expose:P,emit:F}){const x=e,te=i(null),Le=a();t();const{tenantId:he,templateId:ye,preview:ge}=Le.query,Ce=i(),Re=s({loading:!1,show:!1,select:{},list:[],userData:{},riskIsInsure:{},submitData:{},riskList:{},mainRiskVO:{},ifPersonalInfoSuccess:!1,trialMsg:"",trialResultPremium:0,trialResult:{initialPremium:0,initialAmount:0},isAniShow:!1,defaultValue:null,isAutoChange:!1,planIndex:0,isSkipFirstTrial:!1,hadSkipFirstTrial:!1,isQuerying:!1,currentPlanCode:""}),Ie=Z();i();const be=i(),De=i(x.dataSource),Pe=i([]),Oe=i(),Ve=i(),Te=i({}),Se=r((()=>{var e;let i=!1;return((null==(e=x.productRiskCodeMap)?void 0:e.productList)||[]).forEach((e=>{e.mergeRiskReqList.find((e=>1===e.exemptType))&&(i=!0)})),i})),je=i({}),we=l((async(e,i=!0)=>{Re.trialMsg="试算中...",Re.trialResultPremium=0,Re.loading=!0,F("trialStart");let a=!1;if(i){const{code:i}=await H(e);a="10000"===i}!a&&i||(Re.isQuerying=!0,x.hideBenefit||J(e).then((e=>{e.data&&e.code===u&&(je.value=e.data)})).finally((()=>{Re.loading=!1})),G(e).then((({code:i,data:a})=>{var t,s;a&&i===u&&((null==a?void 0:a.errorInfo)&&d(`${null==a?void 0:a.errorInfo}`),Re.trialMsg="",Re.trialResultPremium=a.initialPremium,Re.trialResult=a,null==(s=null==(t=a.insuredPremiumList)?void 0:t[0])||s.productPremiumList.forEach((e=>{Te.value[e.productCode]=e.riskPremiumDetailVOList})),F("trialEnd",a,e))})).finally((()=>{Re.loading=!1,Re.isQuerying=!1})))}),500),Ee=r((()=>{var e,i;return![B.SINGLE_PRODUCT,B.TWO_PRODUCT].includes(null==(i=null==(e=Object.values(x.productCollection))?void 0:e[0])?void 0:i.productClass)})),Me=()=>{F("addMainRisk",Re.userData.insuredList)},_e=e=>{const{holder:i,insuredList:a}=e||{};i&&(Re.submitData.holder=i),a&&a.length>0&&a.forEach(((e,i)=>{var a;Re.submitData.insuredList&&Re.submitData.insuredList.length>i?Re.submitData.insuredList[i]=e:((null==(a=Re.submitData)?void 0:a.insuredList)||(Re.submitData.insuredList=[]),Re.submitData.insuredList.push(e))}))},Fe=r((()=>x.productInfo.planList&&x.productInfo.planList.length>2)),xe=(e,i)=>{if(e){const a=["birthday","age","gender","id"];i.includes("occupationCodeList")&&a.push("occupationClass"),Object.keys(e).forEach((t=>{[...i,...a].includes(t)||(e[t]=null)}))}},Ae=(e,i=(e=>!0))=>V(e)?e.filter(i).map((e=>e.code)):[],Ne=()=>{console.log("--current plan = ",De.value),console.log("---current submit = ",Re.submitData);const e=A(Re.submitData);if(!Fe.value)return e;const{1:i,2:a,3:t}=De.value.productFactor||{};if(e.holder&&xe(e.holder,Ae(i)),e.insuredList){const i=["productList","beneficiaryList"],s=Ae(a,(e=>"2"!==String(e.subModuleType))),r=Ae(a,(e=>"2"===String(e.subModuleType))),l=V(r),u=Ae(t),d=V(u);e.insuredList.forEach(((e,a)=>{var t,o,n;xe(e,[...a>=1&&l?r:s,...i,...d?["insuredBeneficiaryType"]:[]]),(null==(t=e.beneficiaryList)?void 0:t.length)>0&&(d?e.beneficiaryList.forEach((e=>xe(e,u))):e.beneficiaryList.length=0),e.planCode=De.value.planCode;const c=(null==(n=null==(o=e.productList)?void 0:o[0])?void 0:n.riskList)||[],p=De.value.insureProductRiskVOList||[];if(c.length&&p){const i=c.filter((e=>null!==p.find((i=>i.riskCode===e.riskCode))));e.productList[0].riskList=i}}))}return e},$e=["annuityDrawDate","coveragePeriod","chargePeriod","paymentFrequency"],Be=async()=>{var e,i,a,t;if(Re.ifPersonalInfoSuccess||(null==(i=null==(e=Ce.value)?void 0:e.canTrail)?void 0:i.call(e))){Re.submitData.tenantId=`${he}`,(null==(a=Re.submitData.insuredList)?void 0:a.length)&&(Re.submitData.insuredList=null==(t=Re.submitData)?void 0:t.insuredList.map((e=>({...e,productList:null==e?void 0:e.productList.map((e=>({...e,riskList:Re.riskList[e.productCode]})))}))));const e=Ne();console.log(">>>数据构建<<<",e),await we(e)}},qe=async e=>{console.log("人的信息更改了"),_e(e),Re.ifPersonalInfoSuccess=!0,console.log("处理第一被保人修改的dy变化"),Be()};r((()=>{var e;return((null==(e=Re.userData)?void 0:e.insuredList)||[]).map((e=>e.birthday)).join(",")})),o((()=>{var e;return((null==(e=Re.userData)?void 0:e.insuredList)||[]).map((e=>e.birthday)).join(",")}),l((async e=>{if(e){const e=Re.userData.insuredList.filter((e=>e.birthday))||[];if(!e.length)return;const i=Object.keys(Oe.value).map((e=>({productCode:e,planCode:"",riskEditVOList:Oe.value[e].productPlanInsureVOList[0].insureProductRiskVOList.map((e=>({insureProductRiskVO:e})))})));await W({calcProductFactorList:i,insuredVOList:e,holderVO:Re.userData.holder})}})),{});const Ue=async(e,i,a)=>{if(i){const t=A(e);delete t.insurancePeriodValueList,delete t.paymentFrequencyList,delete t.paymentPeriodValueList;if($e.indexOf(i.key)>=0&&`${i.oldValue}`!=`${i.newValue}`){const s={};switch(i.key){case"annuityDrawDate":s.changeType=3;break;case"coveragePeriod":s.changeType=2;break;case"chargePeriod":s.changeType=1;break;case"paymentFrequency":s.changeType=4}const r=((e,i,a)=>{var t;return null==(t=Oe.value[e].productPlanInsureVOList)?void 0:t[0].insureProductRiskVOList.filter((e=>{const{paymentPeriodRule:t,paymentTypeRule:s,insurancePeriodRule:r}=e.productRiskInsureLimitVO;return a===q.MAIN_RISK&&e.mainRiskCode===i&&([t,s,r].includes(U.MAIN_RISK_SAME)||[t,s,r].includes(U.MAIN_RISK_1))?e:e.riskCode===i}))})(a,e.riskCode,e.riskType),l=(r||[]).map((i=>i.riskCode!==e.riskCode?{insureProductRiskVO:i,insureRiskEditReqVO:null}:{insureProductRiskVO:i,insureRiskEditReqVO:{riskId:e.riskId,riskCode:e.riskCode,...t,...s}}));if(!Re.isAutoChange){Re.isQuerying=!0;const e=Re.userData.insuredList.filter((e=>e.birthday))||[];if(!e.length)return!1;await W({calcProductFactorList:[{planCode:De.value.planCode,productCode:a,riskEditVOList:l}],insuredVOList:e,holderVO:Re.userData.holder}),Re.isQuerying=!1;return!0}Re.isAutoChange=!1}}return!0},Qe=e=>{Re.userData=e,Re.defaultValue=e},Ke=async e=>{var i;if(x.defaultData){const e=x.defaultData.find((e=>e.productCode===x.productInfo.productCode))||x.defaultData[0];Qe(e),_e(null==(i=x.defaultData)?void 0:i[0])}else Pe.value.push(De.value.planCode),await(async()=>{var e;const i=await X({calcProductFactorList:[{productCode:null==(e=Object.keys(x.productCollection))?void 0:e[0]}]});i.data&&(Qe(i.data),_e(i.data))})()};n((()=>{var e,i;Re.riskIsInsure={},null==(i=null==(e=De.value)?void 0:e.insureProductRiskVOList)||i.forEach((e=>{var i;const a=null==(i=De.value.productRiskRelationVOList)?void 0:i.find((i=>i.collocationRiskId===e.riskId));a&&(Re.riskIsInsure[e.riskCode]={selected:"2",data:null,relation:a})}))})),c((()=>{De.value=x.dataSource,Re.loading=!0,Re.show=!0,Re.isAniShow=!0,Re.isSkipFirstTrial=!0,Re.hadSkipFirstTrial=!1}));return P({getTrialSuccessFlag:()=>Re.trialResultPremium>0,getRiderRiskDefaultValue:async(e,i,a)=>{var t,s,r;const l=Re.riskList[e].find((e=>e.riskCode===a)),{code:u,data:d}=await Y({holder:Re.userData.holder,insuredList:Re.userData.insuredList,calcRiskDefaultFactorVO:{mainRiskInfo:l,riskCodeList:i}});if("10000"===u){let a=0;a=Re.riskList[e].findIndex(((e,a)=>e.riskCode===i[0])),Re.defaultValue.insuredList[0].productList=null==(r=null==(s=null==(t=Re.defaultValue)?void 0:t.insuredList)?void 0:s[0])?void 0:r.productList.map((i=>(e===i.productCode&&(i.riskList=[...i.riskList.slice(0,a),...d,...i.riskList.slice(a,i.riskList.length)]),i)))}},getProductDefaultValue:async e=>{const{code:i,data:a}=await X({calcProductFactorList:e.map((e=>({productCode:e}))),holderVO:Re.userData.holder,insuredVOList:Re.userData.insuredList});"10000"===i&&(Re.defaultValue.insuredList[0].productList=a.insuredList[0].productList,Object.assign(Re.userData,a))},validate:()=>Ce.value.validate(!1),validateTrialFields:()=>Ce.value.validateTrialFields(),validateHolder:e=>{var i;return null==(i=Ce.value)?void 0:i.validateHolder(e)},getUserData:()=>({...Re.userData}),onShare:e=>{var i;Re.trialResultPremium&&(null==(i=te.value)||i.validate().then((()=>{Object.assign(Ie.value,x.defaultOrder,{extInfo:{...Ie.value.extInfo,buttonCode:z.TRIAL_PREMIUM,pageCode:K.TRIAL_PREMIUM,templateId:ye}});const i=ee(x.productInfo,Re.trialResult,Ie.value);ie(i,((i,a)=>{a===S.JUMP_PAGE&&(be.value.link=`${window.location.href}&isShare=1&orderNo=${i.orderNo}`,e())})),console.log("---- validate success ----")})))},onNext:e=>{const{productCode:i,productName:a}=x.productInfo;ge?T(K.TRIAL_PREMIUM,Le.query):Re.trialResultPremium&&(Promise.all(te.value.map((e=>e.validate()))).then((()=>{Object.assign(Ie.value,x.defaultOrder,{extInfo:{templateId:ye,...Ie.value.extInfo,...x.defaultOrder.extInfo||{},buttonCode:z.TRIAL_PREMIUM,pageCode:K.TRIAL_PREMIUM}});const t=ee({...Ne(),productCode:i,productName:a},Re.trialResult,Ie.value);null==e||e(t),console.log("---- validate success ----")})),Re.loading=!1,Re.show=!0,Re.isAniShow=!0)},dealMixData:Ne}),o((()=>Re.userData),(e=>{if(e){const{holder:i,insuredList:a}=e||{},t={holder:i,insuredList:a};Object.assign(Re.submitData,t),F("update:userData",t)}}),{immediate:!0,deep:!0}),o((()=>x.dataSource),(e=>{De.value=e}),{deep:!0,immediate:!0}),o((()=>x.productCollection),((e,i)=>{Object.keys(e||{}).length&&!Re.defaultValue&&Ke(),Oe.value=e,Object.keys(e||[]).forEach((i=>{Re.riskList[i]=e[i].productPlanInsureVOList[0].insureProductRiskVOList.map((e=>(Re.riskList[i]||[]).find((i=>i.riskCode===e.riskCode))||e))}))}),{deep:!0,immediate:!0}),o((()=>x.productFactor),(e=>{Ve.value=e}),{deep:!0,immediate:!0}),o((()=>x.defaultData),((e,i)=>{JSON.stringify(A(e))!==JSON.stringify(A(i))&&(Re.defaultValue=e,Re.userData=e||{})}),{deep:!0,immediate:!0}),(e,i)=>{var a,t,s;const r=w,l=E,u=M,d=_;return p(),f("div",se,[v(e.$slots,"trialHead",{},void 0,!0),k("div",re,[m(Q,{labels:L(ae)((null==(a=De.value)?void 0:a.insureProductRiskVOList)||[],De.value.productRiskRelationVOList)},null,8,["labels"]),k("div",le,[(null==(t=Object.keys(Ve.value))?void 0:t.length)?(p(),h($,{ref_key:"personalInfoRef",ref:Ce,key:De.value.planCode,modelValue:L(Re).userData,"onUpdate:modelValue":i[0]||(i[0]=e=>L(Re).userData=e),"is-holder-exempt":L(Se),"is-trial":e.isTrial,"product-factor":Ve.value,"multi-insured-config":null==(s=De.value)?void 0:s.multiInsuredConfigVO,onTrailChange:qe},null,8,["modelValue","is-holder-exempt","is-trial","product-factor","multi-insured-config"])):y("",!0)]),v(e.$slots,"middleInfo",{},void 0,!0),m(r,{size:"large"}),k("div",ue,[m(l,{title:"保障计划",class:"insurePlan","show-divider":!1}),Object.keys(Oe.value).length?(p(),f("div",de,[(p(!0),f(g,null,C(Object.keys(Oe.value),((i,a)=>(p(),f("div",{key:i,class:"product-item"},[(p(!0),f(g,null,C(Oe.value[i].productPlanInsureVOList[0].insureProductRiskVOList||[],((t,s)=>{var r,l,d,o,n,c,v,h,g;return p(),f("div",{key:`${i}-${t.riskCode}`,class:"risk-item"},[m(u,{title:t.riskName,"risk-type":t.riskType},{default:R((()=>[e.isTrial?(p(),f("div",oe,[t.riskType===L(q).MAIN_RISK?(p(),f("div",{key:0,class:"add-risk btn",onClick:e=>((e,i)=>{const a=Re.riskList[e].find((e=>e.riskCode===i));F("addRisk",e,a,Re.userData.insuredList)})(i,t.riskCode)}," +附加险 ",8,ne)):y("",!0),k("div",{class:"delete-risk btn",onClick:e=>((e,i,a)=>{O.confirm({message:"删除后将无法恢复，是否需要删除该产品？"}).then((()=>{var t,s;i?(Re.defaultValue.insuredList[0].productList=Re.defaultValue.insuredList[0].productList.map((i=>(i.productCode===e&&(i.riskList=i.riskList.filter((e=>e.riskCode!==a))),i))),Re.userData.insuredList[0].productList=Re.userData.insuredList[0].productList.map((i=>(i.productCode===e&&(i.riskList=i.riskList.filter((e=>e.riskCode!==a))),i)))):(Re.defaultValue.insuredList[0].productList=Re.defaultValue.insuredList[0].productList.filter((i=>i.productCode!==e)),Re.userData.insuredList[0].productList=Re.userData.insuredList[0].productList.filter((i=>i.productCode!==e))),(null==(s=null==(t=Re.userData.insuredList[0])?void 0:t.productList)?void 0:s.length)?we(Re.userData):Re.trialResult={initialPremium:0,initialAmount:0},F("deleteRisk",e,a,i)}))})(i,t.mainRiskCode,t.riskCode)}," 删除 ",8,ce)])):y("",!0)])),_:2},1032,["title","risk-type"]),m(N,{ref_for:!0,ref_key:"insureInfosRef",ref:te,"origin-data":t,"product-factor":De.value.productFactor,"default-value":L(Re).defaultValue?null==(c=null==(n=null==(o=null==(d=null==(l=null==(r=L(Re).defaultValue)?void 0:r.insuredList)?void 0:l[0])?void 0:d.productList)?void 0:o[a])?void 0:n.riskList)?void 0:c[s]:null,"trial-result":L(Re).trialResult,onTrialChange:(e,a)=>(async(e,i,a)=>{var t,s,r;if((null==(s=null==(t=Re.riskList)?void 0:t[a])?void 0:s.find((i=>i.riskCode===e.riskCode)))?Re.riskList[a]=Re.riskList[a].map((i=>i.riskCode===e.riskCode?e:i)):(null==(r=Re.riskList[a])?void 0:r.length)?Re.riskList[a].push(e):Re.riskList[a]=[e],e.exemptFlag!==j.YES&&!(await Ue(e,i,a)))return;console.log("标准险种的信息回传",e),Be()})(e,a,i)},null,8,["origin-data","product-factor","default-value","trial-result","onTrialChange"]),k("div",pe,[fe,k("span",ve,"¥"+I(L(b)((null==(g=null==(h=null==(v=Te.value)?void 0:v[i])?void 0:h[s])?void 0:g.initialPremium)||"0"))+"元",1)])])})),128))])))),128))])):y("",!0),L(Ee)&&e.isTrial?(p(),f("div",ke,[m(d,{activated:"",onClick:Me},{default:R((()=>[D("+新增主险")])),_:1})])):y("",!0)]),me]),v(e.$slots,"trialBtn",{trialData:L(Re).submitData,riskPremium:L(Re).trialResult,loading:L(Re).isQuerying,personalInfoRef:Ce.value},void 0,!0)])}}}),[["__scopeId","data-v-1841f89b"]]);export{he as T};
