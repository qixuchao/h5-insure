let e=!1;function s(s){const{fn:n,cbName:o="cbname",params:a={}}=s;return new Promise(((s,r)=>{new Promise(((s,n)=>{if(e)s("success");else{const o=setTimeout((()=>{window.AppJSInterface||window.webkit&&window.webkit.messageHandlers?(clearTimeout(o),s("success"),e=!0):(clearTimeout(o),n(new Error("JsBridge初始化失败：找不到window.AppJSInterface或者window.webkit.messageHandlers")))}),100)}})).then((()=>{window[o]=e=>{if(console.log("data>>>>>>>",e),e)if("string"==typeof e)try{s(JSON.parse(e))}catch(n){s(e)}else s(e);else s(e)},a.cbname=o,((e,s)=>{window.AppJSInterface?window.AppJSInterface[e](JSON.stringify(s)):window.webkit.messageHandlers&&window.webkit.messageHandlers[e].postMessage(JSON.stringify(s))})(n,a)})).catch((e=>{r(e)}))}))}const n=(e,n)=>s({fn:"openWebView",cbName:"js_openWebView",params:{title:e,link:n,showProgress:!0}}),o=(e,n)=>s({fn:"openPDFDoc",cbName:"js_openPDFDoc",params:{title:e,link:n,showProgress:!0}}),a=e=>s({fn:"na_openBrowser",cbName:"js_openBrowser",params:{url:e}});export{o as a,a as d,n as o};
