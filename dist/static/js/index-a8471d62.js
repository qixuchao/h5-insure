var Z=Object.defineProperty,ee=Object.defineProperties;var te=Object.getOwnPropertyDescriptors;var M=Object.getOwnPropertySymbols;var oe=Object.prototype.hasOwnProperty,ae=Object.prototype.propertyIsEnumerable;var $=(i,d,o)=>d in i?Z(i,d,{enumerable:!0,configurable:!0,writable:!0,value:o}):i[d]=o,m=(i,d)=>{for(var o in d||(d={}))oe.call(d,o)&&$(i,o,d[o]);if(M)for(var o of M(d))ae.call(d,o)&&$(i,o,d[o]);return i},C=(i,d)=>ee(i,te(d));import{a as se,g as re,E as g,M as ie,a6 as q,y as ne,_ as V,o as ue,r as y,j as O,n as J,p as h,m as I,z as D,A as p,k as A,t as B,a4 as ce,a5 as de,C as le}from"./vendor-9d7eb2ed.js";import{P as K,a as pe}from"./index-27ef480d.js";import{i as fe,p as me}from"./trial-2b9ca0ae.js";import{_ as ke,E as ge}from"./index-29d69285.js";const Ae=se({id:"createProposal",state:()=>({proposalInfo:{},trialData:[],excludeProduct:[],proposalId:0}),actions:{setProposalInfo(i){this.$state.proposalInfo=i},setTrialData(i){this.$state.trialData=i},setExcludeProduct(i){this.$state.excludeProduct=i}}});const he=i=>(ce("data-v-1ae1bec1"),i=i(),de(),i),_e={class:"com-product-risk-wrapper"},Ve={class:"popup-container"},Ie=he(()=>D("div",{class:"popup-title"},"\u8BF7\u9009\u62E9\u4FDD\u969C\u65B9\u6848",-1)),ve={class:"risk-trial-wrapper"},Le={class:"risk-content"},Pe={key:0,class:"risk"},ye={class:"footer-bar"},Oe=le("\u786E\u5B9A"),De=re({props:{isShow:{type:Boolean,default:!1},type:{default:"add"},productId:{default:0},riskType:{default:1},formInfo:{default:{}},productData:{default:()=>({})},holder:{default:()=>({})},insured:{default:()=>({})},riderRisk:{default:()=>[]},currentRisk:{default:()=>[]}},emits:["close","finished"],setup(i,{emit:d}){var N,T;const o=i,F=g({personVO:m({occupationCodeList:[]},o.holder)}),v=g({insuredCode:"",personVO:m({occupationCodeList:((T=(((N=o.insured)==null?void 0:N.proposalInsuredProductList)||[]).find(t=>t.productId===o.productData.productBasicInfoVO.id))==null?void 0:T.occupationCodeList)||[]},o.insured)}),L=g({}),w=g({}),_=g({}),E=g({}),S=g({}),e=ie({currentPlan:"0",isShow:o.isShow,riskBaseInfo:{},holderFactor:[],insuredFactor:[],riskData:[],riskPlanData:[],trialResult:{},canTrial:!0,retrialTip:!1,enumList:{},ageRange:[],collapseName:["1"],type:o.type});q("premium",S.value),q("source",{type:e.type,origin:"proposal",showRiskList:o.currentRisk});const x=ne(()=>{var a;let t="";if((a=e.riskData)==null?void 0:a[0]){const s=e.riskData[0],r=((s==null?void 0:s.requiredRiderRiskVOList)||[]).map(c=>c.riskName);r.length&&(t=`\u7279\u6B8A\u63D0\u793A: ${s.riskName}\u548C${r.join("\u3001")}\u5FC5\u987B\u540C\u65F6\u6295\u4FDD`)}return t}),U=(t,a)=>{var c,u,l,n,f,R,k,P,j;const s=(t.insuredVOList[0].productPlanVOList[0].riskVOList||[]).map(b=>C(m({},b),{premium:a[b.riskCode].premium,amount:a[b.riskCode].amount}));return{proposalHolder:m({},(c=t.holder)==null?void 0:c.personVO),proposalInsuredList:[C(m({},t.insuredVOList[0].personVO),{dateRange:{min:(l=(u=_.value)==null?void 0:u.ageRangeObj)==null?void 0:l.minAge,max:(f=(n=_.value)==null?void 0:n.ageRangeObj)==null?void 0:f.maxAge},proposalInsuredProductList:[{productId:e.riskBaseInfo.id,productName:e.riskBaseInfo.productName,dateRange:{min:(k=(R=_.value)==null?void 0:R.ageRangeObj)==null?void 0:k.minAge,max:(j=(P=_.value)==null?void 0:P.ageRangeObj)==null?void 0:j.maxAge},occupationCodeList:t.insuredVOList[0].personVO.occupationCodeList,proposalProductRiskList:s}]})]}},Y=(t,a)=>{var r,c;const s=t;if(s.chargePeriod==="3"){const u=(a.chargePeriod||"").split("_");if(s.exemptFlag===1){if(u[0]==="year")u[1]-=1;else{let l=0;((r=v.value.personVO)==null?void 0:r.birthday)&&(l=+new Date-+new Date((c=v.value.personVO)==null?void 0:c.birthday)/(1e3*60*60*24*365)),u[1]-=l+1}u[0]="year",s.coveragePeriod=u.join("_")}else u[1]&&(u[1]-=1);s.chargePeriod=u.join("_")}},z=()=>{var c;const t=JSON.parse(JSON.stringify(L.value[e.currentPlan])),a=Object.values(t).find(u=>u.riskType===1),s=Object.values(t).map(u=>{const l=u;return Y(l,a),l.liabilityVOList=(l.liabilityVOList||[]).filter(n=>n.optionalFlag===1||n.liabilityAttributeValue&&n.liabilityAttributeValue!=="-1").map(n=>{const f=n;return f.liabilityAttributeValue==="0"&&(f.liabilityAttributeValue=""),f}),l}),r={holder:F.value,productCode:e.riskBaseInfo.productCode,insuredVOList:[C(m({},v.value),{productPlanVOList:[{planCode:e.currentPlan||"",insurerCode:(c=e.riskBaseInfo)==null?void 0:c.insurerCode,riskVOList:s}]})]};me(m({},r)).then(({code:u,data:l})=>{if(u==="10000"){e.retrialTip=!1,e.trialResult=l,e.canTrial=!1;const n={},f=(R=[])=>{(R||[]).forEach(k=>{var P;n[k.riskCode]=k,((P=k.riskPremiumDetailVOList)==null?void 0:P.length)&&f(k.riskPremiumDetailVOList)})};f(l.riskPremiumDetailVOList),Object.assign(S.value,n),d("finished",U(r,n))}else e.retrialTip=!0})},H=()=>{var t,a,s,r,c;Promise.all([(a=(t=w.value)==null?void 0:t.validateForm)==null?void 0:a.call(t),(r=(s=_.value)==null?void 0:s.validateForm)==null?void 0:r.call(s),(c=E.value)==null?void 0:c.validate()]).then(()=>{z()})},G=()=>{d("close")},Q=()=>{ge({dictCodeList:["RISK_PAYMENT_PERIOD","RISK_INSURANCE_PERIOD"]}).then(({code:a,data:s})=>{if(a==="10000"){const r={};s.forEach(c=>{r[c.dictCode]=c.dictItemList}),e.enumList=r}})},W=()=>{fe({productId:o.productId,source:2}).then(({code:t,data:a})=>{t==="10000"&&(e.riskBaseInfo=a.productBasicInfoVO,(a.productRiskVoList[0].riskDetailVOList||[]).forEach((s,r)=>{r===0&&(e.currentPlan=s.planCode||"0"),Object.assign(L.value,{[s.planCode||r]:{}})}),e.riskData=a.productRiskVoList[0].riskDetailVOList||[],e.riskPlanData=a.productRelationPlanVOList||[])}).finally(()=>{})},X=t=>{e.holderFactor=t.holderFactorList,e.insuredFactor=t.insuredFactorList,e.ageRange=t.ageRange};return V([()=>L.value,()=>F.value,()=>v.value],t=>{t&&!e.canTrial&&(e.canTrial=!0,e.retrialTip=!0)},{deep:!0}),V(()=>o.isShow,t=>{e.isShow=t},{immediate:!0}),V(()=>o.productId,t=>{t&&W()},{immediate:!0}),V(()=>o.formInfo,(t={})=>{if(!(o.type==="add"||o.type==="repeatAdd")){const a={};t.proposalProductRiskList.forEach(s=>{a[s.riskId]=s}),Object.assign(L.value,{0:a})}},{deep:!0,immediate:!0}),V(()=>o.productData,t=>{var a;o.type==="add"||o.type==="repeatAdd"||(e.riskBaseInfo=t.productBasicInfoVO,e.riskData=((a=t.productRiskVoList)==null?void 0:a[0].riskDetailVOList)||[])},{deep:!0,immediate:!0}),V(()=>o.type,t=>{e.type=t}),ue(()=>{Q()}),(t,a)=>{const s=y("ProMessage"),r=y("ProCard"),c=y("VanForm"),u=y("VanButton"),l=y("VanPopup");return O(),J("div",_e,[h(l,{show:p(e).isShow,"onUpdate:show":a[0]||(a[0]=n=>p(e).isShow=n),round:"",position:"bottom",closeable:"",style:{height:"80%"},onClose:G},{default:I(()=>[D("div",Ve,[Ie,p(x)?(O(),A(s,{key:0,content:p(x)},null,8,["content"])):B("",!0),D("div",ve,[p(e).holderFactor.length?(O(),A(r,{key:0,title:"\u6295\u4FDD\u4EBA",class:"part-card"},{default:I(()=>{var n;return[h(K,{ref_key:"holderRef",ref:w,"insured-code":(n=p(e).riskBaseInfo)==null?void 0:n.insurerCode,"form-info":F.value.personVO,"factor-list":p(e).holderFactor,"age-range":p(e).ageRange},null,8,["insured-code","form-info","factor-list","age-range"])]}),_:1})):B("",!0),p(e).insuredFactor.length?(O(),A(r,{key:1,title:"\u88AB\u4FDD\u4EBA",class:"part-card"},{default:I(()=>{var n;return[h(K,{ref_key:"insuredRef",ref:_,"insured-code":(n=p(e).riskBaseInfo)==null?void 0:n.insurerCode,"form-info":v.value.personVO,"factor-list":p(e).insuredFactor,"age-range":p(e).ageRange},null,8,["insured-code","form-info","factor-list","age-range"])]}),_:1})):B("",!0),D("div",Le,[h(r,{title:"\u6295\u4FDD\u65B9\u6848",class:"part-card"},{default:I(()=>[p(e).riskData.length?(O(),J("div",Pe,[h(c,{ref_key:"riskFormRef",ref:E,"input-align":"right","error-message-align":"right"},{default:I(()=>[h(pe,{"risk-info":L.value[0],enums:p(e).enumList,"origin-data":p(e).riskData,"pick-factor":X},null,8,["risk-info","enums","origin-data"])]),_:1},512)])):B("",!0)]),_:1})])]),D("div",ye,[h(u,{block:"",type:"primary",onClick:H},{default:I(()=>[Oe]),_:1})])])]),_:1},8,["show"])])}}});var we=ke(De,[["__scopeId","data-v-1ae1bec1"]]);export{we as P,Ae as u};
