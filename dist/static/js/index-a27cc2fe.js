import{d as e,j as i,r as n,B as r,aF as a,o,m as s,w as l,g as t,u as d,bd as u,be as c,_ as m,bf as p,bg as f,bh as v,T as g,bi as y,af as h,bj as V,a6 as O,k as b,aJ as I,bk as T,ba as S,bl as L,c as x,b as C,f as k,F as w,q as j,a8 as F,aI as N,bm as H,ae as B,bn as _,i as J,ac as $,bo as P,bp as E,bq as M,a as R,e as U,a0 as A,a9 as D,br as q,bc as Y,bs as z,bt as G}from"./index-bfdeed22.js";import{c as K}from"./cloneDeep-755637cb.js";import"./PolicyInfo-f418ec14.js";import{l as Q}from"./lodash-7705a35c.js";import{B as W}from"./infoCollection-0e99d990.js";import{O as X}from"./questionnaire-62331097.js";import{s as Z,g as ee,a as ie,c as ne,b as re,t as ae,i as oe}from"./util-b6e6a5aa.js";const se=e({name:"BeneficiaryItem"});var le=m(e({...se,props:{modelValue:{default:()=>({})},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},title:{default:"受益人"},holderPersonVO:{default:()=>({})}},emits:["update:modelValue","trailChange"],setup(e,{expose:m,emit:b}){const I=e,T=i(null),S=n({validated:!1,schema:[],config:{},personVO:{}});r((()=>I.config),(e=>{e&&Object.assign(S.config,e)}),{deep:!0,immediate:!0}),r((()=>I.schema),(e=>{e&&Object.assign(S.schema,K(I.schema))}),{deep:!0,immediate:!0}),r((()=>K(I.modelValue)),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(v("受益人数据变动了"),Object.assign(S.personVO,e))}),{deep:!0,immediate:!0}),r((()=>S.personVO),(e=>{e&&(`${S.personVO.isHolder}`!=`${O.YES}`&&(Object.keys(S.personVO).filter((e=>{var i,n;return!(!["gender","birthday","certType","certNo","name"].includes(e)||`${null==(i=S.personVO)?void 0:i[e]}`!=`${null==(n=null==I?void 0:I.holderPersonVO)?void 0:n[e]}`)}))||[]).length>=2&&g("录入的受益人同投保人基本信息，请勾选“同投保人"),b("update:modelValue",e))}),{deep:!0,immediate:!0});return r((()=>I.holderPersonVO),a((e=>{(e=>{var i,n;const r={};(null==(i=S.personVO)?void 0:i.age)&&(null==(n=S.personVO)?void 0:n.age)<18&&(S.schema.find((e=>"mobile"===e.name))&&(r.mobile=(null==e?void 0:e.mobile)||""),S.schema.find((e=>"annuallyComeList"===e.name))&&(r.annuallyComeList=["7"],r.annuallyComeDesc="无")),Object.assign(S.personVO,r)})(e)}),300),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=S.personVO)?void 0:e.relationToInsured}),((e,i)=>{if(e===i)return!1;v("受益人与被保人关系变动了");const{certType:n}=S.personVO||{},[r,a]=y(S.schema,{certType:n,relationToHolder:e});return h(S.config,a),!I.isView&&e&&i&&Object.assign(S.personVO,{...V(S.personVO,(e=>!(r&&"certType"===e))),relationToInsured:e}),!1}),{immediate:!0}),m({validate:e=>f(T,I.trialFactorCodes,e),validateTrialFields:()=>p({personVO:S.personVO,trialFactorCodes:I.trialFactorCodes})}),(e,i)=>(o(),s(d(c),{ref_key:"formRef",ref:T,class:"personal-info-card",title:e.title,model:d(S).personVO,schema:d(S).schema,config:d(S).config,"is-view":e.isView,"extra-provision":{objectType:d(u).BENEFICIARY,objectId:d(S).personVO.id}},{cardTitleExtra:l((()=>[t(e.$slots,"default",{},void 0,!0)])),"header-item":l((()=>[t(e.$slots,"header-item",{},void 0,!0)])),customer:l((()=>[t(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]))}}),[["__scopeId","data-v-3735a3e6"]]);const te=["onClick"],de=e({name:"InsuredItem"});var ue=m(e({...de,props:{modelValue:{default:()=>({})},title:{default:""},holderPersonVO:{default:()=>({})},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},trialFactorCodes:{default:()=>[]},multiBeneficiaryMaxNum:{default:null},beneficiaryList:{default:()=>[]},beneficiarySchema:{default:()=>[]},guardian:{default:()=>({})},guardianSchema:{default:()=>[]}},emits:["update:modelValue","update:beneficiaryList","update:guardian"],setup(e,{expose:a,emit:m}){const _=e,J=i(null),$=i(null),P=i(null),E=i(null),M={schema:[],trialFactorCodes:[],config:{occupationCode:{isView:!0}},personVO:{}},R=n({validated:!1,schema:[],config:{},personVO:{},beneficiaryTypeSchemaList:[],beneficiarySchemaList:[],beneficiaryList:[],guardianSchema:[],guardian:{}}),U=i(!1),A=b((()=>{const{age:e,relationToHolder:i}=R.personVO;return!["1","4","5"].includes(i)&&null!==e&&+e<18||(R.guardian={},!1)})),D=()=>{const e={};return R.beneficiarySchemaList.reduce(((e,i)=>{var n,r;return(null==(n=_.holderPersonVO)?void 0:n[i.name])&&(e[i.name]=null==(r=_.holderPersonVO)?void 0:r[i.name]),e}),e),e},q=(e={})=>{const i=e;return R.beneficiarySchemaList.reduce(((e,i)=>{var n;return(null==(n=_.holderPersonVO)?void 0:n[i.name])&&(e[i.name]=null),e}),i),i},Y=()=>{R.beneficiaryList.push(K({...M,nanoid:T(),schema:_.beneficiarySchema}))},z=b((()=>!_.multiBeneficiaryMaxNum||R.beneficiaryList.length<_.multiBeneficiaryMaxNum)),G=b((()=>!R.schema.filter((e=>{var i;return!(e.hidden||(null==(i=R.config[e.name])?void 0:i.hidden))})).length)),Z=b((()=>R.schema.filter((e=>e.isSelfInsuredNeed)).map((e=>e.name)))),ee=b((()=>I(_.beneficiarySchema))),ie=b((()=>{var e;return String(null==(e=R.personVO)?void 0:e.insuredBeneficiaryType)===W.SPECIFY}));return r((()=>_.holderPersonVO),Q.exports.debounce((e=>{var i;v("------投保人信息变动了-----");const{id:n,...r}=e||{};if("1"===String(null==(i=R.personVO)?void 0:i.relationToHolder)){U.value=!0;const e=I(Z.value)?Object.keys(r).reduce(((e,i)=>([...Z.value,"occupationClass"].includes(i)&&!["birthday","age","gender"].includes(i)||(e[i]=r[i]),e)),{}):r,i=(r.certImage||[]).map((e=>({...e,objectId:R.personVO.id,objectType:X.INSURED})));Object.assign(R.personVO,e,{certImage:i})}else(e=>{var i;const n={};(null==(i=R.personVO)?void 0:i.age)<18&&(R.schema.find((e=>"mobile"===e.name))&&(n.mobile=(null==e?void 0:e.mobile)||""),R.schema.find((e=>"personalAnnualIncome"===e.name))&&(n.personalAnnualIncome="0"),R.schema.find((e=>"annuallyComeList"===e.name))&&(n.annuallyComeList=["7"],n.annuallyComeDesc="无")),Object.assign(R.personVO,n)})(e)}),300),{deep:!0,immediate:!0}),r([()=>{var e;return null==(e=_.holderPersonVO)?void 0:e.familyAnnualIncome},()=>{var e;return null==(e=R.personVO)?void 0:e.familyAnnualIncome}],Q.exports.debounce((([e,i],[n,r])=>{(e!==n&&(+e).toFixed().length>5||i!==r&&(+i).toFixed().length>5)&&g("请核实年收入是否准确")}),300)),r((()=>_.beneficiarySchema),(e=>{R.beneficiarySchemaList=I(e)?e.filter((e=>"insuredBeneficiaryType"!==e.name)):[],R.beneficiaryTypeSchemaList=I(e)?e.filter((e=>"insuredBeneficiaryType"===e.name)):[]}),{deep:!0,immediate:!0}),r((()=>_.guardianSchema),(e=>{R.guardianSchema=e}),{deep:!0,immediate:!0}),r(ie,((e,i)=>{String(e)!==String(i)&&(v("受益人类型关系变动了"),e?(R.beneficiaryList=I(_.beneficiaryList)?_.beneficiaryList.map((e=>({...e,nanoid:e.nanoid||T()}))):[],!I(R.beneficiaryList)&&Y()):R.beneficiaryList=[])}),{immediate:!0}),r((()=>K(R.beneficiaryList).map((e=>({personVO:e.personVO,nanoid:e.nanoid})))),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&m("update:beneficiaryList",e)}),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=R.personVO)?void 0:e.relationToHolder}),((e,i)=>{if(!e)return;v("与投保人关系变动了");const{personVO:n,schema:r=[],config:a}=R||{},{id:o,...s}=_.holderPersonVO||{},l="1"===String(n.relationToHolder),[t,d]=y(r,n);if(h(a,d),r.forEach((e=>{e.relationToHolder=n.relationToHolder,e.hidden=!e.isSelfInsuredNeed&&l})),!_.isView&&i&&String(e)!==String(i)){let e={...n,...s};l||(e={...V(n,(e=>!(t&&"certType"===e))),relationToHolder:n.relationToHolder}),Object.assign(R.personVO,e)}}),{deep:!0}),r((()=>{var e;return null==(e=R.personVO)?void 0:e.relationToMainInsured}),((e,i)=>{if(!e)return;v("次被保人与主被保人关系变动了");const{personVO:n,schema:r=[],config:a}=R||{},{certType:o}=n||{},[s,l]=y(r,{certType:o,relationToHolder:e});h(a,l),!_.isView&&i&&String(e)!==String(i)&&Object.assign(R.personVO,{...V(n,(e=>!(s&&"certType"===e))),relationToMainInsured:n.relationToMainInsured})})),r((()=>_.config),(e=>{e&&Object.assign(R.config,e)}),{deep:!0,immediate:!0}),r((()=>_.schema),((e,i)=>{var n;if(e&&JSON.stringify(e)!==JSON.stringify(R.schema)){const i="1"===String(null==(n=_.modelValue)?void 0:n.relationToHolder);R.schema=K(e).map((e=>{var n;return e.relationToHolder=null==(n=_.modelValue)?void 0:n.relationToHolder,e.hidden=!e.isSelfInsuredNeed&&i,e}))}}),{deep:!0,immediate:!0}),r((()=>_.modelValue),((e,i)=>{if(JSON.stringify(e)!==JSON.stringify(i)){const{beneficiaryList:i,...n}=e;h(R.personVO,n)}}),{deep:!0,immediate:!0}),r((()=>K(_.beneficiaryList)),Q.exports.debounce(((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(R.beneficiaryList=I(e)?e.map((e=>({...e,nanoid:e.nanoid||T()}))):[])}),500),{deep:!0,immediate:!0}),r((()=>_.guardian),Q.exports.debounce(((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(R.guardian=e)}),300),{deep:!0,immediate:!0}),r((()=>R.personVO),(e=>{e&&m("update:modelValue",e)}),{deep:!0,immediate:!0}),a({validate:e=>{var i;return Promise.all([f(J,_.trialFactorCodes,e),f(E,[],e),f($,[],e),...(null==(i=P.value)?void 0:i.map((i=>i.validate(e))))||[]])},validateTrialFields:()=>p({personVO:R.personVO,trialFactorCodes:_.trialFactorCodes})}),(e,i)=>{var n,r;const a=S,m=H,p=B,f=L;return o(),x(w,null,[C(d(c),{ref_key:"insuredFormRef",ref:J,class:"personal-info-card",title:d(G)?"":e.title,model:d(R).personVO,schema:d(R).schema,config:d(R).config,"is-view":e.isView,"extra-provision":{objectType:d(u).INSURED,objectId:d(R).personVO.id}},{cardTitleExtra:l((()=>[t(e.$slots,"default",{},void 0,!0)])),customer:l((()=>[t(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]),d(A)?(o(),s(d(c),{key:0,ref_key:"guardianFormRef",ref:E,class:"personal-info-card",title:"监护人",model:d(R).guardian.personVO,schema:d(R).guardianSchema,config:d(R).config,"is-view":e.isView,"extra-provision":{objectType:d(u).GUARDIAN,objectId:null==(r=null==(n=d(R).guardian)?void 0:n.personVO)?void 0:r.id}},{cardTitleExtra:l((()=>[t(e.$slots,"default",{},void 0,!0)])),customer:l((()=>[t(e.$slots,"guardianCustomer",{},void 0,!0)])),_:3},8,["model","schema","config","is-view","extra-provision"])):k("",!0),d(ee)?(o(),x(w,{key:1},[C(d(c),{ref_key:"beneficiaryTypeFormRef",ref:$,class:"personal-info-card",title:"受益人",model:d(R).personVO,schema:d(R).beneficiaryTypeSchemaList,"is-view":e.isView},null,8,["model","schema","is-view"]),d(ie)?(o(),x(w,{key:0},[(o(!0),x(w,null,j(d(R).beneficiaryList,((i,n)=>{var r;return o(),s(le,{ref_for:!0,ref_key:"beneficiaryFormRef",ref:P,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,title:`受益人${n+1}`,schema:d(R).beneficiarySchemaList,config:i.config,"holder-person-v-o":e.holderPersonVO,"is-view":e.isView||(null==(r=i.personVO)?void 0:r.isHolder)===d(O).YES},{customer:l((()=>[t(e.$slots,"benefitCustomer",{index:n},void 0,!0)])),"header-item":l((()=>[C(m,{label:"是否同投保人","input-align":"right"},{input:l((()=>[C(a,{modelValue:i.personVO.isHolder,"onUpdate:modelValue":e=>i.personVO.isHolder=e,"active-value":1,"inactive-value":2,disabled:d(U),onClick:()=>(e=>{var i,n,r;`${null==(r=null==(n=null==(i=R.beneficiaryList)?void 0:i[e])?void 0:n.personVO)?void 0:r.isHolder}`==`${O.YES}`?_.holderPersonVO&&(R.beneficiaryList=R.beneficiaryList.map(((i,n)=>e===n?{...i,personVO:{...i.personVO,...D()},config:{...i.config,benefitRate:{isView:!1},benefitOrder:{isView:!1},relationToInsured:{isView:!1},beneficiaryType:{isView:!1}}}:i))):R.beneficiaryList=R.beneficiaryList.map(((i,n)=>{var r,a;return e===n?{...i,personVO:{...q(null==(a=null==(r=R.beneficiaryList)?void 0:r[e])?void 0:a.personVO)}}:i}))})(n)},{default:l((()=>[F("同投保人")])),_:2},1032,["modelValue","onUpdate:modelValue","disabled","onClick"])])),_:2},1024)])),default:l((()=>[n>0&&!e.isView?(o(),x("span",{key:0,class:"delete-button",onClick:e=>(e=>{N.confirm({message:"确定要删除该受益人吗？"}).then((()=>{R.beneficiaryList.splice(e,1)}))})(n)},[C(p,{name:"delete"})],8,te)):k("",!0)])),_:2},1032,["modelValue","onUpdate:modelValue","title","schema","config","holder-person-v-o","is-view"])})),128)),!e.isView&&d(z)?(o(),x("span",{key:0,class:"add-button",onClick:Y},[C(f,{name:"plus"}),F("添加受益人")])):k("",!0)],64)):k("",!0)],64)):k("",!0),t(e.$slots,"riskList",{},void 0,!0)],64)}}}),[["__scopeId","data-v-161c5a4e"]]);const ce={style:{position:"fixed","z-index":"100",top:"0",left:"165px",color:"pink","text-align":"center"}},me=["onClick"],pe=["onClick"],fe=["onClick"],ve=["onClick"],ge=e({name:"PersonalInfo"});var ye=m(e({...ge,props:{productFactor:{default:()=>({})},modelValue:{default:()=>({})},isTrial:{type:Boolean,default:!1},isView:{type:Boolean,default:!1},isOnlyHolder:{type:Boolean,default:!1},isHolderExempt:{type:Boolean,default:!1},multiInsuredConfig:{}},emits:["update:modelValue","trailChange","trailValidateFailed","closeCustomerPopoup","update-bank"],setup(e,{expose:m,emit:V}){const O=e,{x:S,y:H}=_(),Q=J(),W=$(),{isShare:X,saleChannelId:se}=Q.query,le=i(null),te=i(null),de=n({count:0,slotProps:{},uniqKey:"",currentIndex:0,currentBenifitIndex:0,currentType:"",keyword:void 0,show:!1,list:[],config:{},trialValidated:!1,holder:{personVO:{},schema:[],trialFactorCodes:[],config:{occupationCode:{isView:!0}}},beneficiarySchema:[],initInsuredIList:[],insured:[]}),ge=b((()=>!O.isTrial||O.isHolderExempt)),ye=e=>{Object.assign(de.holder.personVO,e)},he=b((()=>!(X||O.isView||O.isTrial||W))),Ve=(e,i,n,r)=>{de.currentType=e,"benifit"!==e?de.currentIndex=i:(de.currentIndex=i,de.currentBenifitIndex=n);const{selectedType:a,customerId:o,selected:s,...l}=Q.query;console.log("选择的关系relation:",r),D("customerList",{...l,selectedType:e,relation:r})},Oe=e=>{var i,n,r,a,o,s,l,t,d,u;const c="holder"===de.currentType?de.holder.schema.map((e=>e.name))||[]:"insured"===de.currentType?de.insured[de.currentIndex].schema.map((e=>e.name))||[]:"benifit"===de.currentType?de.beneficiarySchema.map((e=>e.name))||[]:"guardian"===de.currentType&&de.guardianSchema.map((e=>e.name))||[];c.push("certEndType","age","gender");const m=ae(e,c);if(console.log(de.currentType,"的keys:",c,"转换后的客户信息:",m),"holder"===de.currentType)console.log("当前是投保人选信息state?.holder:",null==de?void 0:de.holder),Object.assign(null==(i=null==de?void 0:de.holder)?void 0:i.personVO,m),V("update-bank",e.bankCardInfo);else if("insured"===de.currentType){const e=null==(n=null==de?void 0:de.insured[de.currentIndex])?void 0:n.schema.some((e=>"relationToHolder"===e.name&&e.attributeValueList.some((e=>"1"===e.code))));if(oe(null==(r=null==de?void 0:de.holder)?void 0:r.personVO,m))return e?void Object.assign((null==(a=null==de?void 0:de.insured[de.currentIndex])?void 0:a.personVO)||{},{relationToHolder:"1"}):void g("与投保人关系未配置本人");Object.assign((null==(o=null==de?void 0:de.insured[de.currentIndex])?void 0:o.personVO)||{},m)}else"benifit"===de.currentType?oe(null==(s=null==de?void 0:de.insured[de.currentIndex])?void 0:s.personVO,m)?g("指定受益人不可为被保人本人"):Object.assign((null==(t=null==(l=null==de?void 0:de.insured[de.currentIndex])?void 0:l.beneficiaryList[de.currentBenifitIndex])?void 0:t.personVO)||{},m):"guardian"===de.currentType&&Object.assign((null==(u=null==(d=null==de?void 0:de.insured[de.currentIndex])?void 0:d.guardian)?void 0:u.personVO)||{},m)},be=()=>{var e;const i=!te.value||(null==(e=te.value)?void 0:e.every((e=>e.validateTrialFields()))),n=!le.value||p(de.holder);return console.log("insuredFlag",i,n),n&&i},Ie=e=>{var i;return Promise.all([...(null==(i=te.value)?void 0:i.map((i=>i.validate(e))))||[],f(le,de.holder.trialFactorCodes,e)])},Te=e=>{const{productList:i,config:n,schema:r,trialFactorCodes:a,beneficiaryList:o,guardian:s,personVO:l,nanoid:t,...d}=K(e)||{};return console.log("formData",d),d},Se=()=>{const{length:e,[e-1]:i}=de.initInsuredIList;de.insured.push(K({...i,nanoid:T()}))},Le=b((()=>{const{multiInsuredMaxNum:e,multiInsuredSupportFlag:i}=de.config;return i&&(!e||de.insured.length<e)})),xe=b((()=>I(de.holder.schema))),Ce=b((()=>de.insured.some((e=>I(e.schema))))),ke=(e,i)=>I(e)?e.reduce(((e,n)=>(e[n]=i[n],e)),{}):{},we=(e,i,n={})=>!!I(e)&&JSON.stringify(ke(e,i))!==JSON.stringify(ke(e,n));r((()=>{var e;return null==(e=de.holder.personVO)?void 0:e.certType}),a(((e,i)=>{if(`${e}`==`${i}`)return!1;v("投保人信息变动了====");const[n,r]=y(de.holder.schema,{certType:e});return h(de.holder.config,r),!1}),0));let je=!1;r([()=>{var e;return{...null==(e=de.holder)?void 0:e.personVO}},()=>de.insured.map((e=>{const{beneficiaryList:i,guardian:n,personVO:r}=e||{},a=I(i)?i.map((e=>({...e.personVO}))):[];return{...r,guardian:n.personVO||{},beneficiaryList:a}}))],a(((e,i)=>{var n,r,a,o;if(JSON.stringify(e)===JSON.stringify(i)&&je)return je=!0,!1;je=!1;const[s,l]=e,t=((e,i)=>{const n=we(de.holder.trialFactorCodes,null==e?void 0:e[0],null==i?void 0:i[0]),r=de.insured.some(((e,n)=>{var r;const{trialFactorCodes:a,personVO:o}=e;return we(a,o,null==(r=i[1])?void 0:r[n])}));return n||r})([s,l],i),{insuredList:d}=O.modelValue,u={holder:s,insuredList:l.map(((e,i)=>({...(null==d?void 0:d[i])||{},...e})))};if(null==(n=de.config)?void 0:n.isSpouseInsured){const[e,i]=l.map((e=>null==e?void 0:e.gender));if(e&&i&&String(e)===String(i))return g("被保人性别与投保要求不符")}if(JSON.stringify(null==(r=null==l?void 0:l[0])?void 0:r.personVO),Te(null==(o=null==(a=O.modelValue)?void 0:a.insuredList)?void 0:o[0]),console.log("-------result = ",u),V("update:modelValue",u),!be())return de.trialValidated=!1,V("trailValidateFailed",u);Ie(!0).then((()=>{console.log("trialEnd"),de.trialValidated=!0,!O.isOnlyHolder&&t&&V("trailChange",u)})).catch((()=>{de.trialValidated=!1,V("trailValidateFailed",u)}))}),0),{deep:!0}),r([()=>O.productFactor,()=>O.isTrial],a(((e,i)=>{if(q(e,i)||!(null==e?void 0:e[0]))return!1;v("投被保人要素变动了");const{insuredFactorCodes:n,holderFactorCodes:r}=Y(z)||{},{holder:a,insured:o,beneficiary:s,guardian:l,config:t}=G(e[0],{isTrial:e[1],...O.multiInsuredConfig,insuredFactorCodes:n,holderFactorCodes:r});return Object.assign(de.holder,a),de.config=t,I(o)&&(de.initInsuredIList=o.map((e=>({...e,guardian:{},beneficiaryList:[]})))),de.beneficiarySchema=K((null==s?void 0:s.schema)||[]),de.guardianSchema=K((null==l?void 0:l.schema)||[]),!1}),300),{deep:!0,immediate:!0}),r((()=>{var e,i,n,r;return null==(r=null==(n=null==(i=null==(e=null==de?void 0:de.insured)?void 0:e[de.currentIndex])?void 0:i.beneficiaryList)?void 0:n[de.currentBenifitIndex])?void 0:r.personVO}),((e,i)=>{var n,r,a,o;(null==(o=null==(a=null==(r=null==(n=null==de?void 0:de.insured)?void 0:n[de.currentIndex])?void 0:r.beneficiaryList)?void 0:a[de.currentBenifitIndex])?void 0:o.personVO)&&(null==e?void 0:e.relationToInsured)!==(null==i?void 0:i.relationToInsured)&&v("受益人关系变动了+++++")}),{deep:!0,immediate:!0}),r((()=>{var e,i,n,r;return null==(r=null==(n=null==(i=null==(e=null==de?void 0:de.insured)?void 0:e[de.currentIndex])?void 0:i.guardian)?void 0:n.personVO)?void 0:r.relationToInsured}),((e,i)=>{e!==i&&i&&(v("监护人关系变动了+++++"),Object.assign(de.insured[de.currentIndex],{guardian:{personVO:{relationToInsured:e}}}))}));const Fe=i(!1);return r([()=>{const{holder:e,insuredList:i=[]}=O.modelValue,n=I(i)?i.map((e=>({config:e.config,personVO:Te(e),guardian:{personVO:e.guardian||{}},beneficiaryList:I(e.beneficiaryList)?e.beneficiaryList.map((({config:e,...i})=>({config:e,personVO:Te(i)}))):[]}))):[];return[null==e?void 0:e.config,Te(e),n]},()=>de.config,()=>de.initInsuredIList],a((([[e,i,n],r,a],[[o,s,l],t,d])=>{if(JSON.stringify(e)===JSON.stringify(o)&&JSON.stringify(i)===JSON.stringify(s)&&JSON.stringify(n)===JSON.stringify(l)&&JSON.stringify(a)===JSON.stringify(d)&&Fe.value)return;Fe.value=!0,Object.assign(de.holder.config,e),console.log("投保人数据===",K(de.holder.personVO),K(i)),console.log("投保人数据===",K(de.holder.personVO),K(i)),Object.assign(de.holder.personVO,i);const{length:u}=n||[],{length:c}=de.insured,{length:m,0:p={},[m-1]:f}=de.initInsuredIList,{multiInsuredMaxNum:v=1,multiInsuredMinNum:g=1,multiInsuredSupportFlag:y}=(null==de?void 0:de.config)||{},V=O.isView||u>c?Math.min(u,v):c||g,b=K(n);de.insured=Array.from({length:V}).reduce(((e,i,n)=>{const{personVO:r,config:a={},guardian:o,beneficiaryList:s}=(null==b?void 0:b[n])||{},l=K(0===n?p:f);return e[n]?(e[n].schema=l.schema,h(e[n],{...K(l),personVO:r,config:a,guardian:o,beneficiaryList:s})):e[n]={...K(l),personVO:r,config:a,guardian:o,beneficiaryList:s,nanoid:T()},e}),de.insured)}),0),{deep:!0,immediate:!0}),r((()=>de.list),((e,i)=>{e&&(de.list=e)})),m({validate:Ie,validateTrialFields:be,validateHolder:(...e)=>{var i;return null==(i=le.value)?void 0:i.validate(...e)},canTrail:()=>de.trialValidated}),P((()=>{Z({currentIndex:de.currentIndex,currentBenifitIndex:de.currentBenifitIndex,scrollTop:H.value})})),E((()=>{const e=ee(),i=ie();de.currentType=Q.query.selectedType||de.currentType,console.log("onActivated:",i),i&&(de.currentIndex=i.currentIndex,de.currentBenifitIndex=i.currentBenifitIndex,document.documentElement.scrollTo(0,i.scrollTop),document.body.scrollTop=i.scrollTop,ne()),e&&(Oe(e),re())})),(e,i)=>{var n,r;const a=B,m=L,p=M;return o(),x(w,null,[d(xe)&&d(ge)?(o(),s(d(c),{key:0,ref_key:"holderFormRef",ref:le,title:"投保人信息",class:"personal-info-card",model:d(de).holder.personVO,schema:d(de).holder.schema,config:d(de).holder.config,"is-view":e.isView,"extra-provision":{objectType:d(u).HOLDER,objectId:null==(r=null==(n=d(de).holder)?void 0:n.personVO)?void 0:r.id},onOcr:ye},{customer:l((()=>[d(he)?(o(),x("div",{key:0,class:"choose-customer",onClick:i[0]||(i[0]=e=>Ve("holder",1,0))},[C(a,{name:"customer",color:"#333"})])):k("",!0),R("div",ce," top:"+U(Math.ceil(d(H))),1)])),_:1},8,["model","schema","config","is-view","extra-provision"])):k("",!0),d(Ce)&&!e.isOnlyHolder?(o(),x(w,{key:1},[(o(!0),x(w,null,j(d(de).insured,((i,n)=>{var r;return o(),s(ue,A({ref_for:!0,ref_key:"insuredFormRef",ref:te,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,"beneficiary-list":i.beneficiaryList,"onUpdate:beneficiaryList":e=>i.beneficiaryList=e,guardian:i.guardian,"onUpdate:guardian":e=>i.guardian=e,title:""+(d(de).insured.length>1?`被保人${n+1}`:"被保人信息"),"holder-person-v-o":d(de).holder.personVO},i,{"beneficiary-schema":d(de).beneficiarySchema,"guardian-schema":d(de).guardianSchema,"is-view":e.isView,"multi-beneficiary-num":null==(r=d(de).config)?void 0:r.multiBeneficiaryMaxNum}),{riskList:l((()=>[t(e.$slots,"riskInfo",{insuredIndex:n},void 0,!0)])),customer:l((()=>[1!=+i.personVO.relationToHolder&&d(he)?(o(),x("div",{key:0,class:"choose-customer",onClick:e=>Ve("insured",n,0,i.personVO.relationToHolder)},[C(a,{name:"customer",color:"#333"})],8,me)):k("",!0)])),guardianCustomer:l((e=>[d(he)?(o(),x("div",{key:0,class:"choose-customer",onClick:e=>Ve("guardian",n,0,i.guardian.personVO.relationToInsured)},[C(a,{name:"customer",color:"#333"})],8,pe)):k("",!0)])),benefitCustomer:l((e=>[d(he)?(o(),x("div",{key:0,class:"choose-customer",onClick:r=>{var a;return Ve("benifit",n,null==e?void 0:e.index,null==(a=i.beneficiaryList[null==e?void 0:e.index])?void 0:a.personVO.relationToInsured)}},[C(a,{name:"customer",color:"#333"})],8,fe)):k("",!0)])),default:l((()=>[!e.isView&&n+1>d(de).config.multiInsuredMinNum?(o(),x("span",{key:0,class:"delete-button",onClick:e=>(e=>{N.confirm({message:"确定要删除该被保人吗？"}).then((()=>{de.insured.splice(e,1)}))})(n)},[C(a,{name:"delete",color:"var(--van-primary-color)"})],8,ve)):k("",!0)])),_:2},1040,["modelValue","onUpdate:modelValue","beneficiary-list","onUpdate:beneficiaryList","guardian","onUpdate:guardian","title","holder-person-v-o","beneficiary-schema","guardian-schema","is-view","multi-beneficiary-num"])})),128)),!e.isView&&d(Le)?(o(),s(p,{key:0,class:"add-button-wrap"},{title:l((()=>[R("span",{class:"add-button",onClick:Se},[C(m,{name:"plus"}),F("添加被保人")])])),_:1})):k("",!0)],64)):k("",!0)],64)}}}),[["__scopeId","data-v-0f3e29ac"]]);export{ye as P};
