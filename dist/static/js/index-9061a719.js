import{d as e,j as i,r as n,z as r,o as a,m as o,w as s,g as l,u as t,bd as d,be as u,_ as c,bf as m,bg as f,bh as p,T as v,bi as g,af as y,bj as V,a6 as h,k as O,aJ as b,bk as I,ba as T,bl as S,c as L,b as x,f as k,F as C,q as w,a as N,a8 as j,aI as F,ae as H,bm as B,i as _,ac as J,aF as $,bn as E,bo as P,bp as R,a0 as U,a9 as M,bq as q,bc as D,br as Y,bs as A}from"./index-412561aa.js";import{c as z}from"./cloneDeep-ec06d814.js";import"./PolicyInfo-05d8cd2e.js";import{l as G}from"./lodash-4e51ded8.js";import{B as K}from"./infoCollection-202941df.js";import{O as Q}from"./questionnaire-62331097.js";import{s as W,g as X,a as Z,c as ee,b as ie,t as ne,i as re}from"./util-a7bffff6.js";const ae=e({name:"BeneficiaryItem"});var oe=c(e({...ae,props:{modelValue:{default:()=>({})},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},title:{default:"受益人"},holderPersonVO:{default:()=>({})}},emits:["update:modelValue","trailChange"],setup(e,{expose:c,emit:O}){const b=e,I=i(null),T=n({validated:!1,schema:[],config:{},personVO:{}});return r((()=>b.config),(e=>{e&&Object.assign(T.config,e)}),{deep:!0,immediate:!0}),r((()=>b.schema),(e=>{e&&Object.assign(T.schema,z(b.schema))}),{deep:!0,immediate:!0}),r((()=>z(b.modelValue)),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(p("受益人数据变动了"),T.personVO={...e})}),{deep:!0,immediate:!0}),r((()=>T.personVO),(e=>{e&&(`${T.personVO.isHolder}`!=`${h.YES}`&&(Object.keys(T.personVO).filter((e=>{var i,n;return!(!["gender","birthday","certType","certNo","name"].includes(e)||`${null==(i=T.personVO)?void 0:i[e]}`!=`${null==(n=null==b?void 0:b.holderPersonVO)?void 0:n[e]}`)}))||[]).length>=2&&v("录入的受益人同投保人基本信息，请勾选“同投保人"),O("update:modelValue",e))}),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=T.personVO)?void 0:e.relationToInsured}),((e,i)=>{if(e===i)return!1;p("受益人与被保人关系变动了");const{certType:n}=T.personVO||{},[r,a]=g(T.schema,{certType:n,relationToHolder:e});return y(T.config,a),!b.isView&&e&&i&&Object.assign(T.personVO,{...V(T.personVO,(e=>!(r&&"certType"===e))),relationToInsured:e}),!1}),{immediate:!0}),c({validate:e=>f(I,b.trialFactorCodes,e),validateTrialFields:()=>m({personVO:T.personVO,trialFactorCodes:b.trialFactorCodes})}),(e,i)=>(a(),o(t(u),{ref_key:"formRef",ref:I,class:"personal-info-card",title:e.title,model:t(T).personVO,schema:t(T).schema,config:t(T).config,"is-view":e.isView,"extra-provision":{objectType:t(d).BENEFICIARY,objectId:t(T).personVO.id}},{cardTitleExtra:s((()=>[l(e.$slots,"default",{},void 0,!0)])),customer:s((()=>[l(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]))}}),[["__scopeId","data-v-5c094905"]]);const se={class:"operate-wrap"},le=["onClick"],te=e({name:"InsuredItem"});var de=c(e({...te,props:{modelValue:{default:()=>({})},title:{default:""},holderPersonVO:{default:()=>({})},schema:{default:()=>[]},config:{default:()=>({})},isView:{type:Boolean,default:!1},isTrial:{type:Boolean,default:!1},trialFactorCodes:{default:()=>[]},multiBeneficiaryMaxNum:{default:null},beneficiaryList:{default:()=>[]},beneficiarySchema:{default:()=>[]},guardian:{default:()=>({})},guardianSchema:{default:()=>[]}},emits:["update:modelValue","update:beneficiaryList","update:guardian"],setup(e,{expose:c,emit:v}){const B=e,_=i(null),J=i(null),$=i(null),E=i(null),P={schema:[],trialFactorCodes:[],config:{occupationCode:{isView:!0}},personVO:{}},R=n({validated:!1,schema:[],config:{},personVO:{},beneficiaryTypeSchemaList:[],beneficiarySchemaList:[],beneficiaryList:[],guardianSchema:[],guardian:{}}),U=O((()=>{const{age:e,relationToHolder:i}=R.personVO;return!["1","4","5"].includes(i)&&null!==e&&+e<18||(R.guardian={},!1)})),M=()=>{const e={};return R.beneficiarySchemaList.reduce(((e,i)=>{var n,r;return(null==(n=B.holderPersonVO)?void 0:n[i.name])&&(e[i.name]=null==(r=B.holderPersonVO)?void 0:r[i.name]),e}),e),e},q=(e={})=>{const i=e;return R.beneficiarySchemaList.reduce(((e,i)=>{var n;return(null==(n=B.holderPersonVO)?void 0:n[i.name])&&(e[i.name]=null),e}),i),console.log("mergeData",i),i},D=()=>{R.beneficiaryList.push(z({...P,nanoid:I(),schema:B.beneficiarySchema}))},Y=O((()=>!B.multiBeneficiaryMaxNum||R.beneficiaryList.length<B.multiBeneficiaryMaxNum)),A=O((()=>!R.schema.filter((e=>{var i;return!(e.hidden||(null==(i=R.config[e.name])?void 0:i.hidden))})).length)),W=O((()=>R.schema.filter((e=>e.isSelfInsuredNeed)).map((e=>e.name)))),X=O((()=>b(B.beneficiarySchema))),Z=O((()=>{var e;return String(null==(e=R.personVO)?void 0:e.insuredBeneficiaryType)===K.SPECIFY}));return r((()=>B.holderPersonVO),G.exports.debounce((e=>{var i;p("------投保人信息变动了-----");const{id:n,...r}=e||{};if("1"===String(null==(i=R.personVO)?void 0:i.relationToHolder)){const e=b(W.value)?Object.keys(r).reduce(((e,i)=>([...W.value,"occupationClass"].includes(i)&&!["birthday","age","gender"].includes(i)||(e[i]=r[i]),e)),{}):r,i=(r.certImage||[]).map((e=>({...e,objectId:R.personVO.id,objectType:Q.INSURED})));Object.assign(R.personVO,e,{certImage:i})}}),300),{deep:!0,immediate:!0}),r((()=>B.beneficiarySchema),(e=>{R.beneficiarySchemaList=b(e)?e.filter((e=>"insuredBeneficiaryType"!==e.name)):[],R.beneficiaryTypeSchemaList=b(e)?e.filter((e=>"insuredBeneficiaryType"===e.name)):[]}),{deep:!0,immediate:!0}),r((()=>B.guardianSchema),(e=>{R.guardianSchema=e}),{deep:!0,immediate:!0}),r(Z,((e,i)=>{String(e)!==String(i)&&(p("受益人类型关系变动了"),e?(R.beneficiaryList=b(B.beneficiaryList)?B.beneficiaryList.map((e=>({...e,nanoid:e.nanoid||I()}))):[],!b(R.beneficiaryList)&&D()):R.beneficiaryList=[])}),{immediate:!0}),r((()=>z(R.beneficiaryList).map((e=>({personVO:e.personVO,nanoid:e.nanoid})))),((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&v("update:beneficiaryList",e)}),{deep:!0,immediate:!0}),r((()=>{var e;return null==(e=R.personVO)?void 0:e.relationToHolder}),((e,i)=>{if(!e)return;p("与投保人关系变动了");const{personVO:n,schema:r=[],config:a}=R||{},{id:o,...s}=B.holderPersonVO||{},l="1"===String(n.relationToHolder),[t,d]=g(r,n);if(y(a,d),r.forEach((e=>{e.relationToHolder=n.relationToHolder,e.hidden=!e.isSelfInsuredNeed&&l})),!B.isView&&i&&String(e)!==String(i)){let e={...n,...s};l||(e={...V(n,(e=>!(t&&"certType"===e))),relationToHolder:n.relationToHolder}),Object.assign(R.personVO,e)}}),{deep:!0}),r((()=>{var e;return null==(e=R.personVO)?void 0:e.relationToMainInsured}),((e,i)=>{if(!e)return;p("次被保人与主被保人关系变动了");const{personVO:n,schema:r=[],config:a}=R||{},{certType:o}=n||{},[s,l]=g(r,{certType:o,relationToHolder:e});y(a,l),!B.isView&&i&&String(e)!==String(i)&&Object.assign(R.personVO,{...V(n,(e=>!(s&&"certType"===e))),relationToMainInsured:n.relationToMainInsured})})),r((()=>B.config),(e=>{e&&Object.assign(R.config,e)}),{deep:!0,immediate:!0}),r((()=>B.schema),((e,i)=>{var n;if(e&&JSON.stringify(e)!==JSON.stringify(R.schema)){const i="1"===String(null==(n=B.modelValue)?void 0:n.relationToHolder);R.schema=z(e).map((e=>{var n;return e.relationToHolder=null==(n=B.modelValue)?void 0:n.relationToHolder,e.hidden=!e.isSelfInsuredNeed&&i,e}))}}),{deep:!0,immediate:!0}),r((()=>B.modelValue),((e,i)=>{if(JSON.stringify(e)!==JSON.stringify(i)){const{beneficiaryList:i,...n}=e;y(R.personVO,n)}}),{deep:!0,immediate:!0}),r((()=>z(B.beneficiaryList)),G.exports.debounce(((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(R.beneficiaryList=b(e)?e.map((e=>({...e,nanoid:e.nanoid||I()}))):[])}),500),{deep:!0,immediate:!0}),r((()=>B.guardian),G.exports.debounce(((e,i)=>{JSON.stringify(e)!==JSON.stringify(i)&&(R.guardian=e)}),300),{deep:!0,immediate:!0}),r((()=>R.personVO),(e=>{e&&v("update:modelValue",e)}),{deep:!0,immediate:!0}),c({validate:e=>{var i;return Promise.all([f(_,B.trialFactorCodes,e),f(E,[],e),f(J,[],e),...(null==(i=$.value)?void 0:i.map((i=>i.validate(e))))||[]])},validateTrialFields:()=>m({personVO:R.personVO,trialFactorCodes:B.trialFactorCodes})}),(e,i)=>{var n,r;const c=T,m=H,f=S;return a(),L(C,null,[x(t(u),{ref_key:"insuredFormRef",ref:_,class:"personal-info-card",title:t(A)?"":e.title,model:t(R).personVO,schema:t(R).schema,config:t(R).config,"is-view":e.isView,"extra-provision":{objectType:t(d).INSURED,objectId:t(R).personVO.id}},{cardTitleExtra:s((()=>[l(e.$slots,"default",{},void 0,!0)])),customer:s((()=>[l(e.$slots,"customer",{},void 0,!0)])),_:3},8,["title","model","schema","config","is-view","extra-provision"]),t(U)?(a(),o(t(u),{key:0,ref_key:"guardianFormRef",ref:E,class:"personal-info-card",title:"监护人",model:t(R).guardian.personVO,schema:t(R).guardianSchema,config:t(R).config,"is-view":e.isView,"extra-provision":{objectType:t(d).GUARDIAN,objectId:null==(r=null==(n=t(R).guardian)?void 0:n.personVO)?void 0:r.id}},{cardTitleExtra:s((()=>[l(e.$slots,"default",{},void 0,!0)])),customer:s((()=>[l(e.$slots,"guardianCustomer",{},void 0,!0)])),_:3},8,["model","schema","config","is-view","extra-provision"])):k("",!0),t(X)?(a(),L(C,{key:1},[x(t(u),{ref_key:"beneficiaryTypeFormRef",ref:J,class:"personal-info-card",title:"受益人",model:t(R).personVO,schema:t(R).beneficiaryTypeSchemaList,"is-view":e.isView},null,8,["model","schema","is-view"]),t(Z)?(a(),L(C,{key:0},[(a(!0),L(C,null,w(t(R).beneficiaryList,((i,n)=>{var r;return a(),o(oe,{ref_for:!0,ref_key:"beneficiaryFormRef",ref:$,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,title:`受益人${n+1}`,schema:t(R).beneficiarySchemaList,config:i.config,"holder-person-v-o":e.holderPersonVO,"is-view":e.isView||(null==(r=i.personVO)?void 0:r.isHolder)===t(h).YES},{customer:s((()=>[l(e.$slots,"benefitCustomer",{index:n},void 0,!0)])),default:s((()=>[N("div",se,[x(c,{modelValue:i.personVO.isHolder,"onUpdate:modelValue":e=>i.personVO.isHolder=e,"active-value":1,"inactive-value":2,onClick:()=>(e=>{var i,n,r;`${null==(r=null==(n=null==(i=R.beneficiaryList)?void 0:i[e])?void 0:n.personVO)?void 0:r.isHolder}`==`${h.YES}`?B.holderPersonVO&&(R.beneficiaryList=R.beneficiaryList.map(((i,n)=>e===n?{...i,personVO:{...i.personVO,...M()},config:{...i.config,benefitRate:{isView:!1},benefitOrder:{isView:!1},relationToInsured:{isView:!1}}}:i))):R.beneficiaryList=R.beneficiaryList.map(((i,n)=>{var r,a;return e===n?{...i,personVO:{...q(null==(a=null==(r=R.beneficiaryList)?void 0:r[e])?void 0:a.personVO)}}:i}))})(n)},{default:s((()=>[j("同投保人")])),_:2},1032,["modelValue","onUpdate:modelValue","onClick"]),n>0&&!e.isView?(a(),L("span",{key:0,class:"delete-button",onClick:e=>(e=>{F.confirm({message:"确定要删除该受益人吗？"}).then((()=>{R.beneficiaryList.splice(e,1)}))})(n)},[x(m,{name:"delete"})],8,le)):k("",!0)])])),_:2},1032,["modelValue","onUpdate:modelValue","title","schema","config","holder-person-v-o","is-view"])})),128)),!e.isView&&t(Y)?(a(),L("span",{key:0,class:"add-button",onClick:D},[x(f,{name:"plus"}),j("添加受益人")])):k("",!0)],64)):k("",!0)],64)):k("",!0),l(e.$slots,"riskList",{},void 0,!0)],64)}}}),[["__scopeId","data-v-91d3fb06"]]);const ue=["onClick"],ce=["onClick"],me=["onClick"],fe=["onClick"],pe=e({name:"PersonalInfo"});var ve=c(e({...pe,props:{productFactor:{default:()=>({})},modelValue:{default:()=>({})},isTrial:{type:Boolean,default:!1},isView:{type:Boolean,default:!1},isOnlyHolder:{type:Boolean,default:!1},isHolderExempt:{type:Boolean,default:!1},multiInsuredConfig:{}},emits:["update:modelValue","trailChange","trailValidateFailed","closeCustomerPopoup","update-bank"],setup(e,{expose:c,emit:V}){const h=e,{x:T,y:G}=B(),K=_(),Q=J(),{isShare:ae,saleChannelId:oe}=K.query,se=i(null),le=i(null),te=n({count:0,slotProps:{},uniqKey:"",currentIndex:0,currentBenifitIndex:0,currentType:"",keyword:void 0,show:!1,list:[],config:{},trialValidated:!1,holder:{personVO:{},schema:[],trialFactorCodes:[],config:{occupationCode:{isView:!0}}},beneficiarySchema:[],initInsuredIList:[],insured:[]}),pe=O((()=>!h.isTrial||h.isHolderExempt)),ve=e=>{Object.assign(te.holder.personVO,e)},ge=O((()=>!(ae||h.isView||h.isTrial||Q))),ye=(e,i,n,r)=>{te.currentType=e,"benifit"!==e?te.currentIndex=i:(te.currentIndex=i,te.currentBenifitIndex=n);const{selectedType:a,customerId:o,selected:s,...l}=K.query;console.log("选择的关系relation:",r),M("customerList",{...l,selectedType:e,relation:r})},Ve=e=>{var i,n,r,a,o,s,l,t,d,u,c,m;const f="holder"===te.currentType?te.holder.schema.map((e=>e.name))||[]:"insured"===te.currentType?te.insured[te.currentIndex].schema.map((e=>e.name))||[]:"benifit"===te.currentType?te.beneficiarySchema.map((e=>e.name))||[]:"guardian"===te.currentType&&te.guardianSchema.map((e=>e.name))||[];f.push("certEndType","age");const p=ne(e,f);if(console.log(te.currentType,"的keys:",f,"转换后的客户信息:",p),"holder"===te.currentType&&(Object.assign((null==(i=null==te?void 0:te.holder)?void 0:i.personVO)||{},p),V("update-bank",e.bankCardInfo)),"insured"===te.currentType){const e=null==(n=null==te?void 0:te.insured[te.currentIndex])?void 0:n.schema.some((e=>"relationToHolder"===e.name&&e.attributeValueList.some((e=>"1"===e.code))));if(re(null==(r=null==te?void 0:te.holder)?void 0:r.personVO,p))return e?void Object.assign((null==(a=null==te?void 0:te.insured[te.currentIndex])?void 0:a.personVO)||{},{relationToHolder:"1"}):void v("与投保人关系未配置本人");Object.assign((null==(o=null==te?void 0:te.insured[te.currentIndex])?void 0:o.personVO)||{},p)}"benifit"===te.currentType&&(re(null==(s=null==te?void 0:te.insured[te.currentIndex])?void 0:s.personVO,p)?v("指定受益人不可为被保人本人"):(Object.assign((null==(t=null==(l=null==te?void 0:te.insured[te.currentIndex])?void 0:l.beneficiaryList[te.currentBenifitIndex])?void 0:t.personVO)||{},p),console.log("合并后的受益人",null==(u=null==(d=null==te?void 0:te.insured[te.currentIndex])?void 0:d.beneficiaryList[te.currentBenifitIndex])?void 0:u.personVO))),"guardian"===te.currentType&&Object.assign((null==(m=null==(c=null==te?void 0:te.insured[te.currentIndex])?void 0:c.guardian)?void 0:m.personVO)||{},p)},he=()=>{var e;const i=!le.value||(null==(e=le.value)?void 0:e.every((e=>e.validateTrialFields())));return(!se.value||m(te.holder))&&i},Oe=e=>{var i;return Promise.all([...(null==(i=le.value)?void 0:i.map((i=>i.validate(e))))||[],f(se,te.holder.trialFactorCodes,e)])},be=e=>{const{productList:i,config:n,schema:r,trialFactorCodes:a,beneficiaryList:o,guardian:s,personVO:l,nanoid:t,...d}=z(e)||{};return console.log("formData",d),d},Ie=()=>{const{length:e,[e-1]:i}=te.initInsuredIList;te.insured.push(z({...i,nanoid:I()}))},Te=O((()=>{const{multiInsuredMaxNum:e,multiInsuredSupportFlag:i}=te.config;return i&&(!e||te.insured.length<e)})),Se=O((()=>b(te.holder.schema))),Le=O((()=>te.insured.some((e=>b(e.schema)))));r((()=>{var e;return null==(e=te.holder.personVO)?void 0:e.certType}),$(((e,i)=>{if(`${e}`==`${i}`)return!1;p("投保人信息变动了====");const[n,r]=g(te.holder.schema,{certType:e});return y(te.holder.config,r),!1}),0));let xe=!1;r([()=>{var e;return{...null==(e=te.holder)?void 0:e.personVO}},()=>te.insured.map((e=>{const{beneficiaryList:i,guardian:n,personVO:r}=e||{},a=b(i)?i.map((e=>({...e.personVO}))):[];return{...r,guardian:n.personVO||{},beneficiaryList:a}}))],$(((e,i)=>{var n,r,a,o;if(JSON.stringify(e)===JSON.stringify(i)&&xe)return xe=!0,!1;xe=!1;const[s,l]=e,{insuredList:t}=h.modelValue,d={holder:s,insuredList:l.map(((e,i)=>({...(null==t?void 0:t[i])||{},...e})))};if(null==(n=te.config)?void 0:n.isSpouseInsured){const[e,i]=l.map((e=>null==e?void 0:e.gender));if(e&&i&&String(e)===String(i))return v("被保人性别与投保要求不符")}if(JSON.stringify(null==(r=null==l?void 0:l[0])?void 0:r.personVO),be(null==(o=null==(a=h.modelValue)?void 0:a.insuredList)?void 0:o[0]),console.log("-------result = ",d),V("update:modelValue",d),!he())return te.trialValidated=!1,V("trailValidateFailed",d);Oe(!0).then((()=>{console.log("trialEnd"),te.trialValidated=!0,h.isOnlyHolder||V("trailChange",d)})).catch((()=>{te.trialValidated=!1,V("trailValidateFailed",d)}))}),0),{deep:!0}),r([()=>h.productFactor,()=>h.isTrial],$(((e,i)=>{if(q(e,i)||!(null==e?void 0:e[0]))return!1;p("投被保人要素变动了");const{insuredFactorCodes:n,holderFactorCodes:r}=D(Y)||{},{holder:a,insured:o,beneficiary:s,guardian:l,config:t}=A(e[0],{isTrial:e[1],...h.multiInsuredConfig,insuredFactorCodes:n,holderFactorCodes:r});return Object.assign(te.holder,a),te.config=t,b(o)&&(te.initInsuredIList=o.map((e=>({...e,guardian:{},beneficiaryList:[]})))),te.beneficiarySchema=z((null==s?void 0:s.schema)||[]),te.guardianSchema=z((null==l?void 0:l.schema)||[]),!1}),300),{deep:!0,immediate:!0}),r((()=>{var e,i,n,r;return null==(r=null==(n=null==(i=null==(e=null==te?void 0:te.insured)?void 0:e[te.currentIndex])?void 0:i.beneficiaryList)?void 0:n[te.currentBenifitIndex])?void 0:r.personVO}),((e,i)=>{var n,r,a,o;(null==(o=null==(a=null==(r=null==(n=null==te?void 0:te.insured)?void 0:n[te.currentIndex])?void 0:r.beneficiaryList)?void 0:a[te.currentBenifitIndex])?void 0:o.personVO)&&(null==e?void 0:e.relationToInsured)!==(null==i?void 0:i.relationToInsured)&&p("受益人关系变动了+++++")}),{deep:!0,immediate:!0}),r((()=>{var e,i,n,r;return null==(r=null==(n=null==(i=null==(e=null==te?void 0:te.insured)?void 0:e[te.currentIndex])?void 0:i.guardian)?void 0:n.personVO)?void 0:r.relationToInsured}),((e,i)=>{e!==i&&i&&(p("监护人关系变动了+++++"),Object.assign(te.insured[te.currentIndex],{guardian:{personVO:{relationToInsured:e}}}))}));const ke=i(!1);return r([()=>{const{holder:e,insuredList:i=[]}=h.modelValue,n=b(i)?i.map((e=>{var i;return console.log("beneficiaryList",be(null==(i=e.beneficiaryList)?void 0:i[0])),{config:e.config,personVO:be(e),guardian:{personVO:e.guardian||{}},beneficiaryList:b(e.beneficiaryList)?e.beneficiaryList.map((({config:e,...i})=>({config:e,personVO:be(i)}))):[]}})):[];return[null==e?void 0:e.config,be(e),n]},()=>te.config,()=>te.initInsuredIList],$((([[e,i,n],r,a],[[o,s,l],t,d])=>{if(JSON.stringify(e)===JSON.stringify(o)&&JSON.stringify(i)===JSON.stringify(s)&&JSON.stringify(n)===JSON.stringify(l)&&JSON.stringify(a)===JSON.stringify(d)&&ke.value)return;ke.value=!0,Object.assign(te.holder.config,e),console.log("投保人数据===",z(te.holder.personVO),z(i)),console.log("投保人数据===",z(te.holder.personVO),z(i)),Object.assign(te.holder.personVO,i);const{length:u}=n||[],{length:c}=te.insured,{length:m,0:f={},[m-1]:p}=te.initInsuredIList,{multiInsuredMaxNum:v=1,multiInsuredMinNum:g=1,multiInsuredSupportFlag:V}=(null==te?void 0:te.config)||{},O=h.isView||u>c?Math.min(u,v):c||g,b=z(n);te.insured=Array.from({length:O}).reduce(((e,i,n)=>{const{personVO:r,config:a={},guardian:o,beneficiaryList:s}=(null==b?void 0:b[n])||{},l=z(0===n?f:p);return e[n]?(e[n].schema=l.schema,y(e[n],{...z(l),personVO:r,config:a,guardian:o,beneficiaryList:s})):e[n]={...z(l),personVO:r,config:a,guardian:o,beneficiaryList:s,nanoid:I()},e}),te.insured)}),0),{deep:!0,immediate:!0}),r((()=>te.list),((e,i)=>{e&&(te.list=e)})),c({validate:Oe,validateTrialFields:he,validateHolder:(...e)=>{var i;return null==(i=se.value)?void 0:i.validate(...e)},canTrail:()=>te.trialValidated}),E((()=>{W({currentIndex:te.currentIndex,currentBenifitIndex:te.currentBenifitIndex,scrollTop:G.value})})),P((()=>{const e=X(),i=Z();te.currentType=K.query.selectedType||te.currentType,i&&(te.currentIndex=i.currentIndex,te.currentBenifitIndex=i.currentBenifitIndex,document.documentElement.scrollTo(0,i.scrollTop),ee()),e&&(Ve(e),ie())})),(e,i)=>{var n,r;const c=H,m=S,f=R;return a(),L(C,null,[t(Se)&&t(pe)?(a(),o(t(u),{key:0,ref_key:"holderFormRef",ref:se,title:"投保人信息",class:"personal-info-card",model:t(te).holder.personVO,schema:t(te).holder.schema,config:t(te).holder.config,"is-view":e.isView,"extra-provision":{objectType:t(d).HOLDER,objectId:null==(r=null==(n=t(te).holder)?void 0:n.personVO)?void 0:r.id},onOcr:ve},{customer:s((()=>[t(ge)?(a(),L("div",{key:0,class:"choose-customer",onClick:i[0]||(i[0]=e=>ye("holder",1,0))},[x(c,{name:"customer",color:"#333"})])):k("",!0)])),_:1},8,["model","schema","config","is-view","extra-provision"])):k("",!0),t(Le)&&!e.isOnlyHolder?(a(),L(C,{key:1},[(a(!0),L(C,null,w(t(te).insured,((i,n)=>{var r;return a(),o(de,U({ref_for:!0,ref_key:"insuredFormRef",ref:le,key:`${i.nanoid}_${n}`,modelValue:i.personVO,"onUpdate:modelValue":e=>i.personVO=e,"beneficiary-list":i.beneficiaryList,"onUpdate:beneficiaryList":e=>i.beneficiaryList=e,guardian:i.guardian,"onUpdate:guardian":e=>i.guardian=e,title:""+(t(te).insured.length>1?`被保人${n+1}`:"被保人信息"),"holder-person-v-o":t(te).holder.personVO},i,{"beneficiary-schema":t(te).beneficiarySchema,"guardian-schema":t(te).guardianSchema,"is-view":e.isView,"multi-beneficiary-num":null==(r=t(te).config)?void 0:r.multiBeneficiaryMaxNum}),{riskList:s((()=>[l(e.$slots,"riskInfo",{insuredIndex:n},void 0,!0)])),customer:s((()=>[1!=+i.personVO.relationToHolder&&t(ge)?(a(),L("div",{key:0,class:"choose-customer",onClick:e=>ye("insured",n,0,i.personVO.relationToHolder)},[x(c,{name:"customer",color:"#333"})],8,ue)):k("",!0)])),guardianCustomer:s((e=>[t(ge)?(a(),L("div",{key:0,class:"choose-customer",onClick:e=>ye("guardian",n,0,i.guardian.personVO.relationToInsured)},[x(c,{name:"customer",color:"#333"})],8,ce)):k("",!0)])),benefitCustomer:s((e=>[t(ge)?(a(),L("div",{key:0,class:"choose-customer",onClick:r=>{var a;return ye("benifit",n,null==e?void 0:e.index,null==(a=i.beneficiaryList[null==e?void 0:e.index])?void 0:a.personVO.relationToInsured)}},[x(c,{name:"customer",color:"#333"})],8,me)):k("",!0)])),default:s((()=>[!e.isView&&n+1>t(te).config.multiInsuredMinNum?(a(),L("span",{key:0,class:"delete-button",onClick:e=>(e=>{F.confirm({message:"确定要删除该被保人吗？"}).then((()=>{te.insured.splice(e,1)}))})(n)},[x(c,{name:"delete",color:"var(--van-primary-color)"})],8,fe)):k("",!0)])),_:2},1040,["modelValue","onUpdate:modelValue","beneficiary-list","onUpdate:beneficiaryList","guardian","onUpdate:guardian","title","holder-person-v-o","beneficiary-schema","guardian-schema","is-view","multi-beneficiary-num"])})),128)),!e.isView&&t(Te)?(a(),o(f,{key:0,class:"add-button-wrap"},{title:s((()=>[N("span",{class:"add-button",onClick:Ie},[x(m,{name:"plus"}),j("添加被保人")])])),_:1})):k("",!0)],64)):k("",!0)],64)}}}),[["__scopeId","data-v-74e461f0"]]);export{ve as P};
