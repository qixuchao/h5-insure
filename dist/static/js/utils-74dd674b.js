import{ad as i,af as e,ag as t,ah as a}from"./index-6a1895a4.js";import{q as r}from"./createProposal-e2b259e0.js";import"./trial-90c99342.js";import"./PolicyInfo-a5aaff20.js";const o=async({proposalId:i,productCode:e,tenantId:t,proposalInsuredId:a},o)=>{const n=(await r({id:i,tenantId:t})).data,l={holder:{},insuredVOList:[],productCode:e};l.holder={personVO:null==n?void 0:n.holder},l.insuredVOList=null==n?void 0:n.insuredList.filter((i=>i.id===+a)).map((i=>({personVO:{age:i.age,birthday:i.birthday,bmi:i.bmi,certNo:i.certNo,certType:i.certType,email:i.email,gender:i.gender,hasSocialInsurance:i.hasSocialInsurance,height:i.height,holderRelation:i.holderRelation,insureAreaCode:i.insureAreaCode,insureCityCode:i.insureCityCode,insureProvinceCode:i.insureProvinceCode,mobile:i.mobile,name:i.name,occupationClass:i.occupationClass,occupationCodeList:i.occupationCode,smokeFlag:i.smokeFlag,socialFlag:i.socialFlag,weight:i.weight},productPlanVOList:i.proposalInsuredProductList.map((i=>({insurerCode:null,planCode:"",relationToHolder:"1",riskVOList:i.proposalProductRiskList.map((i=>({amount:i.amount,annuityDrawDate:i.annuityDrawDate,annuityDrawType:i.annuityDrawType,chargePeriod:i.chargePeriod,copy:i.copy,coveragePeriod:i.coveragePeriod,liabilityVOList:i.liabilityVOList.map((i=>({liabilityAmount:null,liabilityAttributeType:i.liabilityAttributeType,liabilityAttributeValueList:i.liabilityAttributeValueList,liabilityCode:i.liabilityCode,liabilityId:i.liabilityId,liabilityRateType:null,liabilityValue:null}))),mainRiskCode:i.mainRiskCode,mainRiskId:i.mainRiskId,paymentFrequency:i.paymentFrequency,premium:i.premium,riskCategory:i.riskCategory,riskCode:i.riskCode,riskId:i.riskId,riskName:i.riskName,riskType:i.riskType})))})))}))),null==o||o(l)},n=(i,e,t)=>{const r={...t,...i},{insuredPremiumList:o=[],initialAmount:n,initialPremium:l=0}=e||{};return r.premium=l,r.orderAmount=l,r.orderRealAmount=l,r.insuredList=(r.insuredList||[]).map(((i,e)=>({...i,certType:i.certType||a.CERT,certNo:(i.certNo||"").toLocaleUpperCase(),productList:(i.productList||[]).map(((i,t)=>{var a,r,n;return{...i,premium:null==(n=null==(r=null==(a=null==o?void 0:o[e])?void 0:a.productPremiumList)?void 0:r[t])?void 0:n.totalPremium,riskList:(i.riskList||[]).map(((i,a)=>{var r,n,s,u;const{initialAmount:m,initialPremium:d,unitAmount:c,unitPremium:p}=(null==(u=null==(s=null==(n=null==(r=null==o?void 0:o[e])?void 0:r.productPremiumList)?void 0:n[t])?void 0:s.riskPremiumDetailVOList)?void 0:u[a])||{};return{...i,initialAmount:m||i.initialAmount,initialPremium:d||i.initialPremium,unitAmount:c||i.unitAmount,unitPremium:p||i.unitPremium,regularPremium:l,totalPremium:l}}))}}))}))),r},l=async i=>{const{holder:e,insuredList:a}=i,{mobile:r,verificationCode:o}=e,n=[];o&&n.push(await t({mobile:r,smsCode:o})),a.forEach((async i=>{const{mobile:e,verificationCode:a}=i;a&&n.push(await t({mobile:e,smsCode:a}))}));const l=await Promise.all(n);return console.log("result: ",l),l},s=()=>i.get(`${e}_userInfo`);export{s as g,o as p,n as t,l as v};
